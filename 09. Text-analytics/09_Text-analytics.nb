Notebook[{Cell[
CellGroupData[{Cell[
TextData[{"Data"," ","Science"," ","and"," ","Machine"," ","Learning"}],
"Title",ExpressionUUID -> "b651a0c9-19d7-4029-aa43-fd384032c89e"],Cell[
CellGroupData[
{Cell[
TextData[{"Lab"," ","session"," ","09",StyleBox[RowBox[{":"," "}]],"Text"," ","analytics"}],
"Subtitle",ExpressionUUID -> "69743b80-e7a9-4b3b-a26c-66b0bc1cd881"],Cell[
CellGroupData[
{Cell[
TextData[{"Accessing"," ","text"}],"Section",ExpressionUUID -> "37ee715e-5b46-4828-8c0d-e86d3629a519"],Cell[
CellGroupData[
{Cell[
TextData[{"Import"," ","text"}],"Subsection",ExpressionUUID -> "5ed99346-f384-4d97-b3b2-1c8c8ff3283a"],Cell[
TextData[
{"You"," ","can"," ","import"," ","from"," ","a"," ","variety"," ","of"," ","sources",StyleBox[
RowBox[{","," "}]],"including","..."}],"Text",ExpressionUUID -> "3c61f531-37e6-429a-8ff9-9c3b4e8319e2"],Cell[
TextData[
{"Wikipedia"," ","Articles",":"}],"Item",ExpressionUUID -> "bd537ac6-f1f2-4e19-9451-e327f15d4192"],Cell[
BoxData[
RowBox[{RowBox[{"alKhwarizmi"," ","="," ",RowBox[{"WikipediaData","[","\"Muhammad ibn Musa al-Khwarizmi\"","]"}]}],";"}]],
"Input",CellLabel -> "In[2]:= ",ExpressionUUID -> "101cb2d6-3fac-4a07-9f83-7e6a900270de"],Cell[
TextData[
{"Webpages",StyleBox[RowBox[{","," "}]],"e",".","g",StyleBox[RowBox[{"."," "}]],"from"," ",ButtonBox[
RowBox[{"Stanford"," ","Encyclopedia"," ","of"," ","Philosophy"}],BaseStyle -> "HyperlinkActionNew",
ButtonData -> {URL["https://plato.stanford.edu/"],None},ButtonNote -> "https://plato.stanford.edu/"]}],
"Item",ExpressionUUID -> "7ce58bae-56f0-4d69-bcae-762b9dec9ed4"],Cell[
BoxData[RowBox[
{RowBox[{"publicGood"," ","="," ",RowBox[{"Import","[",RowBox[{"\"https://plato.stanford.edu/entries/public-goods/\"",","," ","\"Plaintext\""}],"]"}]}],";"}]],
"Input",CellLabel -> "In[8]:= ",ExpressionUUID -> "17032efd-1c05-467c-a913-c36fa811b4de"],Cell[
TextData[
{"Books",StyleBox[RowBox[{","," "}]],"e",".","g",StyleBox[RowBox[{"."," ","\""}]],"An"," ","Inquiry"," ","into"," ","the"," ","Nature"," ","and"," ","Causes"," ","of"," ","the"," ","Wealth"," ","of"," ","Nations",StyleBox[
RowBox[{"\""," "}]],"by"," ","Adam"," ","Smith",StyleBox[RowBox[{","," "}]],"from"," ","the"," ",ButtonBox[
RowBox[{"Project"," ","Gutenberg"}],BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL[
"https://www.gutenberg.org/"],None},ButtonNote -> "https://www.gutenberg.org/"],":"}],
"Item",ExpressionUUID -> "f6b3d414-6814-4574-bd04-b08db0039219"],Cell[
BoxData[RowBox[
{RowBox[{"wealthofNations"," ","="," ",RowBox[{"Import","[","\"https://www.gutenberg.org/cache/epub/38194/pg38194.txt\"","]"}]}],";"}]],
"Input",CellLabel -> "In[9]:= ",ExpressionUUID -> "fe9164d8-bb76-4566-92a2-dd77d15b2754"],Cell[
TextData[
{"From"," ",ButtonBox["PDF",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL[
"https://reference.wolfram.com/language/ref/format/PDF.html"],None},ButtonNote -> "https://reference.wolfram.com/language/ref/format/PDF.html"]," ","files",":"}],
"Item",ExpressionUUID -> "aafa9489-7986-4f7e-a220-8d2b647fb90a"],Cell[
BoxData[RowBox[
{RowBox[{"circularEco","=",RowBox[{"Import","[",RowBox[{"\"MGT-492/Week_09_Text-analytics/E4S_Circular_Economy.pdf\"",","," ","\"Plaintext\""}],"]"}]}],";"}]],
"Input",ExpressionUUID -> "e6290754-102a-4177-807e-b8694e58e615"],Cell[
TextData[
{"Tweets",StyleBox[RowBox[{" ","-"," "}]],"you"," ","need"," ","a"," ","Twitter"," ","account",":"}],
"Item",ExpressionUUID -> "893f95b8-985b-40e2-98c3-849c4a8d71ea"],Cell[
BoxData[RowBox[
{RowBox[{RowBox[{"twitter","=",RowBox[{"ServiceConnect","[",RowBox[{"\"Twitter\"",",","\"New\""}],"]"}]}],";"}],"\[IndentingNewLine]",RowBox[
{"twitter","[",RowBox[{"\"UserData\"",",",RowBox[{"\"Username\"","\[Rule]","\"elonmusk\""}]}],"]"}]}]],
"Input",ExpressionUUID -> "984f7f2f-0414-426a-a756-2e265f3a4d04"],Cell[
TextData[
{"And"," ","much"," ","more"," ","e",".","g",StyleBox[RowBox[{"."," "}]],"subtitles"," ","from"," ",ButtonBox[
"video",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/format/MP4.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/format/MP4.html"]}],"Item",
ExpressionUUID -> "37591103-12d8-443c-8ad2-bebf73b7124a"],Cell[
TextData[{"\n","Since"," ","text"," ","are"," ","larges"," ","objects",StyleBox[
RowBox[{","," "}]],"to"," ","visualize"," ","your"," ","data"," ","you"," ","can"," ","display"," ","a"," ",ButtonBox[
"Snippet",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/Snippet.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/Snippet.html"]," ","or"," ","generate"," ","a"," ",ButtonBox[
"WordCloud",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/WordCloud.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/WordCloud.html"],":"}],
"Text",ExpressionUUID -> "899dbf6d-416d-4391-87e2-2a1f71f158cf"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{"Snippet","[",RowBox[{"alKhwarizmi",",","4"}],"]"}],"\n",RowBox[
{"WordCloud","[","alKhwarizmi","]"}]}],"Input",CellLabel -> "In[64]:= ",ExpressionUUID -> "fa1b37b3-e419-4044-8c64-bd9161e96138"],Cell[
BoxData[
"\"Mu\:1e25ammad ibn M\:016bs\[ABar] al-Khw\[ABar]rizm\:012b (Persian: \:0645\:062d\:0645\:062f \:0628\:0646 \:0645\:0648\:0633\:06cc \:062e\:0648\:0627\:0631\:0632\:0645\:06cc\:200e, romanized:\\nMo\:1e25ammad ben Mus\[ABar] Khw\[ABar]razmi; c.\[ThinSpace]780 \[Dash] c.\[ThinSpace]850), or al-Khwarizmi and formerly\\nLatinized as Algorithmi, was a Persian polymath who produced vastly influential\\nworks in mathematics, astronomy, and geography. Around 820 CE he was appointed\"",
StandardForm],"Output",CellLabel -> "Out[64]= ",ExpressionUUID -> "ab94e94a-2eaa-440b-b5e3-28c593ca85b3"],Cell[
BoxData[
GraphicsBox[{StyleBox[{InsetBox[BoxData[FormBox[StyleBox["\"al-Khw\[ABar]rizm\:012b\"",
FontSize -> Scaled[0.13987022350396539`],FontColor -> RGBColor[0.560181`,0.691569`,
0.194885`],StripOnInput -> False],TraditionalForm]],{0,0},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Arabic\"",FontSize -> Scaled[0.1917808219178082`],FontColor -> RGBColor[
0.368417`,0.506779`,0.709798`],StripOnInput -> False],TraditionalForm]],{-1.5`,-46.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"algebra\"",FontSize -> Scaled[
0.13121845710165825`],FontColor -> RGBColor[0.528488`,0.470624`,0.701351`],StripOnInput -> False],
TraditionalForm]],{5.5`,39.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"Khw\[ABar]rizm\:012b's\"",FontSize -> Scaled[0.11391492429704399`],FontColor -> RGBColor[
0.647624`,0.37816`,0.614037`],StripOnInput -> False],TraditionalForm]],{-0.5`,73.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"mathematics\"",FontSize -> Scaled[
0.09661139149242971`],FontColor -> RGBColor[0.40082222609352647`,0.5220066643438841`,
0.85`],StripOnInput -> False],TraditionalForm]],{-0.5`,-85.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Book\"",FontSize -> Scaled[0.13987022350396539`],FontColor -> RGBColor[
0.922526`,0.385626`,0.209179`],StripOnInput -> False],TraditionalForm]],{7.5`,108.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"work\"",FontSize -> Scaled[
0.12256669069935111`],FontColor -> RGBColor[1,0.75`,0],StripOnInput -> False],TraditionalForm]],
{-0.5`,-116.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"equation\"",
FontSize -> Scaled[0.0706560922855083`],FontColor -> RGBColor[0.28026441037696703`,
0.715`,0.4292089322474965`],StripOnInput -> False],TraditionalForm]],{-92.5`,100.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"geography\"",FontSize -> Scaled[
0.06200432588320116`],FontColor -> RGBColor[0.5407932311309059`,0.715`,0.09762679674248334`],
StripOnInput -> False],TraditionalForm]],{95.5`,-104.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Latin\"",FontSize -> Scaled[0.11391492429704399`],FontColor -> RGBColor[
0.571589`,0.586483`,0.`],StripOnInput -> False],TraditionalForm]],{-110.5`,37.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Khwarizmi's\"",FontSize -> Scaled[
0.0706560922855083`],FontColor -> RGBColor[0.5833680111493557`,0.4126186601628758`,
0.8290799721266107`],StripOnInput -> False],TraditionalForm]],{-25.5`,135.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"equations\"",FontSize -> Scaled[0.06200432588320116`],
FontColor -> RGBColor[0.6753413537738198`,0.3589675436319385`,0.5991466155654507`],
StripOnInput -> False],TraditionalForm]],{-94.5`,-109.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"al-Khwarizmi\"",FontSize -> Scaled[0.06200432588320116`],
FontColor -> RGBColor[0.28240003484173815`,0.6090799721266095`,0.7538800418100857`],
StripOnInput -> False],TraditionalForm]],{70.5`,-142.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"astronomical\"",FontSize -> Scaled[0.06200432588320116`],
FontColor -> RGBColor[0.9324333565611593`,0.5282889043741062`,0.0921900209050434`],
StripOnInput -> False],TraditionalForm]],{-54.5`,-144.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"displaystyle\"",FontSize -> Scaled[0.05335255948089401`],
FontColor -> RGBColor[0.7678998606330495`,0.7317110956258943`,0.`],StripOnInput -> False],
TraditionalForm]],{111.5`,97.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"ibn\"",FontSize -> Scaled[0.12256669069935111`],FontColor -> RGBColor[0.363898`,
0.618501`,0.782349`],StripOnInput -> False],TraditionalForm]],{106.5`,34.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"translation\"",FontSize -> Scaled[
0.06200432588320116`],FontColor -> RGBColor[0.16397784358994957`,0.7038177251280403`,
0.6117734123079395`],StripOnInput -> False],TraditionalForm]],{99.5`,125.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Balancing\"",FontSize -> Scaled[0.05335255948089401`],
FontColor -> RGBColor[0.6184987019729621`,0.39212575718243875`,0.7412532450675947`],
StripOnInput -> False],TraditionalForm]],{68.5`,148.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"problems\"",FontSize -> Scaled[0.05335255948089401`],
FontColor -> RGBColor[0.9637822400302223`,0.5764112001511111`,0.0977879519184`],StripOnInput -> False],
TraditionalForm]],{-117.5`,117.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"equal\"",FontSize -> Scaled[0.0706560922855083`],FontColor -> RGBColor[0.736782672705901`,
0.358`,0.5030266573755369`],StripOnInput -> False],TraditionalForm]],{-115.5`,-26.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Completion\"",FontSize -> Scaled[
0.044700793078586876`],FontColor -> RGBColor[0.9052934053395919`,0.510195603559728`,
0.06776406480563275`],StripOnInput -> False],TraditionalForm]],{113.5`,-52.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"2\"",FontSize -> Scaled[0.18312905551550107`],
FontColor -> RGBColor[0.880722`,0.611041`,0.142051`],StripOnInput -> False],TraditionalForm]],
{-111.5`,-64.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"astronomy\"",
FontSize -> Scaled[0.044700793078586876`],FontColor -> RGBColor[0.9810598048862722`,
0.7553955338762525`,0.`],StripOnInput -> False],TraditionalForm]],{95.5`,-25.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"roots\"",FontSize -> Scaled[
0.07930785868781542`],FontColor -> RGBColor[0.9728288904374106`,0.621644452187053`,
0.07336199581899142`],StripOnInput -> False],TraditionalForm]],{125.5`,-69.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"al-jabr\"",FontSize -> Scaled[0.05335255948089401`],
FontColor -> RGBColor[0.8613800418100862`,0.48092002787339083`,0.02824203762907758`],
StripOnInput -> False],TraditionalForm]],{-125.5`,-129.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"tables\"",FontSize -> Scaled[0.0706560922855083`],FontColor -> RGBColor[
0.8996399512215667`,0.7463488834690629`,0.`],StripOnInput -> False],TraditionalForm]],
{-121.5`,136.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"works\"",
FontSize -> Scaled[0.0706560922855083`],FontColor -> RGBColor[0.8439466852489265`,
0.3467106629502147`,0.3309221912517893`],StripOnInput -> False],TraditionalForm]],
{136.5`,52.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Indian\"",FontSize -> Scaled[
0.0706560922855083`],FontColor -> RGBColor[0.838355547812947`,0.44746667828057946`,
0.0208888695323676`],StripOnInput -> False],TraditionalForm]],{-136.5`,62.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Mu\:1e25ammad\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.7175796237092107`,0.7261199581899123`,
0.`],StripOnInput -> False],TraditionalForm]],{85.5`,-124.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Diophantus\"",FontSize -> Scaled[0.03604902667627974`],
FontColor -> RGBColor[0.7896667828057927`,0.3575666434388414`,0.4213886953236787`],
StripOnInput -> False],TraditionalForm]],{-13.5`,152.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"hundred\"",FontSize -> Scaled[0.05335255948089401`],FontColor -> RGBColor[
0.8878600487784333`,0.33792799024431336`,0.2577332520359445`],StripOnInput -> False],
TraditionalForm]],{-0.5`,-163.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"number\"",FontSize -> Scaled[0.05335255948089401`],FontColor -> RGBColor[0.35558897405758294`,
0.5505288207539337`,0.8417067688690995`],StripOnInput -> False],TraditionalForm]],
{136.5`,70.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Calculation\"",
FontSize -> Scaled[0.044700793078586876`],FontColor -> RGBColor[0.23716678280579248`,
0.645266573755366`,0.699600139366951`],StripOnInput -> False],TraditionalForm]],{-0.5`,165.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"algorithm\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.8607200975568693`,0.34335598048862614`,
0.30296650407188447`],StripOnInput -> False],TraditionalForm]],{-141.5`,-59.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"squares\"",FontSize -> Scaled[0.044700793078586876`],
FontColor -> RGBColor[0.428777913273419`,0.5052332520359486`,0.85`],StripOnInput -> False],
TraditionalForm]],{-30.5`,-23.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"terms\"",FontSize -> Scaled[0.06200432588320116`],FontColor -> RGBColor[0.7748409210981391`,
0.358`,0.4444755060028629`],StripOnInput -> False],TraditionalForm]],{-73.5`,154.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Algoritmi\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.3103557220216354`,0.5867154223826917`,
0.7874268664259625`],StripOnInput -> False],TraditionalForm]],{-133.5`,-96.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"name\"",FontSize -> Scaled[0.06200432588320116`],
FontColor -> RGBColor[0.47401116530937026`,0.47809330081437784`,0.85`],StripOnInput -> False],
TraditionalForm]],{60.5`,-157.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"translated\"",FontSize -> Scaled[0.044700793078586876`],FontColor -> RGBColor[
0.7513196300394465`,0.358`,0.48066210763162087`],StripOnInput -> False],TraditionalForm]],
{-70.5`,-161.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"arithmetic\"",
FontSize -> Scaled[0.044700793078586876`],FontColor -> RGBColor[0.5472001045252132`,
0.43417993728487203`,0.85`],StripOnInput -> False],TraditionalForm]],{73.5`,164.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Europe\"",FontSize -> Scaled[
0.044700793078586876`],FontColor -> RGBColor[0.6361597700445392`,0.7170733077827265`,
0.`],StripOnInput -> False],TraditionalForm]],{-144.5`,82.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Compendious\"",FontSize -> Scaled[0.0273972602739726`],
FontColor -> RGBColor[0.922066817647527`,0.5213778784316846`,0.08286013588277422`],
StripOnInput -> False],TraditionalForm]],{129.5`,-37.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Brahmagupta\"",FontSize -> Scaled[0.0273972602739726`],
FontColor -> RGBColor[0.26512246998569167`,0.6229020240114467`,0.73314696398283`],
StripOnInput -> False],TraditionalForm]],{127.5`,-85.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Kit\[ABar]b\"",FontSize -> Scaled[0.06200432588320116`],
FontColor -> RGBColor[0.8857244243136628`,0.3764133635295058`,0.1393110607841571`],
StripOnInput -> False],TraditionalForm]],{133.5`,143.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"century\"",FontSize -> Scaled[0.03604902667627974`],FontColor -> RGBColor[
0.8745421494417032`,0.39318677583744527`,0.11135537360425793`],StripOnInput -> False],
TraditionalForm]],{-68.5`,-124.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"numbers\"",FontSize -> Scaled[0.044700793078586876`],FontColor -> RGBColor[0.9038177251280404`,
0.3492734123079395`,0.18454431282010084`],StripOnInput -> False],TraditionalForm]],
{118.5`,-159.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"x\"",FontSize -> Scaled[
0.13121845710165825`],FontColor -> RGBColor[0.772079`,0.431554`,0.102387`],StripOnInput -> False],
TraditionalForm]],{153.5`,-4.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"manuscript\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.4177882075393331`,
0.715`,0.25417864494993975`],StripOnInput -> False],TraditionalForm]],{145.5`,-121.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"elementary\"",FontSize -> Scaled[
0.0273972602739726`],FontColor -> RGBColor[0.6670481226429111`,0.3638052617916352`,
0.6198796933927223`],StripOnInput -> False],TraditionalForm]],{-126.5`,152.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"square\"",FontSize -> Scaled[0.03604902667627974`],
FontColor -> RGBColor[0.969373377466199`,0.6043668873309952`,0.08269188084126262`],
StripOnInput -> False],TraditionalForm]],{-147.5`,-41.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"numerals\"",FontSize -> Scaled[0.03604902667627974`],
FontColor -> RGBColor[0.9046334610863751`,0.334573307782725`,0.22977756485604156`],
StripOnInput -> False],TraditionalForm]],{-143.5`,-147.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"longitudes\"",FontSize -> Scaled[0.0273972602739726`],
FontColor -> RGBColor[0.7042770479220728`,0.358`,0.5530353108891188`],StripOnInput -> False],
TraditionalForm]],{-143.5`,15.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"quadratic\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.6672593867853922`,
0.7205288207539324`,0.`],StripOnInput -> False],TraditionalForm]],{-145.5`,-71.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"methods\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.6319174318193065`,0.38429816477207124`,
0.7077064204517338`],StripOnInput -> False],TraditionalForm]],{-65.5`,165.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"latitudes\"",FontSize -> Scaled[0.03604902667627974`],
FontColor -> RGBColor[0.8781534541180211`,0.4921023027453475`,0.04333810870621905`],
StripOnInput -> False],TraditionalForm]],{-126.5`,163.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"written\"",FontSize -> Scaled[0.044700793078586876`],
FontColor -> RGBColor[0.2187618985811806`,0.715`,0.5074848563512248`],StripOnInput -> False],
TraditionalForm]],{-131.5`,-161.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"Ptolemy's\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.6453361616656581`,
0.37647057236169945`,0.6741595958358548`],StripOnInput -> False],TraditionalForm]],
{131.5`,160.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"longitude\"",
FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.9603267270590103`,
0.5591336352950514`,0.10711783694067224`],StripOnInput -> False],TraditionalForm]],
{156.5`,23.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"derived\"",
FontSize -> Scaled[0.03604902667627974`],FontColor -> RGBColor[0.9930578157165594`,
0.7227890785827968`,0.01874389756528967`],StripOnInput -> False],TraditionalForm]],
{53.5`,-173.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Ptolemy\"",
FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.8949268664259606`,
0.5032845776173072`,0.05843417978336459`],StripOnInput -> False],TraditionalForm]],
{153.5`,35.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"second\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.38354466123747527`,0.5323732032575149`,
0.85`],StripOnInput -> False],TraditionalForm]],{-55.5`,-174.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"wrote\"",FontSize -> Scaled[0.044700793078586876`],FontColor -> RGBColor[
0.8342400905885153`,0.4628267270590103`,0.0038160815296638794`],StripOnInput -> False],
TraditionalForm]],{-161.5`,96.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"kept\"",FontSize -> Scaled[0.03604902667627974`],FontColor -> RGBColor[0.19193353076984873`,
0.681453175384121`,0.6453202369238185`],StripOnInput -> False],TraditionalForm]],
{-92.5`,7.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"copy\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.5019668524892619`,0.46131988850644284`,
0.85`],StripOnInput -> False],TraditionalForm]],{-59.5`,117.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"solving\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[
0.9107287510704583`,0.33890687339431275`,0.20182187767614543`],StripOnInput -> False],
TraditionalForm]],{-161.5`,0.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"1\"",FontSize -> Scaled[0.09661139149242971`],FontColor -> RGBColor[0.915`,0.3325`,
0.2125`],StripOnInput -> False],TraditionalForm]],{-154.5`,-19.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"library\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[
0.7989994773739094`,0.735166608597101`,0.`],StripOnInput -> False],TraditionalForm]],
{159.5`,-27.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"tfrac\"",FontSize -> Scaled[
0.044700793078586876`],FontColor -> RGBColor[0.9784200278733908`,0.649600139366954`,
0.058265924741844846`],StripOnInput -> False],TraditionalForm]],{162.5`,-98.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Indorum\"",FontSize -> Scaled[0.0273972602739726`],
FontColor -> RGBColor[0.15725938678540247`,0.715`,0.5857607804549424`],StripOnInput -> False],
TraditionalForm]],{-148.5`,-82.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"Numero\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.8064401951137368`,
0.3542119609772526`,0.39343300814377197`],StripOnInput -> False],TraditionalForm]],
{-0.5`,-175.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"texts\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.845266573755366`,0.437100139366951`,
0.03816643438841502`],StripOnInput -> False],TraditionalForm]],{160.5`,82.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"p\"",FontSize -> Scaled[0.06200432588320116`],
FontColor -> RGBColor[0.9874666782805795`,0.6948333914028977`,0.033839968642435214`],
StripOnInput -> False],TraditionalForm]],{-159.5`,33.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Persian\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[
0.2198892179497479`,0.6590886256402017`,0.6788670615396974`],StripOnInput -> False],
TraditionalForm]],{164.5`,8.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"used\"",FontSize -> Scaled[0.03604902667627974`],FontColor -> RGBColor[0.5750747800184488`,
0.4174563783225715`,0.8498130499538777`],StripOnInput -> False],TraditionalForm]],
{-156.5`,-112.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"term\"",
FontSize -> Scaled[0.03604902667627974`],FontColor -> RGBColor[0.7277983389807635`,
0.358`,0.5168487092603637`],StripOnInput -> False],TraditionalForm]],{-166.5`,44.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Muslim\"",FontSize -> Scaled[
0.0273972602739726`],FontColor -> RGBColor[0.9986489531525362`,0.7507447657626809`,
0.0036478264881522893`],StripOnInput -> False],TraditionalForm]],{91.5`,-171.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"100\"",FontSize -> Scaled[
0.044700793078586876`],FontColor -> RGBColor[0.8564488486273256`,0.42032672705901153`,
0.06612212156831418`],StripOnInput -> False],TraditionalForm]],{166.5`,-50.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"known\"",FontSize -> Scaled[0.0273972602739726`],
FontColor -> RGBColor[0.8510135028964549`,0.47400900193096995`,0.018912152606809424`],
StripOnInput -> False],TraditionalForm]],{161.5`,-109.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"map\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[
0.8633598745697435`,0.40996018814538476`,0.08339968642435877`],StripOnInput -> False],
TraditionalForm]],{28.5`,-22.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"Greek\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.9840111653093676`,
0.677555826546838`,0.04316985366470745`],StripOnInput -> False],TraditionalForm]],
{34.5`,175.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Hindu\"",FontSize -> Scaled[
0.0273972602739726`],FontColor -> RGBColor[0.7658565873730018`,0.358`,0.4582975578876895`],
StripOnInput -> False],TraditionalForm]],{80.5`,176.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"found\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[
0.4567336004533182`,0.4884598397280091`,0.85`],StripOnInput -> False],TraditionalForm]],
{-89.5`,-172.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"based\"",
FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.8335801463353031`,
0.3487839707329394`,0.3481997561078282`],StripOnInput -> False],TraditionalForm]],
{-87.5`,174.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"text\"",FontSize -> Scaled[
0.03604902667627974`],FontColor -> RGBColor[0.31827505306025683`,0.715`,0.3808317506505822`],
StripOnInput -> False],TraditionalForm]],{167.5`,-62.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"Ab\:016b\"",FontSize -> Scaled[0.03604902667627974`],
FontColor -> RGBColor[0.8493197142977551`,0.7407577460330839`,0.`],StripOnInput -> False],
TraditionalForm]],{169.5`,-75.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"q\"",FontSize -> Scaled[0.05335255948089401`],FontColor -> RGBColor[0.7132613816472081`,
0.358`,0.5392132590042952`],StripOnInput -> False],TraditionalForm]],{-73.5`,-64.5`},
Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"Liber\"",FontSize -> Scaled[
0.0273972602739726`],FontColor -> RGBColor[0.6102054708420535`,0.39696347534213544`,
0.7619863228948663`],StripOnInput -> False],TraditionalForm]],{-75.5`,51.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"ax2\"",FontSize -> Scaled[0.03604902667627974`],
FontColor -> RGBColor[0.9492067688690977`,0.5394711792460651`,0.10728609198218791`],
StripOnInput -> False],TraditionalForm]],{-171.5`,-11.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"fifty\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[
0.8926354502560807`,0.366046824615879`,0.15658862564020168`],StripOnInput -> False],
TraditionalForm]],{172.5`,-6.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"M\:016bs\[ABar]\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[
0.529922539669161`,0.44454647619850335`,0.85`],StripOnInput -> False],TraditionalForm]],
{162.5`,108.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"de\"",FontSize -> Scaled[
0.044700793078586876`],FontColor -> RGBColor[0.6536293927965667`,0.37163285420200276`,
0.6534265180085832`],StripOnInput -> False],TraditionalForm]],{-172.5`,-25.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"bx\"",FontSize -> Scaled[0.03604902667627974`],
FontColor -> RGBColor[0.6897400905885174`,0.358`,0.5753998606330502`],StripOnInput -> False],
TraditionalForm]],{-174.5`,26.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"50\"",FontSize -> Scaled[0.03604902667627974`],FontColor -> RGBColor[0.596786740995709`,
0.404791067752503`,0.7955331475107271`],StripOnInput -> False],TraditionalForm]],
{167.5`,94.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"like\"",FontSize -> Scaled[
0.0273972602739726`],FontColor -> RGBColor[0.8774935098648088`,0.34000129802703827`,
0.2750108168919853`],StripOnInput -> False],TraditionalForm]],{127.5`,81.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"820\"",FontSize -> Scaled[0.0273972602739726`],
FontColor -> RGBColor[0.9307395679624266`,0.7498043964402695`,0.`],StripOnInput -> False],
TraditionalForm]],{111.5`,108.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox[
"\"list\"",FontSize -> Scaled[0.0273972602739726`],FontColor -> RGBColor[0.3383114092015346`,
0.5643508726387724`,0.8209736910418415`],StripOnInput -> False],TraditionalForm]],
{87.5`,108.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"far\"",FontSize -> Scaled[
0.0273972602739726`],FontColor -> RGBColor[0.5788038738141875`,0.715`,0.049249615145579635`],
StripOnInput -> False],TraditionalForm]],{41.5`,14.5`},Center,Automatic],InsetBox[
BoxData[FormBox[StyleBox["\"c.\"",FontSize -> Scaled[0.03604902667627974`],FontColor -> RGBColor[
0.47929071933511125`,0.715`,0.1759027208462221`],StripOnInput -> False],TraditionalForm]],
{-98.5`,-12.5`},Center,Automatic],InsetBox[BoxData[FormBox[StyleBox["\"c\"",FontSize -> Scaled[
0.044700793078586876`],FontColor -> RGBColor[0.8168067340273636`,0.3521386531945273`,
0.3761554432877274`],StripOnInput -> False],TraditionalForm]],{22.5`,-50.5`},Center,
Automatic],InsetBox[BoxData[FormBox[StyleBox["\"\[Minus]\"",FontSize -> Scaled[0.05335255948089401`],
FontColor -> RGBColor[0.37977756485605163`,0.715`,0.3025558265468435`],StripOnInput -> False],
TraditionalForm]],{-0.5`,13.5`},Center,Automatic]},{{}},StripOnInput -> False]},PlotRange -> {{-183.`,182.`},{-182.`,181.`}},
DefaultBaseStyle -> {"Graphics",FontFamily -> "Source Sans Pro"},Method -> CompressedData[
"1:eJylUttKBDEMHVdFfBERn3zzG/wA2Ys3cGXYWXyvs6lbzDRDkoLz3f6A7YDuOpR5sdBy0iQnySHXb7Syh0VRyFF8np2onfxYq4BQXUawAGsC6oyC3xjuKu0Q5DQ6pkGpMerqQdLVLumBTbt1tTx5BTa1OvKj9U4ieAWWGMc3/fm6HYRcRLCOXB9LCgIlietZJ/usPVhzADmO4N6gQKbQnbVQq4w2lOZ8dO9bjFftwUhkqsRRDXLpf+A826cpyfl/cKWWFkwtOg/yd+6MVJYBLHEzDyzES9rArzgZ3hZNDQ14HeVNrX9WSbYpYsbXVcl8IT8scb7bjBJJM6v0Df+umJs="]],
StandardForm],"Output",CellLabel -> "Out[65]= ",ExpressionUUID -> "6fe92a7a-5581-4ab9-8a53-8e63f80b8729"]},
Open],ExpressionUUID -> "da2ff12c-dcc7-4817-a07d-d701650e2e20"]},{1}],ExpressionUUID -> "bd667035-a554-4bc4-b81a-d4a93c480d5e"],Cell[
CellGroupData[
{Cell[
TextData[{"Extracting"," ","sentences"}],"Subsection",ExpressionUUID -> "1c2915d8-7045-4065-ac4d-d22fa8222c0c"],Cell[
TextData[
{ButtonBox["TextSentences",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/TextSentences.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/TextSentences.html"]," ","gives"," ","a"," ","list"," ","of"," ","the"," ","identified"," ","sentences"," ","from"," ","a"," ","text",StyleBox[
RowBox[{" ","("}]],"string",")."}],"Text",ExpressionUUID -> "7b09d9ef-4010-4bb9-9ecb-b6d1f1999141"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{RowBox[{"wealthofNationsSentences"," ","="," ",RowBox[{"TextSentences","[","wealthofNations","]"}]}],";"}],"\n",RowBox[
{"wealthofNationsSentences","[",RowBox[{"[","160","]"}],"]"}]}],"Input",CellLabel -> "In[11]:= ",
ExpressionUUID -> "a812a4a4-6490-47d7-911e-ae6f0a6a0490"],Cell[
BoxData["\"Adam Smith, the celebrated author of 'An Inquiry into the Nature and\\nCauses of the Wealth of Nations,' was born in the town of Kirkaldy, on\\nthe 5th of June 1723.\"",
StandardForm],"Output",CellLabel -> "Out[12]= ",ExpressionUUID -> "460fd49e-191a-4400-9dec-5b921d03996b"]},
Open],ExpressionUUID -> "728e5789-885f-4c67-b6a6-d1f7b824f3f3"],Cell[
TextData[{"\n","Sentences"," ","may"," ","not"," ","be"," ","precisely"," ","identified"," ","in"," ","unstructured"," ","text",":"}],
"Text",ExpressionUUID -> "1c1beea6-cdab-41a2-b546-e2599998946a"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{RowBox[{"circularEcoSentences"," ","="," ",RowBox[{"TextSentences","[","circularEco","]"}]}],";"}],"\n",RowBox[
{"circularEcoSentences","[",RowBox[{"[","5","]"}],"]"}]}],"Input",CellLabel -> "In[65]:= ",
ExpressionUUID -> "1ac969c4-7a4f-4903-b22d-80456d5ec7f1"],Cell[
BoxData["\"Bending the line: Towards a Circular Economy | E4S White Paper | 3\\nTable of Contents\\nExecutive Summary.............................................................................................................................................................4\\n1 Introduction .......................................................................................................................................................................6\\n2 The Linear Economy and its Environmental Impact........................................................................................8\\n2.1 The linear economy has pushed the planet out of its boundaries .................................................9\\n2.2 Resource use is a at the heart of the problem.......................................................................................11\\n2.3 Market failures in the linear economy........................................................................................................12\\n2.4 Correcting environmental market failures.................................................................................................13\\n2.5 Summing up............................................................................................................................................................17\\n3 Circular Economy: a Sustainable Alternative.....................................................................................................18\\n3.1 Principles of a CE..................................................................................................................................................20\\n3.2 Differences between the linear and circular economy ........................................................................21\\n3.3 Possible benefits of the CE for environment and economy .............................................................22\\n3.4 Open questions .....................................................................................................................................................23\\n4 The Circular Economy in the Global Context...................................................................................................26\\n5 Bending the Line: Policies to Transition to a Circular Economy..............................................................29\\n5.1 Policies.......................................................................................................................................................................31\\n5.1.1 Move towards the use of renewable energy and resources....................................................31\\n5.1.2 Recycle materials at the end of life and use as inputs...............................................................32\\n5.1.3 Increase the lifespan of products .........................................................................................................33\\n5.1.4 Increase the use intensity of products through sharing............................................................35\\n5.1.5 Decrease waste..............................................................................................................................................36\\n5.2 Circularity indicators............................................................................................................................................37\\n6 Conclusion........................................................................................................................................................................39\\nReferences ............................................................................................................................................................................40\\nContact...................................................................................................................................................................................43\\nAbout E4S .............................................................................................................................................................................43\\nBending the line: Towards a Circular Economy | E4S White Paper | 4\\nExecutive Summary\\nEnglish\\nThe world is today operating in a linear \\neconomy that extracts natural resources, \\nproduces energy or goods which are \\ndisposed in the form of pollution or waste. \\nThis \[OpenCurlyDoubleQuote]take, make, waste\[CloseCurlyDoubleQuote] system has \\ngenerated prosperity and wealth in many \\nparts of the world, but has also polluted the \\nplanet and the atmosphere.\"",
StandardForm],"Output",CellLabel -> "Out[66]= ",ExpressionUUID -> "6041e735-e2ab-4416-a949-a9bc51e2864f"]},
Open],ExpressionUUID -> "de2a4134-7ecf-405b-a7a6-51f0d7cac669"],Cell[
TextData[{"\n","In"," ","such"," ","cases",StyleBox[
RowBox[{","," "}]],"you"," ","need"," ","to"," ","manipulate"," ","your"," ","text"," ","to"," ","extract"," ","the"," ","information"," ","you"," ","are"," ","looking"," ","for",".","\n","For"," ","instance",StyleBox[
RowBox[{","," "}]],"let's"," ","extract"," ","the"," ","English"," ","Executive"," ","Summary"," ","of"," ","the"," ","E4S"," ","white"," ","paper",StyleBox[
RowBox[{" ","\""}]],"Bending"," ","the"," ","line",StyleBox[RowBox[{":"," "}]],"Towards"," ","a"," ","Circular"," ","Economy","\"","\n","Here"," ","is"," ","the"," ","procedure",":","\n","\t","1",StyleBox[
RowBox[{"."," "}]],"We"," ","use"," ",ButtonBox["StringSplit",BaseStyle -> "HyperlinkActionNew",
ButtonData -> {URL["https://reference.wolfram.com/language/ref/StringSplit.html?q=StringSplit"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/StringSplit.html?q=StringSplit"]," ","to"," ","split"," ","the"," ","5th"," ","identified"," ","sentence"," ","in"," ","circularEcoSentences"," ","into"," ","two",StyleBox[
RowBox[{"."," "}]],"As"," ","second"," ","argument",StyleBox[RowBox[{" ","("}]],"pattern"," ","for"," ","splitting",StyleBox[
RowBox[{"),"," "}]],"we"," ","use"," ","the"," ","keyword",StyleBox[RowBox[{" ","\""}]],"English",StyleBox[
RowBox[{"\""," "}]],"because"," ","it"," ","just"," ","precedes"," ","the"," ","first"," ","sentence"," ","of"," ","the"," ","summary",".","\n",StyleBox[
RowBox[{"\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\t"}]],"2",StyleBox[
RowBox[{"."," "}]],"We"," ","use"," ",ButtonBox["Prepend",BaseStyle -> "HyperlinkActionNew",
ButtonData -> {URL["https://reference.wolfram.com/language/ref/Prepend.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/Prepend.html"]," ","to"," ","merge"," ","the"," ","first"," ","sentence"," ","of"," ","the"," ","summary"," ","with"," ","the"," ","rest"," ","of"," ","the"," ","summary",".","\n",StyleBox[
RowBox[{"\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\t"}]],"3",StyleBox[
RowBox[{"."," "}]],"In"," ","the"," ","object"," ","we"," ","created",StyleBox[RowBox[
{","," "}]],"some"," ","sentences"," ","are"," ","not"," ","identified",StyleBox[
RowBox[{"."," "}]],"We"," ","do"," ","another"," ","StringSplit",StyleBox[RowBox[
{","," "}]],"this"," ","time"," ","using",StyleBox[RowBox[{" ","\".\""," "}]],"as"," ","pattern"," ","for"," ","splitting",StyleBox[
RowBox[{"."," "}]],"It"," ","is"," ","successful"," ","in"," ","this"," ","case"," ","because"," ","the"," ","symbol",StyleBox[
RowBox[{" ","\".\""," "}]],"only"," ","appears"," ","at"," ","the"," ","end"," ","of"," ","sentences",StyleBox[
RowBox[{"."," "}]],"Be"," ","careful",StyleBox[RowBox[{","," "}]],"it"," ","is"," ","not"," ","always"," ","the"," ","case","!"}],
"Text",ExpressionUUID -> "396f8888-239b-4fc0-9711-87e67c326d13"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{RowBox[{"abstractEN1","=",RowBox[{RowBox[{"StringSplit","[",RowBox[
{RowBox[{"circularEcoSentences","[",RowBox[{"[","5","]"}],"]"}],",","\"English\""}],"]"}],"[",RowBox[
{"[","2","]"}],"]"}]}],";"}],"\n",RowBox[{RowBox[{"abstractENraw"," ","="," ",RowBox[
{"Prepend","[",RowBox[{RowBox[{"circularEcoSentences","[",RowBox[{"[",RowBox[{"6",";;","9"}],"]"}],"]"}],","," ","abstractEN1"}],"]"}]}],";"}],"\n",RowBox[
{"abstractEN"," ","="," ",RowBox[{"Flatten"," ","@"," ",RowBox[{"StringSplit","[",RowBox[
{"abstractENraw",",","\".\""}],"]"}]}]}]}],"Input",CellLabel -> "In[67]:= ",ExpressionUUID -> "198398e2-1be5-4076-882b-26ffdd39991b"],Cell[
BoxData[
RowBox[{"{",RowBox[{"\"\\nThe world is today operating in a linear \\neconomy that extracts natural resources, \\nproduces energy or goods which are \\ndisposed in the form of pollution or waste\"",",","\" \\nThis \[OpenCurlyDoubleQuote]take, make, waste\[CloseCurlyDoubleQuote] system has \\ngenerated prosperity and wealth in many \\nparts of the world, but has also polluted the \\nplanet and the atmosphere\"",",","\"The \\nconsequences are climate change, the \\ndegradation of the environment, and loss of \\nbiodiversity\"",",","\"To avoid environmental \\ncatastrophes, there is an urgent need for a \\nrapid transition away from the linear \\neconomy towards sustainable economic \\nsystems\"",",","\" \\nThe circular economy offers such an \\nalternative\"",",","\"In its ideal form, a circular \\neconomy is a regenerative economic system \\nthat uses renewable energy and resources, \\nreuses materials and products as long as \\npossible, and recycles resources rather than \\ndisposing them as waste\"",",","\"This report \\nanalyzes the necessary conditions for a move \\ntowards a circular economy and examines\\ngovernment policies that can foster the \\ntransition towards such a regenerative \\neconomy\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[69]= ",ExpressionUUID -> "72f1dda9-2f46-4cc5-bbf3-925f880c0f79"]},
Open],ExpressionUUID -> "89e3a0c3-f8c0-4d68-8b4c-b5707420183c"]},{1}],ExpressionUUID -> "cf5137ba-00d3-463d-a5e8-02d3885d25f1"],Cell[
CellGroupData[
{Cell[
TextData[{"Extracting"," ","words"}],"Subsection",ExpressionUUID -> "2d83817e-a6b2-412f-8930-d0760f738fb4"],Cell[
TextData[
{ButtonBox["TextWords",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/TextWords.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/TextWords.html"]," ","gives"," ","a"," ","list"," ","of"," ","the"," ","identified"," ","words"," ","in"," ","a"," ","given",StyleBox[
RowBox[{"\[NonBreakingSpace]","\""}]],"string","\".","\n","Note"," ","that"," ","words"," ","returned"," ","by","\[NonBreakingSpace]","TextWords","\[NonBreakingSpace]","are"," ","identified"," ","structurally",StyleBox[
RowBox[{","," "}]],"and"," ","may"," ","not"," ","be"," ","dictionary"," ","words","."}],
"Text",ExpressionUUID -> "228c842a-57aa-431a-b197-748908490571"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"abstractENwordsRaw"," ","="," ",RowBox[{"TextWords","[","abstractEN","]"}]}]],
"Input",CellLabel -> "In[40]:= ",ExpressionUUID -> "9930e5d2-d317-4f33-ae81-6c6500440695"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"{",RowBox[{"\"The\"",",","\"world\"",",","\"is\"",",","\"today\"",",","\"operating\"",",","\"in\"",",","\"a\"",",","\"linear\"",",","\"economy\"",",","\"that\"",",","\"extracts\"",",","\"natural\"",",","\"resources\"",",","\"produces\"",",","\"energy\"",",","\"or\"",",","\"goods\"",",","\"which\"",",","\"are\"",",","\"disposed\"",",","\"in\"",",","\"the\"",",","\"form\"",",","\"of\"",",","\"pollution\"",",","\"or\"",",","\"waste\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"This\"",",","\"take\"",",","\"make\"",",","\"waste\"",",","\"system\"",",","\"has\"",",","\"generated\"",",","\"prosperity\"",",","\"and\"",",","\"wealth\"",",","\"in\"",",","\"many\"",",","\"parts\"",",","\"of\"",",","\"the\"",",","\"world\"",",","\"but\"",",","\"has\"",",","\"also\"",",","\"polluted\"",",","\"the\"",",","\"planet\"",",","\"and\"",",","\"the\"",",","\"atmosphere\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"The\"",",","\"consequences\"",",","\"are\"",",","\"climate\"",",","\"change\"",",","\"the\"",",","\"degradation\"",",","\"of\"",",","\"the\"",",","\"environment\"",",","\"and\"",",","\"loss\"",",","\"of\"",",","\"biodiversity\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"To\"",",","\"avoid\"",",","\"environmental\"",",","\"catastrophes\"",",","\"there\"",",","\"is\"",",","\"an\"",",","\"urgent\"",",","\"need\"",",","\"for\"",",","\"a\"",",","\"rapid\"",",","\"transition\"",",","\"away\"",",","\"from\"",",","\"the\"",",","\"linear\"",",","\"economy\"",",","\"towards\"",",","\"sustainable\"",",","\"economic\"",",","\"systems\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"The\"",",","\"circular\"",",","\"economy\"",",","\"offers\"",",","\"such\"",",","\"an\"",",","\"alternative\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"In\"",",","\"its\"",",","\"ideal\"",",","\"form\"",",","\"a\"",",","\"circular\"",",","\"economy\"",",","\"is\"",",","\"a\"",",","\"regenerative\"",",","\"economic\"",",","\"system\"",",","\"that\"",",","\"uses\"",",","\"renewable\"",",","\"energy\"",",","\"and\"",",","\"resources\"",",","\"reuses\"",",","\"materials\"",",","\"and\"",",","\"products\"",",","\"as\"",",","\"long\"",",","\"as\"",",","\"possible\"",",","\"and\"",",","\"recycles\"",",","\"resources\"",",","\"rather\"",",","\"than\"",",","\"disposing\"",",","\"them\"",",","\"as\"",",","\"waste\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"This\"",",","\"report\"",",","\"analyzes\"",",","\"the\"",",","\"necessary\"",",","\"conditions\"",",","\"for\"",",","\"a\"",",","\"move\"",",","\"towards\"",",","\"a\"",",","\"circular\"",",","\"economy\"",",","\"and\"",",","\"examines\"",",","\"government\"",",","\"policies\"",",","\"that\"",",","\"can\"",",","\"foster\"",",","\"the\"",",","\"transition\"",",","\"towards\"",",","\"such\"",",","\"a\"",",","\"regenerative\"",",","\"economy\""}],"}"}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[40]= ",ExpressionUUID -> "b23eb612-f916-4974-9948-0a909ba14a92"]},
Open],ExpressionUUID -> "7372d8c6-59ba-4ec2-ba33-648e91f9211b"],Cell[
TextData[{"Many"," ","words"," ","may"," ","not"," ","be"," ","helpful"," ","for"," ","your"," ","analysis",StyleBox[
RowBox[{","," "," "}]],"for"," ","instance",StyleBox[RowBox[{" ","\""}]],"the",StyleBox[
RowBox[{"\","," ","\""}]],"is",StyleBox[RowBox[{"\","," ","\""}]],"a",StyleBox[RowBox[
{"\","," ","\""}]],"for",StyleBox[RowBox[{"\","," "}]],"etc",".","\n","You"," ","can"," ","delete"," ","these"," ","words"," ","using"," ",ButtonBox[
"DeleteStopWords",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/DeleteStopwords.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/DeleteStopwords.html"],StyleBox[
RowBox[{":"," "}]]}],"Text",ExpressionUUID -> "452c352e-7c2e-4d85-a074-5906db2fb73c"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"abstractENwords"," ","="," ",RowBox[{"DeleteStopwords"," ","/@"," ","abstractENwordsRaw"}]}]],
"Input",CellLabel -> "In[41]:= ",ExpressionUUID -> "0a6d4ba3-9620-4783-9aa5-c248fb7575af"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"{",RowBox[{"\"world\"",",","\"today\"",",","\"operating\"",",","\"linear\"",",","\"economy\"",",","\"extracts\"",",","\"natural\"",",","\"resources\"",",","\"produces\"",",","\"energy\"",",","\"goods\"",",","\"disposed\"",",","\"form\"",",","\"pollution\"",",","\"waste\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"make\"",",","\"waste\"",",","\"system\"",",","\"generated\"",",","\"prosperity\"",",","\"wealth\"",",","\"parts\"",",","\"world\"",",","\"polluted\"",",","\"planet\"",",","\"atmosphere\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"consequences\"",",","\"climate\"",",","\"change\"",",","\"degradation\"",",","\"environment\"",",","\"loss\"",",","\"biodiversity\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"avoid\"",",","\"environmental\"",",","\"catastrophes\"",",","\"urgent\"",",","\"need\"",",","\"rapid\"",",","\"transition\"",",","\"away\"",",","\"linear\"",",","\"economy\"",",","\"towards\"",",","\"sustainable\"",",","\"economic\"",",","\"systems\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"circular\"",",","\"economy\"",",","\"offers\"",",","\"alternative\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"ideal\"",",","\"form\"",",","\"circular\"",",","\"economy\"",",","\"regenerative\"",",","\"economic\"",",","\"system\"",",","\"uses\"",",","\"renewable\"",",","\"energy\"",",","\"resources\"",",","\"reuses\"",",","\"materials\"",",","\"products\"",",","\"long\"",",","\"possible\"",",","\"recycles\"",",","\"resources\"",",","\"disposing\"",",","\"waste\""}],"}"}],",",RowBox[
{"{",RowBox[{"\"report\"",",","\"analyzes\"",",","\"necessary\"",",","\"conditions\"",",","\"move\"",",","\"towards\"",",","\"circular\"",",","\"economy\"",",","\"examines\"",",","\"government\"",",","\"policies\"",",","\"foster\"",",","\"transition\"",",","\"towards\"",",","\"regenerative\"",",","\"economy\""}],"}"}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[41]= ",ExpressionUUID -> "22a25287-4301-4ddf-b35a-2d8ebfb5d8a6"]},
Open],ExpressionUUID -> "4edf9b43-bc40-45c3-969a-43b0c27b14f3"]},{1}],ExpressionUUID -> "b460a968-5c24-4c1d-89d5-97428eff6533"]},
{1}],ExpressionUUID -> "095ffec4-44d6-463b-8aae-f8d2078b2a8e"],Cell[
CellGroupData[
{Cell[
TextData[{"Manipulating"," ","strings"}],"Section",ExpressionUUID -> "0215e2b4-fd15-4037-b7a1-380d8c815fe3"],Cell[
BoxData[
RowBox[{RowBox[{"textCarbonRemoval"," ","="," ","\"Carbon removal, both CCUS (carbon capture in the industrial plant before it reaches the atmosphere) and NET (negative emissions, removing carbon from the air) could have an important role to play to reach net zero emissions. However, today carbon removal is experimental and small-scale, and is highly unlikely to scale beyond several percent of current emissions.\""}],";"}]],
"Input",CellLabel -> "In[103]:= ",ExpressionUUID -> "337e6ded-8cb8-40d4-82bd-7c74f6d3b45e"],Cell[
CellGroupData[
{Cell[
TextData[{"Delete"," ","string"}],"Subsection",ExpressionUUID -> "2207ca02-cd21-43f4-a28e-0a3c2009ca4c"],Cell[
TextData[
{ButtonBox["StringDelete",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/StringDelete.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/StringDelete.html"]," ","deletes"," ","substrings"," ","or"," ","patterns"," ","of"," ","a"," ","text","/","text",".","\n","\n","For"," ","instance",StyleBox[
RowBox[{","," "}]],"let's"," ","remove"," ","the"," ","description"," ","of"," ","carbon"," ","removal"," ","in"," ","the"," ","string"," ","textCarbonRemoval",StyleBox[
RowBox[{"."," "}]],"\n","We"," ","need"," ","to"," ","specify"," ","the"," ","pattern"," ","to"," ","delete",StyleBox[
RowBox[{"."," "}]],"Here",StyleBox[RowBox[{","," "}]],"we"," ","remove"," ","everything"," ","between",StyleBox[
RowBox[{" ","\","," "}]],"both"," ","CCUS",StyleBox[RowBox[{"\""," "}]],"and"," ","the"," ","second"," ","parenthesis",StyleBox[
RowBox[{"."," "}]],"\n",StyleBox[RowBox[{"\t",StyleBox["~~",FontFamily -> "Consolas"]," "," "," ","\t"}]],"represents"," ","a"," ","sequence"," ","of"," ","strings","\n",StyleBox[
RowBox[{"\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\[NonBreakingSpace]","\t"}]],StyleBox[
"___",FontFamily -> "Consolas"],StyleBox[RowBox[{" "," ","\t"}]],"stands"," ","for"," ","any"," ","sequence"," ","of"," ","expressions",StyleBox[
RowBox[{" ","("}]],ButtonBox["BlankSequence",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL[
"https://reference.wolfram.com/language/ref/BlankSequence.html"],None},ButtonNote -> "https://reference.wolfram.com/language/ref/BlankSequence.html"],")","\n","See"," ",ButtonBox[
RowBox[{"String"," ","Patterns"}],BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL[
"https://reference.wolfram.com/language/guide/StringPatterns.html"],None},ButtonNote -> "https://reference.wolfram.com/language/guide/StringPatterns.html"]," ","for"," ","more"," ","details",StyleBox[
RowBox[{"."," "}]]}],"Text",ExpressionUUID -> "aab4256b-d67d-46e8-b044-c65d96bb22c8"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"carbonRemoval"," ","="," ",RowBox[{"StringDelete","[",RowBox[
{"textCarbonRemoval",","," ",RowBox[{"\", both\"","~~","___"," ","~~"," ","\")\""}]}],"]"}]}]],
"Input",CellLabel -> "In[107]:= ",ExpressionUUID -> "d7fd1659-9b79-48fb-8495-e7135c68307f"],Cell[
BoxData[
"\"Carbon removal could have an important role to play to reach net zero emissions. However, today carbon removal is experimental and small-scale, and is highly unlikely to scale beyond several percent of current emissions.\""],
"Output",CellLabel -> "Out[107]= ",ExpressionUUID -> "eb825f83-a024-44b8-96ee-b63d642c68ad"]},
Open],ExpressionUUID -> "45c115c1-4f1f-4b41-bb16-bd7c912441bf"]},Open],ExpressionUUID -> "2461ed42-ac8a-45ee-b06d-212bc326f090"],Cell[
CellGroupData[
{Cell[
TextData[{"Replace"," ","string"}],"Subsection",ExpressionUUID -> "6dc13766-47b2-4f20-9a86-be34455275f9"],Cell[
TextData[
{ButtonBox["StringReplace",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/StringReplace.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/StringReplace.html"],StyleBox[
RowBox[{" "," "}]],"allows"," ","to"," ","replace"," ","substrings"," ","or"," ","patterns",".","\n","\n","For"," ","instance",StyleBox[
RowBox[{","," "}]],"let's"," ","replace",StyleBox[RowBox[{" ","\""}]],"could",StyleBox[
RowBox[{"\""," "}]],"by",StyleBox[RowBox[{" ","\""}]],"will",StyleBox[RowBox[{"\""," "}]],"in"," ","the"," ","previous"," ","text",":"}],
"Text",ExpressionUUID -> "d8305cdf-df5c-4b30-a4b2-3de5d04aec4c"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"StringReplace","[",RowBox[{"carbonRemoval",","," ",RowBox[
{"\"could\""," ","\[Rule]"," ","\"will\""}]}],"]"}]],"Input",CellLabel -> "In[108]:= ",
ExpressionUUID -> "443baf0f-51de-4f53-b355-94ca10932694"],Cell[
BoxData["\"Carbon removal will have an important role to play to reach net zero emissions. However, today carbon removal is experimental and small-scale, and is highly unlikely to scale beyond several percent of current emissions.\"",
StandardForm],"Output",CellLabel -> "Out[108]= ",ExpressionUUID -> "dd92c288-f4ce-411a-a36f-0a70c328b006"]},
Open],ExpressionUUID -> "30b6a491-3809-4cc8-ad1f-7cbead02dd41"]},Open],ExpressionUUID -> "75750cfb-18bd-4a41-9856-f81d38715f13"],Cell[
CellGroupData[
{Cell[
TextData[{"Split"," ","string"}],"Subsection",ExpressionUUID -> "e17ef70a-50c6-45e3-9bdb-bbf6662952c4"],Cell[
TextData[
{ButtonBox["StringSplit",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/StringSplit.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/StringSplit.html"]," ","allows"," ","to"," ","split"," ","a"," ","text","/","string"," ","into"," ","a"," ","list"," ","of"," ","substrings",StyleBox[
RowBox[{","," "}]],"according"," ","to"," ","a"," ","given"," ","pattern",":"}],"Text",
ExpressionUUID -> "88454040-e92c-429c-9354-055e10a6fd8d"],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"StringSplit","[",RowBox[{"carbonRemoval",",","\".\""}],"]"}]],"Input",CellLabel -> "In[109]:= ",
ExpressionUUID -> "1ac0fbb7-d90e-4c4b-88dd-af0296b5354b"],Cell[
BoxData[RowBox[{"{",RowBox[
{"\"Carbon removal could have an important role to play to reach net zero emissions\"",",","\" However, today carbon removal is experimental and small-scale, and is highly unlikely to scale beyond several percent of current emissions\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[109]= ",ExpressionUUID -> "6e1ec79b-a7c9-41ff-9ed7-33f64743876e"]},
Open],ExpressionUUID -> "646339f3-080f-4b2e-8160-743b6d5c14b4"]},Open],ExpressionUUID -> "207c45e0-a787-4690-972e-3200e9443b27"],Cell[
CellGroupData[
{Cell[
TextData[{"Concatenate"," ","strings"}],"Subsection",ExpressionUUID -> "a46b3cf2-0bfd-46e5-a4cd-a3fec0c2c521"],Cell[
TextData[
{ButtonBox["StringRiffle",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/StringRiffle.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/StringRiffle.html"]," ","creates"," ","a"," ","string"," ","by"," ","concatenating"," ","a"," ","list"," ","of"," ","strings",StyleBox[
RowBox[{","," "}]],"with"," ","spaces"," ","inserted"," ","between"," ","them","."}],
"Text",ExpressionUUID -> "f8e6f926-b0f3-4092-a5c1-6e96d136fc86"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"carbonRemovalWords"," ","=",RowBox[{"TextWords","[","carbonRemoval","]"}]}]],
"Input",CellLabel -> "In[112]:= ",ExpressionUUID -> "07135c81-c42d-436e-853b-c74361007208"],Cell[
BoxData[
RowBox[{"{",RowBox[{"\"Carbon\"",",","\"removal\"",",","\"could\"",",","\"have\"",",","\"an\"",",","\"important\"",",","\"role\"",",","\"to\"",",","\"play\"",",","\"to\"",",","\"reach\"",",","\"net\"",",","\"zero\"",",","\"emissions\"",",","\"However\"",",","\"today\"",",","\"carbon\"",",","\"removal\"",",","\"is\"",",","\"experimental\"",",","\"and\"",",","\"small-scale\"",",","\"and\"",",","\"is\"",",","\"highly\"",",","\"unlikely\"",",","\"to\"",",","\"scale\"",",","\"beyond\"",",","\"several\"",",","\"percent\"",",","\"of\"",",","\"current\"",",","\"emissions\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[112]= ",ExpressionUUID -> "b8665d28-f372-417b-a288-ae8f30330a32"]},
Open],ExpressionUUID -> "55693bfb-147b-4092-9888-4ecde358df24"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"StringRiffle"," ","@"," ","carbonRemovalWords"}]],"Input",
CellLabel -> "In[115]:= ",ExpressionUUID -> "6dfc1f6b-4a18-4980-a34a-28b266e4cd28"],Cell[
BoxData[
"\"Carbon removal could have an important role to play to reach net zero emissions However today carbon removal is experimental and small-scale and is highly unlikely to scale beyond several percent of current emissions\"",
StandardForm],"Output",CellLabel -> "Out[115]= ",ExpressionUUID -> "5067a6fc-75e6-4f52-b71b-eb76267df9a2"]},
Open],ExpressionUUID -> "53a875be-6e75-433c-a1e2-53ccfe499a4e"]},Open],ExpressionUUID -> "2be70bfb-b66c-4de1-beac-f1b6ad74d521"]},
{1}],ExpressionUUID -> "ec30800b-87af-4981-9564-2f067bae31ee"],Cell[
CellGroupData[
{Cell[
TextData[{"Content"," ","analysis",StyleBox[RowBox[{" ","&"," "}]],"extraction"}],
"Section",ExpressionUUID -> "646482fa-321d-4737-a153-080ef701646b"],Cell[
CellGroupData[
{Cell[
TextData[{"Text"," ","statistics",StyleBox[RowBox[{":"," "}]],"counting"," ","words"}],
"Subsection",ExpressionUUID -> "8b1dfb47-3a09-4bb3-a975-e097fba56ea5"],Cell[
TextData[
{ButtonBox["WordCount",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/WordCount.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/WordCount.html"]," ","gives"," ","the"," ","total"," ","number"," ","of"," ","identified"," ","word"," ","in"," ","a"," ","string"}],
"Text",ExpressionUUID -> "d3b26b82-c413-4c80-9207-b492285fa439"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"WordCount","[","wealthofNations","]"}]],"Input",Background -> RGBColor[
1,1,1],CellLabel -> "In[67]:= ",ExpressionUUID -> "bdbfc6b3-612e-4bc9-b949-c30c658e0424"],Cell[
BoxData[
"423533",StandardForm],"Output",CellLabel -> "Out[67]= ",ExpressionUUID -> "b18b9954-81ba-484c-a50d-1b82455b01ac"]},
Open],ExpressionUUID -> "8a3e87ee-c3f8-442b-bb90-01272fa0370c"],Cell[
TextData[{ButtonBox[
"WordCounts",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/WordCounts.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/WordCounts.html"]," ","gives"," ","an"," ","association"," ","whose"," ","keys"," ","are"," ","the"," ","distinct"," ","words"," ","identified"," ","in",StyleBox[
RowBox[{"\[NonBreakingSpace]","\""}]],"string",StyleBox[RowBox[{"\","," "}]],"and"," ","whose"," ","values"," ","give"," ","the"," ","number"," ","of"," ","times"," ","those"," ","words"," ","appear"," ","in",StyleBox[
RowBox[{"\[NonBreakingSpace]","\""}]],"string","\"."}],"Text",ExpressionUUID -> "2c28a242-681f-4b1a-8136-c8a3bc85324d"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"WordCounts","[",RowBox[{"StringRiffle"," ","@"," ","abstractENwords"}],"]"}]],
"Input",CellLabel -> "In[48]:= ",ExpressionUUID -> "36b5906a-442d-42b6-b4ac-8bc76fd7d88f"],Cell[
BoxData[
RowBox[{"\[LeftAssociation]",RowBox[{RowBox[{"\"economy\"","\[Rule]","6"}],",",RowBox[
{"\"circular\"","\[Rule]","3"}],",",RowBox[{"\"towards\"","\[Rule]","3"}],",",RowBox[
{"\"waste\"","\[Rule]","3"}],",",RowBox[{"\"resources\"","\[Rule]","3"}],",",RowBox[
{"\"regenerative\"","\[Rule]","2"}],",",RowBox[{"\"economic\"","\[Rule]","2"}],",",RowBox[
{"\"transition\"","\[Rule]","2"}],",",RowBox[{"\"system\"","\[Rule]","2"}],",",RowBox[
{"\"form\"","\[Rule]","2"}],",",RowBox[{"\"energy\"","\[Rule]","2"}],",",RowBox[{"\"linear\"","\[Rule]","2"}],",",RowBox[
{"\"world\"","\[Rule]","2"}],",",RowBox[{"\"foster\"","\[Rule]","1"}],",",RowBox[
{"\"policies\"","\[Rule]","1"}],",",RowBox[{"\"government\"","\[Rule]","1"}],",",RowBox[
{"\"examines\"","\[Rule]","1"}],",",RowBox[{"\"move\"","\[Rule]","1"}],",",RowBox[
{"\"conditions\"","\[Rule]","1"}],",",RowBox[{"\"necessary\"","\[Rule]","1"}],",",RowBox[
{"\"analyzes\"","\[Rule]","1"}],",",RowBox[{"\"report\"","\[Rule]","1"}],",",RowBox[
{"\"disposing\"","\[Rule]","1"}],",",RowBox[{"\"recycles\"","\[Rule]","1"}],",",RowBox[
{"\"possible\"","\[Rule]","1"}],",",RowBox[{"\"long\"","\[Rule]","1"}],",",RowBox[
{"\"products\"","\[Rule]","1"}],",",RowBox[{"\"materials\"","\[Rule]","1"}],",",RowBox[
{"\"reuses\"","\[Rule]","1"}],",",RowBox[{"\"renewable\"","\[Rule]","1"}],",",RowBox[
{"\"uses\"","\[Rule]","1"}],",",RowBox[{"\"ideal\"","\[Rule]","1"}],",",RowBox[{"\"alternative\"","\[Rule]","1"}],",",RowBox[
{"\"offers\"","\[Rule]","1"}],",",RowBox[{"\"systems\"","\[Rule]","1"}],",",RowBox[
{"\"sustainable\"","\[Rule]","1"}],",",RowBox[{"\"away\"","\[Rule]","1"}],",",RowBox[
{"\"rapid\"","\[Rule]","1"}],",",RowBox[{"\"need\"","\[Rule]","1"}],",",RowBox[{"\"urgent\"","\[Rule]","1"}],",",RowBox[
{"\"catastrophes\"","\[Rule]","1"}],",",RowBox[{"\"environmental\"","\[Rule]","1"}],",",RowBox[
{"\"avoid\"","\[Rule]","1"}],",",RowBox[{"\"biodiversity\"","\[Rule]","1"}],",",RowBox[
{"\"loss\"","\[Rule]","1"}],",",RowBox[{"\"environment\"","\[Rule]","1"}],",",RowBox[
{"\"degradation\"","\[Rule]","1"}],",",RowBox[{"\"change\"","\[Rule]","1"}],",",RowBox[
{"\"climate\"","\[Rule]","1"}],",",RowBox[{"\"consequences\"","\[Rule]","1"}],",",RowBox[
{"\"atmosphere\"","\[Rule]","1"}],",",RowBox[{"\"planet\"","\[Rule]","1"}],",",RowBox[
{"\"polluted\"","\[Rule]","1"}],",",RowBox[{"\"parts\"","\[Rule]","1"}],",",RowBox[
{"\"wealth\"","\[Rule]","1"}],",",RowBox[{"\"prosperity\"","\[Rule]","1"}],",",RowBox[
{"\"generated\"","\[Rule]","1"}],",",RowBox[{"\"make\"","\[Rule]","1"}],",",RowBox[
{"\"pollution\"","\[Rule]","1"}],",",RowBox[{"\"disposed\"","\[Rule]","1"}],",",RowBox[
{"\"goods\"","\[Rule]","1"}],",",RowBox[{"\"produces\"","\[Rule]","1"}],",",RowBox[
{"\"natural\"","\[Rule]","1"}],",",RowBox[{"\"extracts\"","\[Rule]","1"}],",",RowBox[
{"\"operating\"","\[Rule]","1"}],",",RowBox[{"\"today\"","\[Rule]","1"}]}],"\[RightAssociation]"}],
StandardForm],"Output",CellLabel -> "Out[48]= ",ExpressionUUID -> "c7f1d95a-195e-4f08-85ff-2019cbcadbb3"]},
Open],ExpressionUUID -> "535196e8-f2fc-459a-b90d-ae1384cb1c45"],Cell[
TextData[{"Using"," ","the"," ","second"," ","argument",StyleBox[
RowBox[{","," "}]],"you"," ","can"," ","count",StyleBox[RowBox[{" ","\""}]],"n","-","grams",StyleBox[
RowBox[{"\","," "}]],"i",".","e",StyleBox[RowBox[{"."," "}]],"sequence"," ","of"," ","n"," ","consecutive"," ","words",StyleBox[
RowBox[{":"," "}]]}],"Text",ExpressionUUID -> "df2d6a8b-7989-48df-85b3-6888687a6425"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"WordCounts","[",RowBox[{RowBox[{"StringRiffle"," ","@"," ","abstractENwords"}],","," ","2"}],"]"}]],
"Input",CellLabel -> "In[52]:= ",ExpressionUUID -> "cd8cda41-2be4-4b95-8880-5e8c457d777a"],Cell[
BoxData[
RowBox[{"\[LeftAssociation]",RowBox[{RowBox[{RowBox[{"{",RowBox[{"\"circular\"",",","\"economy\""}],"}"}],"\[Rule]","3"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"linear\"",",","\"economy\""}],"}"}],"\[Rule]","2"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"regenerative\"",",","\"economy\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"towards\"",",","\"regenerative\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"transition\"",",","\"towards\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"foster\"",",","\"transition\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"policies\"",",","\"foster\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"government\"",",","\"policies\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"examines\"",",","\"government\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"economy\"",",","\"examines\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"towards\"",",","\"circular\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"move\"",",","\"towards\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"conditions\"",",","\"move\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"necessary\"",",","\"conditions\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"analyzes\"",",","\"necessary\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"report\"",",","\"analyzes\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"waste\"",",","\"report\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"disposing\"",",","\"waste\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"resources\"",",","\"disposing\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"recycles\"",",","\"resources\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"possible\"",",","\"recycles\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"long\"",",","\"possible\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"products\"",",","\"long\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"materials\"",",","\"products\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"reuses\"",",","\"materials\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"resources\"",",","\"reuses\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"energy\"",",","\"resources\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"renewable\"",",","\"energy\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"uses\"",",","\"renewable\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"system\"",",","\"uses\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"economic\"",",","\"system\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"regenerative\"",",","\"economic\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"economy\"",",","\"regenerative\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"form\"",",","\"circular\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"ideal\"",",","\"form\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"alternative\"",",","\"ideal\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"offers\"",",","\"alternative\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"economy\"",",","\"offers\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"systems\"",",","\"circular\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"economic\"",",","\"systems\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"sustainable\"",",","\"economic\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"towards\"",",","\"sustainable\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"economy\"",",","\"towards\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"away\"",",","\"linear\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"transition\"",",","\"away\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"rapid\"",",","\"transition\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"need\"",",","\"rapid\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"urgent\"",",","\"need\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"catastrophes\"",",","\"urgent\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"environmental\"",",","\"catastrophes\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"avoid\"",",","\"environmental\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"biodiversity\"",",","\"avoid\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"loss\"",",","\"biodiversity\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"environment\"",",","\"loss\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"degradation\"",",","\"environment\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"change\"",",","\"degradation\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"climate\"",",","\"change\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"consequences\"",",","\"climate\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"atmosphere\"",",","\"consequences\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"planet\"",",","\"atmosphere\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"polluted\"",",","\"planet\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"world\"",",","\"polluted\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"parts\"",",","\"world\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"wealth\"",",","\"parts\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"prosperity\"",",","\"wealth\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"generated\"",",","\"prosperity\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"system\"",",","\"generated\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"waste\"",",","\"system\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"make\"",",","\"waste\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"waste\"",",","\"make\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"pollution\"",",","\"waste\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"form\"",",","\"pollution\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"disposed\"",",","\"form\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"goods\"",",","\"disposed\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"energy\"",",","\"goods\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"produces\"",",","\"energy\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"resources\"",",","\"produces\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"natural\"",",","\"resources\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"extracts\"",",","\"natural\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"economy\"",",","\"extracts\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"operating\"",",","\"linear\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"today\"",",","\"operating\""}],"}"}],"\[Rule]","1"}],",",RowBox[
{RowBox[{"{",RowBox[{"\"world\"",",","\"today\""}],"}"}],"\[Rule]","1"}]}],"\[RightAssociation]"}],
StandardForm],"Output",CellLabel -> "Out[52]= ",ExpressionUUID -> "efaeb403-3acd-4ba1-9573-dc9674f569a0"]},
Open],ExpressionUUID -> "fca884ff-6e12-472e-b5a8-140a9957ef7c"],Cell[
TextData[{"You"," ","can"," ","also"," ","extract"," ","the"," ","frequency"," ","of"," ","a"," ","word"," ","in"," ","a"," ","string"," ","using"," ",ButtonBox[
"WordFrequency",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/WordFrequency.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/WordFrequency.html"],":"}],
"Text",ExpressionUUID -> "4133f753-3fb0-49c8-a5e7-8af955432c8c"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"WordFrequency","[",RowBox[{RowBox[{"StringRiffle"," ","@"," ","abstractENwords"}],","," ","\"economy\""}],"]"}]],
"Input",CellLabel -> "In[53]:= ",ExpressionUUID -> "ac8bc483-d7b5-4c80-874f-5703c10ad91b"],Cell[
BoxData[
"0.06896551724137931`",StandardForm],"Output",CellLabel -> "Out[53]= ",ExpressionUUID -> "9cd8e518-25b8-457c-88de-994cdc555721"]},
Open],ExpressionUUID -> "4afe304d-5a2f-4134-af65-d4d3886f27be"]},{1}],ExpressionUUID -> "b9155790-5bba-4998-9af9-d194f319f6a6"],Cell[
CellGroupData[
{Cell[
TextData[{"Content",StyleBox[RowBox[{" ","&"," "}]],"entity"," ","identification"}],
"Subsection",ExpressionUUID -> "78cd999d-8c5a-4204-b029-1e471c6df6fe"],Cell[
TextData[
{ButtonBox["TextCases",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/TextCases.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/TextCases.html"]," ","allows"," ","to"," ","extract"," ","all"," ","the"," ","expressions"," ","that"," ","are"," ","of"," ","a"," ","specified"," ","type",".","\n","\n","For"," ","instance",StyleBox[
RowBox[{","," "}]],"let's"," ","extract"," ","the"," ","countries"," ","mentioned"," ","in"," ","the"," ","Wikipedia"," ","article"," ","about"," ","al","-","Khwarizmi"}],
"Text",ExpressionUUID -> "b659be8c-2221-4dd1-bc6e-cd39ba1304aa"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"locationsAlKhwarizmi"," ","="," ",RowBox[{"TextCases","[",RowBox[
{"alKhwarizmi",","," ","\"Country\""}],"]"}]}]],"Input",CellLabel -> "In[6]:= ",ExpressionUUID -> "316e2731-d7ae-4cb7-96be-c458b7af6a46"],Cell[
BoxData[
RowBox[{"{",RowBox[{"\"Persian\"",",","\"Persian\"",",","\"Portuguese\"",",","\"Indian\"",",","\"Persian\"",",","\"Iran\"",",","\"Turkmenistan\"",",","\"Uzbekistan\"",",","\"Iranian\"",",","\"China\"",",","\"India\"",",","\"Greek\"",",","\"Persian\"",",","\"Indian\"",",","\"Greek\"",",","\"Greek\"",",","\"Swiss\"",",","\"American\"",",","\"Indian\"",",","\"Indians\"",",","\"Indian\"",",","\"Greek\"",",","\"Indian\"",",","\"Indian\"",",","\"Indian\"",",","\"Indian\"",",","\"Spanish\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[6]= ",ExpressionUUID -> "2f5c4825-3f71-42eb-a04c-613bb9ba3dcf"]},
Open],ExpressionUUID -> "ff6004f4-fed6-4705-8cb7-2a93fd5c225b"],Cell[
TextData[{"The"," ","above"," ","list"," ","is"," ","not"," ","uniform",StyleBox[
RowBox[{"."," "}]],"Instead",StyleBox[RowBox[{","," "}]],"we"," ","can"," ","directly"," ","extract"," ","the"," ","countries"," ","as"," ","entities"," ","using"," ","the"," ","interpretation"," ","capabilities"," ","of"," ","the"," ","Wolfram"," ","Language"," "}],
"Text",ExpressionUUID -> "ccac4f1a-d281-4956-b21a-0c071009971d"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"locationsAlKhwarizmi"," ","="," ",RowBox[{"TextCases","[",RowBox[
{"alKhwarizmi",","," ",RowBox[{"\"Country\""," ","\[Rule]"," ","\"Interpretation\""}],","," ",RowBox[
{"VerifyInterpretation","\[Rule]","True"}]}],"]"}]}]],"Input",CellLabel -> "In[7]:= ",
ExpressionUUID -> "111e4707-4451-4ce2-9557-fd594c296b7c"],Cell[
BoxData[RowBox[{"{",RowBox[
{TemplateBox[{"\"Iran\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Iran\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Iran\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Iran\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Portugal\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Portugal\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Iran\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Iran\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Iran\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Iran\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Turkmenistan\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Turkmenistan\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Uzbekistan\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Uzbekistan\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Iran\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Iran\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"China\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"China\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Greece\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Greece\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Iran\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Iran\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Greece\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Greece\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Greece\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Greece\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Switzerland\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Switzerland\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"United States\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"UnitedStates\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Greece\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Greece\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"India\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"India\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
"Entity"],",",TemplateBox[{"\"Spain\"",RowBox[{"Entity","[",RowBox[{"\"Country\"",",","\"Spain\""}],"]"}],"\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
"Entity"]}],"}"}],StandardForm],"Output",CellLabel -> "Out[7]= ",ExpressionUUID -> "98ad73a6-70e7-4a9d-bb64-292effcdcc91"]},
Open],ExpressionUUID -> "bb0f5427-0ba4-49c1-87ab-3b59c6d6d204"],Cell[
TextData[{"We"," ","can"," ","then"," ","work"," ","with"," ","our"," ","entities",StyleBox[
RowBox[{","," "}]],"visualizing"," ","the"," ","countries"," ","and"," ","the"," ","number"," ","of"," ","mentions"," ","with"," ","a"," ","GeoBubbleChart"," ","or"," ","a"," ","Dataset",":"}],
"Text",ExpressionUUID -> "265babdb-34ea-41c2-b20a-24c4b30e4138"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"GeoBubbleChart","[",RowBox[{"Counts","[","locationsAlKhwarizmi","]"}],"]"}]],
"Input",CellLabel -> "In[4]:= ",ExpressionUUID -> "60efc134-29a7-44a7-a2f8-97beb195c340"],Cell[
BoxData[
GraphicsBox[{{TagBox[{Texture[GraphicsBox[TagBox[RasterBox[CompressedData["1:"],
{{0,264.`},{633.`,0}},{0,255},ColorFunction -> RGBColor],BoxForm`ImageTag["Byte",
ColorSpace -> "RGB",Interleaving -> False,MetaInformation -> Association["Exif" -> Association[
"Software" -> "Created with the Wolfram Language: www.wolfram.com"],"GeoMetaInformation" -> {"Software" -> "Created with the Wolfram Language: www.wolfram.com","TileSources" -> "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap contributors: http://www.openstreetmap.org/copyright","Projection" -> "Equirectangular","PlotRange" -> {{-107.2265625`,115.3125`},{-13.0078125`,79.8046875`}},"LonLatBox" -> {{-107.10000000000004`,115.10000000000004`},{-12.791666666666686`,79.79166666666669`}},"GeoModel" -> "ITRF00"}]],
Selectable -> False],DefaultBaseStyle -> "ImageGraphics",ImageSizeRaw -> {633.`,264.`},
PlotRange -> {{0,633.`},{0,264.`}}]],PolygonBox[{{-107.10000000000004`,-12.791666666666679`},{-107.10000000000004`,79.79166666666669`},{115.10000000000002`,79.79166666666669`},{115.10000000000002`,-12.791666666666679`},{-107.10000000000004`,-12.791666666666679`}},
VertexTextureCoordinates -> {{5.687203791467366`*^-4,0.0023288439955105322`},{5.687203791467366`*^-4,0.9998597081930417`},{0.9990451114621732`,0.9998597081930417`},{0.9990451114621732`,0.0023288439955105322`},{5.687203791467366`*^-4,0.0023288439955105322`}}]},
Function[Annotation[Slot[1],"GeoBackground","WolframGeoGraphics"]]],TagBox[TagBox[
TooltipBox[{Opacity[0],PolygonBox[{{70.66000000000004`,5.724999999999991`},{115.10000000000004`,5.724999999999991`},{115.10000000000004`,-12.791666666666686`},{70.66000000000004`,-12.791666666666686`},{70.66000000000004`,5.724999999999991`}}]},
"\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap contributors: http://www.openstreetmap.org/copyright\"",
LabelStyle -> "TextStyling"],Function[Annotation[Slot[1],"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap contributors: http://www.openstreetmap.org/copyright",
"Tooltip"]]],Function[Annotation[Slot[1],"Metadata","WolframGeoGraphics"]]],{{{{{Directive[
EdgeForm[Directive[GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],{{Directive[
EdgeForm[Directive[GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[
TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[
{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[
DynamicBox[Typeset`ToBoxes[{Disk[{77.`,20.`},{8.416666666666657`,2.6999999999999993`}],If[
CurrentValue["MouseOver"],{Thickness[0.009999999999999998`],Circle[{77.`,20.`},{11.845483679769758`,3.799937338856836`}]},
{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],"DelayedMouseEffectStyle"],
Function[StatusArea[Slot[1],10]],TagBoxNote -> "10"],StyleBox["10",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[10,{}],"Tooltip"]]]},{Directive[EdgeForm[Directive[
GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[TooltipBox[TagBox[
TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[
1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[DynamicBox[Typeset`ToBoxes[
{Disk[{53.`,31.999999999999996`},{6.519521966115818`,2.091411006952004`}],If[CurrentValue[
"MouseOver"],{Thickness[0.009999999999999998`],Circle[{53.`,31.999999999999996`},
{9.948338979218919`,3.1913483458088407`}]},{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],
"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],6]],TagBoxNote -> "6"],StyleBox[
"6",{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[6,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[
TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[
{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[
DynamicBox[Typeset`ToBoxes[{Disk[{21.999999999999986`,39.`},{5.3231673946167675`,1.7076299364909246`}],If[
CurrentValue["MouseOver"],{Thickness[0.009999999999999998`],Circle[{21.999999999999986`,39.`},
{8.751984407719869`,2.807567275347761`}]},{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],
"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],4]],TagBoxNote -> "4"],StyleBox[
"4",{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[4,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[
TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[
{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[
DynamicBox[Typeset`ToBoxes[{Disk[{105.00000000000001`,35.`},{2.6615836973083873`,0.8538149682454588`}],If[
CurrentValue["MouseOver"],{Thickness[0.009999999999999998`],Circle[{105.00000000000001`,35.`},
{6.090400710411489`,1.9537523071022953`}]},{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],
"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],1]],TagBoxNote -> "1"],StyleBox[
"1",{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[1,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[
TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[
{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[
DynamicBox[Typeset`ToBoxes[{Disk[{64.00000000000001`,41.`},{2.6615836973083837`,0.8538149682454588`}],If[
CurrentValue["MouseOver"],{Thickness[0.009999999999999998`],Circle[{64.00000000000001`,41.`},
{6.090400710411485`,1.9537523071022953`}]},{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],
"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],1]],TagBoxNote -> "1"],StyleBox[
"1",{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[1,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[
TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[
{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[
DynamicBox[Typeset`ToBoxes[{Disk[{60.`,40.`},{2.6615836973083873`,0.8538149682454588`}],If[
CurrentValue["MouseOver"],{Thickness[0.009999999999999998`],Circle[{60.`,40.`},{6.090400710411489`,1.9537523071022953`}]},
{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],"DelayedMouseEffectStyle"],
Function[StatusArea[Slot[1],1]],TagBoxNote -> "1"],StyleBox["1",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[1,{}],"Tooltip"]]]},{Directive[EdgeForm[Directive[
GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[TooltipBox[TagBox[
TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[
1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[DynamicBox[Typeset`ToBoxes[
{Disk[{8.000000000000007`,47.`},{2.661583697308384`,0.8538149682454588`}],If[CurrentValue[
"MouseOver"],{Thickness[0.009999999999999998`],Circle[{8.000000000000007`,47.`},{6.090400710411485`,1.9537523071022953`}]},
{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],"DelayedMouseEffectStyle"],
Function[StatusArea[Slot[1],1]],TagBoxNote -> "1"],StyleBox["1",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[1,{}],"Tooltip"]]]},{Directive[EdgeForm[Directive[
GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[TooltipBox[TagBox[
TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[
1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[DynamicBox[Typeset`ToBoxes[
{Disk[{-4.000000000000007`,40.`},{2.6615836973083846`,0.8538149682454588`}],If[CurrentValue[
"MouseOver"],{Thickness[0.009999999999999998`],Circle[{-4.000000000000007`,40.`},
{6.090400710411486`,1.9537523071022953`}]},{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],
"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],1]],TagBoxNote -> "1"],StyleBox[
"1",{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[1,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[
TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[
{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[
DynamicBox[Typeset`ToBoxes[{Disk[{-8.`,39.5`},{2.6615836973083873`,0.8538149682454588`}],If[
CurrentValue["MouseOver"],{Thickness[0.009999999999999998`],Circle[{-8.`,39.5`},{6.090400710411489`,1.9537523071022953`}]},
{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],"DelayedMouseEffectStyle"],
Function[StatusArea[Slot[1],1]],TagBoxNote -> "1"],StyleBox["1",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[1,{}],"Tooltip"]]]},{Directive[EdgeForm[Directive[
GrayLevel[0],Opacity[0.3`]]],Opacity[0.7`],Hue[0.125`,1,1]],TagBox[TooltipBox[TagBox[
TagBox[DynamicBox[{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[
1.5`],Opacity[0.66`]}],{},{}],GeometricTransformationBox[DynamicBox[Typeset`ToBoxes[
{Disk[{-97.`,38.`},{2.6615836973083873`,0.8538149682454588`}],If[CurrentValue["MouseOver"],
{Thickness[0.009999999999999998`],Circle[{-97.`,38.`},{6.090400710411489`,1.9537523071022953`}]},
{}]},StandardForm,Graphics]],{{{1,0.`},{0,3.03017261279991`}},Center}]}],"DelayedMouseEffectStyle"],
Function[StatusArea[Slot[1],1]],TagBoxNote -> "1"],StyleBox["1",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[1,{}],"Tooltip"]]]}}},{{},{},{},{},{},{},{},{},{},{}},{},{}}},TagBox[
{},Function[Annotation[Slot[1],"GeoGridLines","WolframGeoGraphics"]]]}}},TagBox[{},
Function[Annotation[Slot[1],"GeoScaleBar","WolframGeoGraphics"]]]},CoordinatesToolOptions -> {"DisplayFunction" -> Function[
GeoGraphics`GeoGridPositionDisplay[Slot[1],"Equirectangular","ITRF00"]],"CopiedValueFunction" -> Function[
GeoGraphics`GeoGridPositionCopiedValue[Slot[1],"Equirectangular","ITRF00"]]},Method -> CompressedData[
"1:eJztW31sHEcV3zgX10nj4DZNlbQiXAiCBokkbT7+CB+79jn+wrEPnxPAGJHx3ezd1ns7l9ldX1wJyS2taKsIQgAJUEVLoUUKIQWUohYayX9UCTQSBZKgNi0lIU1CaasSIkGkNgrzsbt3tzd3Z8c1seVZydbuzuyb38x7v3kzc++tGkJ9+o2KotgR8q/bsB29zn/qc02YuIncxDIAO61QB67pJJxRE4a+mEef5pN/HS7ECrvGVZ2+sBuonPaWGDIRxsr5gUPK22dU7P78cO/2VedVvGLv4deuXPydqPKJp//zme0PvK3iV9c9emD5wZdUfEf7vMd3HnlBVPmJ+x7e/5U3Tqv44iOfiB5a+ZqKjYeVn+Z3nRdV7nv6r5G/HfqHih/p/eDPvvPDV1T8rxUP/bFh829ElZ/74tf+u/3Z11U8fHGNcmQDgbH61jvfWv/kWVFlePsz892uv5MOrlx2Nf88uVG8S1C548w9txxsJx3kNydVvIFdx0SS0Y0/arx71TsqzsTeu3Df62dVfOrki4tPHf2VqPIeZVfzs9++oOJfX7pyYvcbf1Fx9+aewWPLT4sqPx7fsPrUO39SMUNxhigl/ervD9+x+xU1ZAm3kBvPCFqQa6UAHmXGYC8kBc2ug7LAMZKhj5YVPmJW1AJsyE2IIaGfthoYJh1jBHI7ouC2ptKwDeEsf1NqmfSTdgxGu+EINA06tt64HVd59RvIv94cSBrOKNbZdV6tYKKlWG8rYCUN5DJG0u60HIgBQYcsDrgCS2ibOyC2ST0PzaWw9JvJTT+RNbwNuTaMI9tgUuuKpbKbfuxCewG5aQOmDQUNbdV1MmB2VUB0lDqMdMYkf45oGIOatCVMNIcM+j5UuKRYTBwZ1hRkMV1jlDMNC9ql/RYMlY4h1IkJxFxsI7wNpWAwOAK5ORMkYRZaTlW5FPruBB22ZtMUlI0m6GMPssJNNBUsI24iZ2Jmv4MoiSAHuT6YRSOwGwxB067UiUZqtNhIGxYwO62c6xTI0IHMFCMD+4LOvO0Q+QYa6i+1a3sRr0JRGlZaj4hHhD1NiIR1FSqVM7GcgBOg5nwRNQ1an/3TF81y/HX+l/0ImY6R4y9orxIOcFy7GUPA392ueL6WqG1nKzTBKEyx2YIznleiHEskgQkLkFpHLZAttsHSkWo17OHSMg5TS2ge3o1aqDy+nVwnoxr+3vfptUDjvaSVOnXe8GIK1iU+z3J2ANPlPGRoe0cgDmEJxrufGO0w4b+Nmbe5535vmqyn0gycNOEkkYLjP/7U2V98TMPaP9fs2aov0TgHxPbCFIJvfuqh1cc+3RCSxCYv7prKTWi+uDeB9XjoTnt2QhdNzUM2Ml0HFnrM61wW2NKHHnjzc8+sPKcaiwKDCdDwd1U6JUkwFRKMdWn4KrvUsGntXXZ575Wlt2n4weP7f7npt8p1JkEVpC8/+MJTe86t1vD6j3zyJ2e+vnB2k6BeQIJ6SYLpIcF7zKI2efPrWCxsWi8tfi71VtcyDT82dPB5u+9d9bqRoBbSr95/YEXk3lUavnzvhRPn3PrZTYKIgAQRSYLpIQH9VNEGfNNqDpvWaUaCBRoeYyR48/qRoBbSfXXvKvsGl2t475/zR7/VclWd1SQoGEyBBPMkCaaRBErcN61WsSeYMSSogvQbkgSSBFPYEyg9/nazzLRmjieohVR6AkmCayRBhMGM+vNre9l2c8aQoBZS6QkkCa6RBA0MZtN4pfn11IwhQS2k35QkkCSYynIo6pnWeNmZy0xbDlVGKpdDkgRT+rHsC/78OtNJUAXpnCRB6e/Hyix5ahQrhgYL2LdS3SKEU4YFHGhTqvTmaDRJ9bCKD3DzzhGqtLkWD2oJtBe8Ydr7sFISZbCT3RspP2rFk1KIBUmYiNsLa2TrLpdNHsBKuybACWqvnf19bevXhxAtZR3JGTDFWFEL1UeroyqSNFVkdiNvqgUkh9OYRjtxiaWhFQnvkcaEbAO5kIiFvDAGaQwR/9wL3hAH/3ieS/N39E1aSOBNfveNVDeNoeH8CybsAr9+wH60f1ktTMilghYXBPWRkYCVrIahMujMfWRgHGfYzWB4ThmkoQLfXTOOD+wn178TYdRLQ43FQYrYbZpVKA+1YVon1WnAj1lTPXGM7obMQETaFesjAfGIrw+/E9VieWwqeRt0QKdF45FAwUAr0Iz2IIF0Jw8wjxz6PDJ1DLLRbooLpMM9rufyMyilN1QRKwMxZSCmDMSUgZgyEPO6B2LSymWBmAJ10OVBs2UhBxQsLLRwpo9F6gwvEKrEPnrk8ZcLY11hx8y5FdOCrbHw+41aEGInLG/1v+8Rlo8F5XFxebMvf0BcHuDbLC5vD/CL8fnfk11PdfxN42WzEpu0Eiv4mLe4Q0MmZHNjnBpxhmgbhtcQRb66Xqwa6aulr5a+Wvpq6aun3VeXb9ILm8oqA/4+7O3ZKoGw0kiSGrW30Jw6Gyv+SsniWeixHb8ZCG+h6aBRHLVb6mg8Gntx35fGcRe7+fJkN+tNxS1V36n/f8dAJsgoMkFGJsjIBBml/MxfJsjIBJkaSGWCjCSBTJCRCTKSBDJBZg6GQEgSvG8kkAkykgRzmQQcpkyQkSSYwySIMJgyQUaSYA6TQCbISBLMeRJwmDJBRpJgrpNAJsjMVhLIBBmZIDNZZDJBJkAlE2QUmSAjg25l0G3YMmXQrQy6LZM724NuZYJMqFwmyFTw1TJBRvpq6aulr1akr1ZkgkzVLTSnztxOkNlZueXSYwaj7JghMO+i5ZZ/3rVkynqmvjrhEOJQNfcgbnHTfZRTdALDjnIqnYbII58pHfl4kqfdOtkZkd9QcW/b3PCc6fejD7ITb2rE1Q6frvXQytP3AEJZ7vPLfYvwYOuGynya7MFWYkJ6ZZ6oG1ndgCyQdk/MLMuVUEuJQUsTm0YpZ8f+MOD9jnKirCX2OvJxXj52qawlOsVMxlBLh/Yu8hDDEDgwFc0bTibqZGA0PNZbovl8fm2ev12bRNmQRDo/9RvkBrk4SSYOs0hfn7VQ3oRkuThEFpa8iRRwQFTHKBsdvGvTndHeHLSCSTGaRBYZ/SFiatjeEs04Tm7LunW0eUSq2axaFuTWIpxel0S5UUzXPf8Dm4XLvQ=="],
PlotRange -> {{-107.10000000000004`,115.10000000000002`},{-12.791666666666679`,79.79166666666669`}},
PlotRangeClipping -> True,PlotRangePadding -> None,DefaultBaseStyle -> "GeoGraphics"],
StandardForm],"Output",CellLabel -> "Out[4]= ",ExpressionUUID -> "b5afbbbb-cba2-4797-9a09-681c275c6289"]},
Open],ExpressionUUID -> "04021911-469c-4316-b6d7-53a59b4a5e70"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Dataset","[",RowBox[{"ReverseSort","@",RowBox[{"Counts","[","locationsAlKhwarizmi","]"}]}],"]"}]],
"Input",CellLabel -> "In[5]:= ",ExpressionUUID -> "0d957ca8-079d-4a71-bbcd-d63582b248f5"],Cell[
BoxData[
TagBox[TagBox[DynamicModuleBox[{Set[TypeSystem`NestedGrid`PackagePrivate`$state$$,
Association["InitialData" -> Association[Entity["Country","India"] -> 10,Entity["Country",
"Iran"] -> 6,Entity["Country","Greece"] -> 4,Entity["Country","Spain"] -> 1,Entity[
"Country","UnitedStates"] -> 1,Entity["Country","Switzerland"] -> 1,Entity["Country",
"China"] -> 1,Entity["Country","Uzbekistan"] -> 1,Entity["Country","Turkmenistan"] -> 1,
Entity["Country","Portugal"] -> 1],"AllowEmbedding" -> True,"InitialShape" -> TypeSystem`PackageScope`Limited[
TypeSystem`PackageScope`ColumnShape[TypeSystem`PackageScope`KeyValueShape[TypeSystem`PackageScope`AtomShape[
90],TypeSystem`PackageScope`AtomShape[34]]],10,DirectedInfinity[1],{}],"InitialType" -> TypeSystem`Assoc[
TypeSystem`Atom[Entity["Country"]],TypeSystem`Atom[Integer],10],"Meta" -> Association[],
"RowTarget" -> 20,"ColumnTarget" -> 10,"Shape" -> TypeSystem`PackageScope`Limited[
TypeSystem`PackageScope`ColumnShape[TypeSystem`PackageScope`KeyValueShape[TypeSystem`PackageScope`AtomShape[
90],TypeSystem`PackageScope`AtomShape[34]]],10,DirectedInfinity[1],{}],"Type" -> TypeSystem`Assoc[
TypeSystem`Atom[Entity["Country"]],TypeSystem`Atom[Integer],10],"Path" -> {},"DisplayedRowCount" -> 10,
"DisplayedColumnCount" -> 1,"DataRowCount" -> 10,"DataColumnCount" -> 1,"SortPaths" -> {},
"SortDirections" -> {},"HiddenItemsMap" -> Null,"UpdateType" -> 1]],TypeSystem`NestedGrid`PackagePrivate`$outputID$$,Set[
TypeSystem`NestedGrid`PackagePrivate`$path$$,{}],Set[TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
1],Set[TypeSystem`NestedGrid`PackagePrivate`$hPos$$,1],Set[TypeSystem`NestedGrid`PackagePrivate`$grid$$,
DynamicModule[{Set[TypeSystem`NestedGrid`PackagePrivate`renderedGrid,Deploy[Style[
Grid[{{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[RawBoxes["\"India\""],
Style[RawBoxes["\"India\""],FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,
0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{Key[Entity["Country","India"]]},1]]],Row[{Row[{Style[RawBoxes["\"India\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{90,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}],Item[
Pane[Annotation[Tooltip[RawBoxes["10"],Row[{Row[{Style[RawBoxes["\"India\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{Key[Entity["Country","India"]]},"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[
EventHandler[MouseAppearance[Mouseover[RawBoxes["\"Iran\""],Style[RawBoxes["\"Iran\""],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{Key[Entity["Country","Iran"]]},1]]],Row[{Row[{Style[RawBoxes["\"Iran\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{90,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}],Item[
Pane[Annotation[Tooltip[RawBoxes["6"],Row[{Row[{Style[RawBoxes["\"Iran\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{Key[Entity["Country","Iran"]]},"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[
EventHandler[MouseAppearance[Mouseover[RawBoxes["\"Greece\""],Style[RawBoxes["\"Greece\""],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{Key[Entity["Country","Greece"]]},1]]],Row[{Row[{Style[RawBoxes["\"Greece\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{90,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}],Item[
Pane[Annotation[Tooltip[RawBoxes["4"],Row[{Row[{Style[RawBoxes["\"Greece\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{Key[Entity["Country","Greece"]]},"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[
EventHandler[MouseAppearance[Mouseover[RawBoxes["\"Spain\""],Style[RawBoxes["\"Spain\""],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{Key[Entity["Country","Spain"]]},1]]],Row[{Row[{Style[RawBoxes["\"Spain\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{90,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}],Item[
Pane[Annotation[Tooltip[RawBoxes["1"],Row[{Row[{Style[RawBoxes["\"Spain\""],GrayLevel[
0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{Key[Entity["Country","Spain"]]},"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[
EventHandler[MouseAppearance[Mouseover[RawBoxes["\"United States\""],Style[RawBoxes[
"\"United States\""],FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,
0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{Key[Entity["Country","UnitedStates"]]},1]]],Row[{Row[{Style[RawBoxes["\"United States\""],
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Annotation[Tooltip[RawBoxes["1"],Row[
{Row[{Style[RawBoxes["\"United States\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{Key[Entity["Country","UnitedStates"]]},
"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
RawBoxes["\"Switzerland\""],Style[RawBoxes["\"Switzerland\""],FontColor -> RGBColor[
0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[
{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{Key[Entity["Country","Switzerland"]]},
1]]],Row[{Row[{Style[RawBoxes["\"Switzerland\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Annotation[Tooltip[RawBoxes["1"],Row[
{Row[{Style[RawBoxes["\"Switzerland\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{Key[Entity["Country","Switzerland"]]},
"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
RawBoxes["\"China\""],Style[RawBoxes["\"China\""],FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{Key[Entity["Country","China"]]},
1]]],Row[{Row[{Style[RawBoxes["\"China\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Annotation[Tooltip[RawBoxes["1"],Row[
{Row[{Style[RawBoxes["\"China\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{Key[Entity["Country","China"]]},
"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
RawBoxes["\"Uzbekistan\""],Style[RawBoxes["\"Uzbekistan\""],FontColor -> RGBColor[
0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[
{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{Key[Entity["Country","Uzbekistan"]]},
1]]],Row[{Row[{Style[RawBoxes["\"Uzbekistan\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Annotation[Tooltip[RawBoxes["1"],Row[
{Row[{Style[RawBoxes["\"Uzbekistan\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{Key[Entity["Country","Uzbekistan"]]},
"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
RawBoxes["\"Turkmenistan\""],Style[RawBoxes["\"Turkmenistan\""],FontColor -> RGBColor[
0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[
{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{Key[Entity["Country","Turkmenistan"]]},
1]]],Row[{Row[{Style[RawBoxes["\"Turkmenistan\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Annotation[Tooltip[RawBoxes["1"],Row[
{Row[{Style[RawBoxes["\"Turkmenistan\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{Key[Entity["Country","Turkmenistan"]]},
"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
RawBoxes["\"Portugal\""],Style[RawBoxes["\"Portugal\""],FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{Key[Entity["Country","Portugal"]]},
1]]],Row[{Row[{Style[RawBoxes["\"Portugal\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Annotation[Tooltip[RawBoxes["1"],Row[
{Row[{Style[RawBoxes["\"Portugal\""],GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{Key[Entity["Country","Portugal"]]},
"Item",False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]}},BaseStyle -> {ContextMenu -> Dynamic[CompoundExpression[
TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,Which[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]],
{},SameQ[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger],
TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,True,CompoundExpression[Set[
TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger],
Set[TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,Block[{Set[TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos,
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$}]},
With[{Set[TypeSystem`NestedGrid`PackagePrivate`lastPath$,TypeSystem`NestedGrid`PackagePrivate`$lastPath],Set[
TypeSystem`NestedGrid`PackagePrivate`lastPathType$,TypeSystem`NestedGrid`PackagePrivate`$lastPathType],Set[
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader],Set[
TypeSystem`NestedGrid`PackagePrivate`headerHidden$,And[MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
Alternatives["RowHeader","ColumnHeader"]],TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]]],Set[
TypeSystem`NestedGrid`PackagePrivate`allHidden$,TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]],Set[
TypeSystem`NestedGrid`PackagePrivate`anyHidden$,TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]],Set[
TypeSystem`NestedGrid`PackagePrivate`sortDirection$,TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$[
"SortPaths"],TypeSystem`NestedGrid`PackagePrivate`$state$$["SortDirections"]]],Set[
TypeSystem`NestedGrid`PackagePrivate`haveData$,Not[FailureQ[TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
TypeSystem`NestedGrid`PackagePrivate`$state$$]]]],Set[TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
Not[FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath,Keys]]]},Join[{If[Or[Not[
TypeSystem`NestedGrid`PackagePrivate`haveData$],Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$],Nothing,MenuItem[StringJoin["Show ",
Which[Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"Item"],"",Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
"RowHeader"],"Row",Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"ColumnHeader"],
"Column",True,""]],KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
TypeSystem`NestedGrid`PackagePrivate`lastPath$,"remove"]],MenuEvaluator -> Automatic]],If[
Or[Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$],
TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,And[TypeSystem`NestedGrid`PackagePrivate`allHidden$,
TypeSystem`NestedGrid`PackagePrivate`headerHidden$]],Nothing,MenuItem[StringJoin[
"Hide ",Which[Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"Item"],"",
Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"RowHeader"],"Row",Equal[
TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"ColumnHeader"],"Column",True,
""]],KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
"add"]],MenuEvaluator -> Automatic]],Delimiter},If[And[TypeSystem`NestedGrid`PackagePrivate`haveData$,
MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,Alternatives["ColumnHeader",
"KeyDummy"]],TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]],
{If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,"Ascending"],MenuItem[
"Sort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
TypeSystem`NestedGrid`PackagePrivate`lastPath$,"Ascending"]],MenuEvaluator -> Automatic],
Nothing],If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,"Descending"],
MenuItem["Reverse Sort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
"Descending"]],MenuEvaluator -> Automatic],Nothing],If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
None],MenuItem["Unsort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
None]],MenuEvaluator -> Automatic],Nothing],Delimiter},{}],{MenuItem["Copy Position to Clipboard",
KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[TypeSystem`NestedGrid`PackagePrivate`copyClip]],
MenuEvaluator -> Automatic],If[TypeSystem`NestedGrid`PackagePrivate`haveData$,MenuItem[
"Copy Data to Clipboard",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`copyClip]],
MenuEvaluator -> Automatic],Nothing],Delimiter,MenuItem["Paste Position in New Cell",
KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[TypeSystem`NestedGrid`PackagePrivate`cellPaste]],
MenuEvaluator -> Automatic],If[TypeSystem`NestedGrid`PackagePrivate`haveData$,MenuItem[
"Paste Data in New Cell",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`cellPaste]],
MenuEvaluator -> Automatic],Nothing]}]]]]]]]],FontFamily -> "Source Sans Pro",FontSize -> 14,FontWeight -> Plain},
Dividers -> All,FrameStyle -> GrayLevel[0.7490196078431373`],Spacings -> {0,0},Alignment -> Left,
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 14,FontWeight -> Plain}],
LineBreakWithin -> False,ContextMenu -> {},NumberMarks -> False,ShowAutoStyles -> False]]],Set[
TypeSystem`NestedGrid`PackagePrivate`initialQ,True]},Dynamic[TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
TypeSystem`NestedGrid`PackagePrivate`$path$$,CompoundExpression[If[Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
Module[{Set[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$,$Failed],Set[TypeSystem`NestedGrid`PackagePrivate`tmpData$,
TypeSystem`NestedGrid`PackagePrivate`datasetData[TypeSystem`NestedGrid`PackagePrivate`$state$$]]},
CompoundExpression[Set[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$,If[FailureQ[
TypeSystem`NestedGrid`PackagePrivate`tmpData$],TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
TypeSystem`NestedGrid`PackagePrivate`tmpData$]]],If[Not[FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]],
Set[TypeSystem`NestedGrid`PackagePrivate`renderedGrid,TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]],
Null]]],Set[TypeSystem`NestedGrid`PackagePrivate`initialQ,False],TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,If[FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
TypeSystem`SparseGrid[TypeSystem`H["(data no longer present)"]],TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]],
RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$}]],
RuleDelayed[DynamicModuleValues,{}]]],Set[TypeSystem`NestedGrid`PackagePrivate`$topBar$$,
Dynamic[TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[TypeSystem`PackageScope`SubViewPathbar[
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]],RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`$path$$}]]],Set[
TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$,Style[Framed[Dynamic[Replace[TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
{TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null,Blank[]] -> "",RuleDelayed[
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Pattern[TypeSystem`NestedGrid`PackagePrivate`path$,
Blank[]],Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$,Blank[]],Pattern[
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,Blank[]]],CompoundExpression[Increment[
TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPath,
TypeSystem`NestedGrid`PackagePrivate`path$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
TypeSystem`NestedGrid`PackagePrivate`pathType$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]],
TypeSystem`NestedGrid`PackagePrivate`makePathTrail[TypeSystem`NestedGrid`PackagePrivate`path$,
TypeSystem`NestedGrid`PackagePrivate`makePathElements]]],RuleDelayed[Null,Spacer[
10]],RuleDelayed[Blank[],Spacer[10]]}],RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}]],
FrameStyle -> None,ImageMargins -> 0,FrameMargins -> 0,Alignment -> Top,ImageSize -> {Automatic,15}],
FontSize -> 1]],TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$},DynamicWrapperBox[
DynamicBox[ToBoxes[Dataset`DatasetContent[2,"Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
"Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],"State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
"VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],"HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
"TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],"BottomBar" -> Hold[
TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],"OutputID" -> Hold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]],StandardForm],RuleDelayed[TrackedSymbols,
{TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$}]],
Set[TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,MouseAnnotation[]]],RuleDelayed[
Initialization,Set[TypeSystem`NestedGrid`PackagePrivate`$outputID$$,CreateUUID[]]],
RuleDelayed[DynamicModuleValues,{}],BaseStyle -> {LineBreakWithin -> False},RuleDelayed[
UnsavedVariables,{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],ExpressionUUID -> "f9902a65-af6d-4907-a094-384d59e738a3"],
Deploy,DefaultBaseStyle -> "Deploy"],Dataset`InterpretDataset[1],Selectable -> False,
Editable -> False,SelectWithContents -> True],StandardForm],"Output",CellLabel -> "Out[5]= ",
ExpressionUUID -> "1684075e-64df-4234-91c9-df710d8b12de"]},Open],ExpressionUUID -> "e42f9184-3b62-4d3a-8250-47f64d73199b"]},
{1}],ExpressionUUID -> "0ddbab25-099b-4e25-a0bb-50f842bbd8ff"],Cell[
CellGroupData[
{Cell[
TextData[{"Content",StyleBox[RowBox[{" ","&"," "}]],"entity"," ","extraction"}],
"Subsection",ExpressionUUID -> "cf154dcd-be16-4209-825c-1d551a537216"],Cell[
TextData[
{ButtonBox["TextContents",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/TextContents.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/TextContents.html"]," ","gives"," ","a"," ","dataset"," ","of"," ","information"," ","about"," ","entities",StyleBox[
RowBox[{","," "}]],"dates",StyleBox[RowBox[{","," "}]],"quantities"," ","and"," ","other"," ","content","-","related"," ","elements"," ","found"," ","in","\[NonBreakingSpace]","a"," ","text","."}],
"Text",ExpressionUUID -> "6c819a8c-c00b-4469-9c24-38d648912823"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"wealthofNationsSentences","[",RowBox[{"[","160","]"}],"]"}]],
"Input",CellLabel -> "In[14]:= ",ExpressionUUID -> "e12579bc-c2b3-41bd-9d95-c3e9b500a7d1"],Cell[
BoxData[
"\"Adam Smith, the celebrated author of 'An Inquiry into the Nature and\\nCauses of the Wealth of Nations,' was born in the town of Kirkaldy, on\\nthe 5th of June 1723.\"",
StandardForm],"Output",CellLabel -> "Out[14]= ",ExpressionUUID -> "3f1f6446-1e94-41d4-bfb0-f013aed60bdf"]},
Open],ExpressionUUID -> "26643d0b-cc54-42f7-99cb-f3f08b37496a"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"TextContents","[",RowBox[{RowBox[{"wealthofNationsSentences","[",RowBox[
{"[","160","]"}],"]"}],","," ",RowBox[{"VerifyInterpretation","\[Rule]","True"}]}],"]"}]],
"Input",CellLabel -> "In[13]:= ",ExpressionUUID -> "3c068773-0708-4c69-b49e-489fdf8a5e64"],Cell[
BoxData[
TemplateBox[{"TextContents","nlpnocf","\"No data available for \\!\\(\\*TagBox[\\\"\\\\\\\"TextCasesSpellings\\\\\\\"\\\", Short[#1, 5] & ]\\).\"",2,13,3,29286917978228856761,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "fe822ebd-444c-439e-a90b-d04cf42e8eb9"],Cell[
BoxData[
TagBox[TagBox[DynamicModuleBox[{Set[TypeSystem`NestedGrid`PackagePrivate`$state$$,
Association["InitialData" -> {Association["String" -> "Adam","Type" -> "GivenName",
"Position" -> {1,4},"Probability" -> 0.9620856046676636`,"Interpretation" -> Entity[
"GivenName",{"Adam","UnitedStates","male"}],"HighlightedSnippet" -> Row[{Highlighted[
"Adam"]," Smith, the celebrated author of 'An"}]],Association["String" -> "Adam Smith",
"Type" -> "Person","Position" -> {1,10},"Probability" -> 0.911909282207489`,"Interpretation" -> Entity[
"Person","AdamSmith::cmhb5"],"HighlightedSnippet" -> Row[{Highlighted["Adam Smith"],", the celebrated author of 'An Inquiry"}]],Association[
"String" -> "Smith","Type" -> "Surname","Position" -> {6,10},"Probability" -> 0.9646766185760498`,
"Interpretation" -> Entity["Surname","Smith"],"HighlightedSnippet" -> Row[{"Adam ",Highlighted[
"Smith"],", the celebrated author of 'An"}]],Association["String" -> "author","Type" -> "Occupation",
"Position" -> {28,33},"Probability" -> 0.6601448059082031`,"Interpretation" -> "author",
"HighlightedSnippet" -> Row[{"the celebrated ",Highlighted["author"]," of 'An Inquiry"}]],Association[
"String" -> "An Inquiry into the Nature and\nCauses of the Wealth of Nations","Type" -> "Book",
"Position" -> {39,100},"Probability" -> 0.8415364821751913`,"Interpretation" -> Entity[
"Book","TheWealthOfNations"],"HighlightedSnippet" -> Row[{"author of '",Highlighted[
"An Inquiry into the Nature and\nCauses of the Wealth of Nations"],",' was born in the"}]],Association[
"String" -> "5th","Type" -> "OrdinalNumber","Position" -> {145,147},"Probability" -> 0.8099952936172485`,
"Interpretation" -> 5,"HighlightedSnippet" -> Row[{"the ",Highlighted["5th"]," of June 1723."}]],Association[
"String" -> "5th of June 1723","Type" -> "Date","Position" -> {145,160},"Probability" -> 0.9204507321119308`,
"Interpretation" -> DateObject[{1723,6,5},"Day","Gregorian",-6.`],"HighlightedSnippet" -> Row[
{"the ",Highlighted["5th of June 1723"],"."}]],Association["String" -> "1723","Type" -> "Year",
"Position" -> {157,160},"Probability" -> 0.8223994970321655`,"Interpretation" -> "1723",
"HighlightedSnippet" -> Row[{"the 5th of June ",Highlighted["1723"],"."}]]},"AllowEmbedding" -> True,
"InitialShape" -> TypeSystem`PackageScope`HeaderShape[Association[{All,"String"} -> 1,
{All,"Type"} -> 1,{All,"Position"} -> 1,{All,"Probability"} -> 1,{All,"Interpretation"} -> 1,
{All,"HighlightedSnippet"} -> 1],TypeSystem`PackageScope`Limited[TypeSystem`PackageScope`ColumnShape[
TypeSystem`PackageScope`Limited[TypeSystem`PackageScope`RowShape[Association["String" -> TypeSystem`PackageScope`AtomShape[
347.20000000000005`],"Type" -> TypeSystem`PackageScope`AtomShape[145.60000000000002`],
"Position" -> TypeSystem`PackageScope`UnknownShape[False],"Probability" -> TypeSystem`PackageScope`AtomShape[
60],"Interpretation" -> TypeSystem`PackageScope`UnknownShape[False],"HighlightedSnippet" -> TypeSystem`PackageScope`UnknownShape[
False]]],DirectedInfinity[1],6,{All}]],8,DirectedInfinity[1],{}]],"InitialType" -> TypeSystem`Vector[
TypeSystem`Struct[{"String","Type","Position","Probability","Interpretation","HighlightedSnippet"},
{TypeSystem`Atom[String],TypeSystem`Atom[String],TypeSystem`Vector[TypeSystem`Atom[
Integer],2],TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`AnyType}],8],"Meta" -> Association[],
"RowTarget" -> 20,"ColumnTarget" -> 10,"Shape" -> TypeSystem`PackageScope`HeaderShape[
Association[{All,"String"} -> 1,{All,"Type"} -> 1,{All,"Position"} -> 1,{All,"Probability"} -> 1,
{All,"Interpretation"} -> 1,{All,"HighlightedSnippet"} -> 1],TypeSystem`PackageScope`Limited[
TypeSystem`PackageScope`ColumnShape[TypeSystem`PackageScope`Limited[TypeSystem`PackageScope`RowShape[
Association["String" -> TypeSystem`PackageScope`AtomShape[347.20000000000005`],"Type" -> TypeSystem`PackageScope`AtomShape[
145.60000000000002`],"Position" -> TypeSystem`PackageScope`UnknownShape[False],"Probability" -> TypeSystem`PackageScope`AtomShape[
60],"Interpretation" -> TypeSystem`PackageScope`UnknownShape[False],"HighlightedSnippet" -> TypeSystem`PackageScope`UnknownShape[
False]]],DirectedInfinity[1],6,{All}]],8,DirectedInfinity[1],{}]],"Type" -> TypeSystem`Vector[
TypeSystem`Struct[{"String","Type","Position","Probability","Interpretation","HighlightedSnippet"},
{TypeSystem`Atom[String],TypeSystem`Atom[String],TypeSystem`Vector[TypeSystem`Atom[
Integer],2],TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`AnyType}],8],"Path" -> {},
"DisplayedRowCount" -> 8,"DisplayedColumnCount" -> 6,"DataRowCount" -> 8,"DataColumnCount" -> 6,
"SortPaths" -> {},"SortDirections" -> {},"HiddenItemsMap" -> Null,"UpdateType" -> 1]],TypeSystem`NestedGrid`PackagePrivate`$outputID$$,Set[
TypeSystem`NestedGrid`PackagePrivate`$path$$,{}],Set[TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
1],Set[TypeSystem`NestedGrid`PackagePrivate`$hPos$$,1],Set[TypeSystem`NestedGrid`PackagePrivate`$grid$$,
DynamicModule[{Set[TypeSystem`NestedGrid`PackagePrivate`renderedGrid,Deploy[Style[
Grid[{{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover["String",Style["String",
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{All,"String"},1]]],Row[{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["String",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Tooltip[EventHandler[MouseAppearance[
Mouseover["Type",Style["Type",FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,
0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{All,"Type"},1]]],Row[{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["Type",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Tooltip[EventHandler[MouseAppearance[
Mouseover["Position",Style["Position",FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{All,"Position"},1]]],Row[{Row[
{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Tooltip[EventHandler[MouseAppearance[
Mouseover["Probability",Style["Probability",FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{All,"Probability"},1]]],Row[
{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{1,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}],Item[
Pane[Tooltip[EventHandler[MouseAppearance[Mouseover["Interpretation",Style["Interpretation",
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{All,"Interpretation"},1]]],Row[{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["Interpretation",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Tooltip[EventHandler[MouseAppearance[
Mouseover["HighlightedSnippet",Style["HighlightedSnippet",FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{All,"HighlightedSnippet"},1]]],
Row[{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["HighlightedSnippet",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{1,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}]},{Item[
Pane[Annotation[Tooltip["Adam",Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[
{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"String",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["GivenName",Row[{Row[{Style[
RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{1,4},ShowStringCharacters -> False],Style[Style[{1,4},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{1,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.962086"],
Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{1,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["\"Adam\""],Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[
{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Interpretation",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1,Key["Interpretation"]},"Item",
False],"Mouse"],ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[Row[{Highlighted["Adam"]," Smith, the celebrated author of 'An"}],
Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["HighlightedSnippet",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{1,Key["HighlightedSnippet"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[Pane[Annotation[
Tooltip["Adam Smith",Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"String",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["Person",Row[{Row[{Style[
RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{1,10},ShowStringCharacters -> False],Style[Style[{1,10},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{2,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.911909"],
Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{2,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["\"Adam Smith\""],Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[
{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Interpretation",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2,Key["Interpretation"]},"Item",
False],"Mouse"],ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[Row[{Highlighted["Adam Smith"],", the celebrated author of 'An Inquiry"}],
Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["HighlightedSnippet",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{2,Key["HighlightedSnippet"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[Pane[Annotation[
Tooltip["Smith",Row[{Row[{Style[RawBoxes["3"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["String",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["Surname",Row[{Row[{Style[
RawBoxes["3"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{6,10},ShowStringCharacters -> False],Style[Style[{6,10},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{3,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["3"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.964677"],
Row[{Row[{Style[RawBoxes["3"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{3,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["\"Smith\""],Row[{Row[{Style[RawBoxes["3"],GrayLevel[0.6`]]}],Row[
{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Interpretation",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3,Key["Interpretation"]},"Item",
False],"Mouse"],ImageSize -> {{90,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[Row[{"Adam ",Highlighted[
"Smith"],", the celebrated author of 'An"}],Row[{Row[{Style[RawBoxes["3"],GrayLevel[
0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"HighlightedSnippet",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3,Key["HighlightedSnippet"]},
"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Annotation[Tooltip["author",Row[{Row[{Style[
RawBoxes["4"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["String",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["Occupation",Row[{Row[
{Style[RawBoxes["4"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{28,33},ShowStringCharacters -> False],Style[Style[{28,33},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{4,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["4"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.660145"],
Row[{Row[{Style[RawBoxes["4"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{4,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip["author",Row[{Row[{Style[RawBoxes["4"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["Interpretation",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4,Key["Interpretation"]},"Item",
False],"Mouse"],ImageSize -> {{67.2`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[Row[{"the celebrated ",Highlighted[
"author"]," of 'An Inquiry"}],Row[{Row[{Style[RawBoxes["4"],GrayLevel[0.6`]]}],Row[
{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"HighlightedSnippet",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4,Key["HighlightedSnippet"]},
"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Annotation[Tooltip["An Inquiry into the Nature and\nCauses of the Wealth of Nations",
Row[{Row[{Style[RawBoxes["5"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["String",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["Book",Row[{Row[{Style[
RawBoxes["5"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{39,100},ShowStringCharacters -> False],Style[Style[{39,100},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{5,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["5"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.841536"],
Row[{Row[{Style[RawBoxes["5"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{5,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["\"An Inquiry into the Nature and Causes of the Wealth of Nations\""],
Row[{Row[{Style[RawBoxes["5"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Interpretation",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{5,Key["Interpretation"]},"Item",False],"Mouse"],ImageSize -> {{90,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[Row[{"author of '",Highlighted["An Inquiry into the Nature and\nCauses of the Wealth of Nations"],",' was born in the"}],
Row[{Row[{Style[RawBoxes["5"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["HighlightedSnippet",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{5,Key["HighlightedSnippet"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[Pane[Annotation[
Tooltip["5th",Row[{Row[{Style[RawBoxes["6"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["String",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["OrdinalNumber",Row[{Row[
{Style[RawBoxes["6"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{145,147},ShowStringCharacters -> False],Style[Style[{145,147},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{6,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["6"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.809995"],
Row[{Row[{Style[RawBoxes["6"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{6,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["5"],Row[{Row[{Style[RawBoxes["6"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Interpretation",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6,Key["Interpretation"]},"Item",
False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[Row[{"the ",Highlighted[
"5th"]," of June 1723."}],Row[{Row[{Style[RawBoxes["6"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"HighlightedSnippet",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6,Key["HighlightedSnippet"]},
"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Annotation[Tooltip["5th of June 1723",Row[
{Row[{Style[RawBoxes["7"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["String",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["Date",Row[{Row[{Style[
RawBoxes["7"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{145,160},ShowStringCharacters -> False],Style[Style[{145,160},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{7,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["7"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.920451"],
Row[{Row[{Style[RawBoxes["7"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{7,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["\"Sat 5 Jun 1723\""],Row[{Row[{Style[RawBoxes["7"],GrayLevel[0.6`]]}],Row[
{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Interpretation",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7,Key["Interpretation"]},"Item",
False],"Mouse"],ImageSize -> {{75,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[Row[{"the ",Highlighted[
"5th of June 1723"],"."}],Row[{Row[{Style[RawBoxes["7"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"HighlightedSnippet",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7,Key["HighlightedSnippet"]},
"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]},{Item[Pane[Annotation[Tooltip["1723",Row[{Row[{Style[
RawBoxes["8"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["String",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8,Key["String"]},"Item",False],
"Mouse"],ImageSize -> {{347.20000000000005`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["Year",Row[{Row[{Style[
RawBoxes["8"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Type",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8,Key["Type"]},"Item",False],
"Mouse"],ImageSize -> {{145.60000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover[
Style[{157,160},ShowStringCharacters -> False],Style[Style[{157,160},ShowStringCharacters -> False],
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{8,Key["Position"]},4]]],Row[{Row[{Style[RawBoxes["8"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Position",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageMargins -> {{5,3},{4,5}}]],Item[Pane[Annotation[Tooltip[RawBoxes["0.822399"],
Row[{Row[{Style[RawBoxes["8"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Probability",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{8,Key["Probability"]},"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip["1723",Row[{Row[{Style[RawBoxes["8"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["Interpretation",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8,Key["Interpretation"]},"Item",
False],"Mouse"],ImageSize -> {{44.800000000000004`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[Row[{"the 5th of June ",Highlighted[
"1723"],"."}],Row[{Row[{Style[RawBoxes["8"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["HighlightedSnippet",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8,Key["HighlightedSnippet"]},
"Item",False],"Mouse"],ImageSize -> {{60,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}]}},BaseStyle -> {ContextMenu -> Dynamic[CompoundExpression[
TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,Which[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]],
{},SameQ[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger],
TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,True,CompoundExpression[Set[
TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger],
Set[TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,Block[{Set[TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos,
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$}]},
With[{Set[TypeSystem`NestedGrid`PackagePrivate`lastPath$,TypeSystem`NestedGrid`PackagePrivate`$lastPath],Set[
TypeSystem`NestedGrid`PackagePrivate`lastPathType$,TypeSystem`NestedGrid`PackagePrivate`$lastPathType],Set[
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader],Set[
TypeSystem`NestedGrid`PackagePrivate`headerHidden$,And[MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
Alternatives["RowHeader","ColumnHeader"]],TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]]],Set[
TypeSystem`NestedGrid`PackagePrivate`allHidden$,TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]],Set[
TypeSystem`NestedGrid`PackagePrivate`anyHidden$,TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]],Set[
TypeSystem`NestedGrid`PackagePrivate`sortDirection$,TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$[
"SortPaths"],TypeSystem`NestedGrid`PackagePrivate`$state$$["SortDirections"]]],Set[
TypeSystem`NestedGrid`PackagePrivate`haveData$,Not[FailureQ[TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
TypeSystem`NestedGrid`PackagePrivate`$state$$]]]],Set[TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
Not[FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath,Keys]]]},Join[{If[Or[Not[
TypeSystem`NestedGrid`PackagePrivate`haveData$],Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$],Nothing,MenuItem[StringJoin["Show ",
Which[Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"Item"],"",Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
"RowHeader"],"Row",Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"ColumnHeader"],
"Column",True,""]],KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
TypeSystem`NestedGrid`PackagePrivate`lastPath$,"remove"]],MenuEvaluator -> Automatic]],If[
Or[Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$],
TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,And[TypeSystem`NestedGrid`PackagePrivate`allHidden$,
TypeSystem`NestedGrid`PackagePrivate`headerHidden$]],Nothing,MenuItem[StringJoin[
"Hide ",Which[Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"Item"],"",
Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"RowHeader"],"Row",Equal[
TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"ColumnHeader"],"Column",True,
""]],KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
"add"]],MenuEvaluator -> Automatic]],Delimiter},If[And[TypeSystem`NestedGrid`PackagePrivate`haveData$,
MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,Alternatives["ColumnHeader",
"KeyDummy"]],TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]],
{If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,"Ascending"],MenuItem[
"Sort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
TypeSystem`NestedGrid`PackagePrivate`lastPath$,"Ascending"]],MenuEvaluator -> Automatic],
Nothing],If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,"Descending"],
MenuItem["Reverse Sort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
"Descending"]],MenuEvaluator -> Automatic],Nothing],If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
None],MenuItem["Unsort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
None]],MenuEvaluator -> Automatic],Nothing],Delimiter},{}],{MenuItem["Copy Position to Clipboard",
KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[TypeSystem`NestedGrid`PackagePrivate`copyClip]],
MenuEvaluator -> Automatic],If[TypeSystem`NestedGrid`PackagePrivate`haveData$,MenuItem[
"Copy Data to Clipboard",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`copyClip]],
MenuEvaluator -> Automatic],Nothing],Delimiter,MenuItem["Paste Position in New Cell",
KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[TypeSystem`NestedGrid`PackagePrivate`cellPaste]],
MenuEvaluator -> Automatic],If[TypeSystem`NestedGrid`PackagePrivate`haveData$,MenuItem[
"Paste Data in New Cell",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`cellPaste]],
MenuEvaluator -> Automatic],Nothing]}]]]]]]]],FontFamily -> "Source Sans Pro",FontSize -> 14,FontWeight -> Plain},
Dividers -> All,FrameStyle -> GrayLevel[0.7490196078431373`],Spacings -> {0,0},Alignment -> Left,
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 14,FontWeight -> Plain}],
LineBreakWithin -> False,ContextMenu -> {},NumberMarks -> False,ShowAutoStyles -> False]]],Set[
TypeSystem`NestedGrid`PackagePrivate`initialQ,True]},Dynamic[TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
TypeSystem`NestedGrid`PackagePrivate`$path$$,CompoundExpression[If[Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
Module[{Set[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$,$Failed],Set[TypeSystem`NestedGrid`PackagePrivate`tmpData$,
TypeSystem`NestedGrid`PackagePrivate`datasetData[TypeSystem`NestedGrid`PackagePrivate`$state$$]]},
CompoundExpression[Set[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$,If[FailureQ[
TypeSystem`NestedGrid`PackagePrivate`tmpData$],TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
TypeSystem`NestedGrid`PackagePrivate`tmpData$]]],If[Not[FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]],
Set[TypeSystem`NestedGrid`PackagePrivate`renderedGrid,TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]],
Null]]],Set[TypeSystem`NestedGrid`PackagePrivate`initialQ,False],TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,If[FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
TypeSystem`SparseGrid[TypeSystem`H["(data no longer present)"]],TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]],
RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$}]],
RuleDelayed[DynamicModuleValues,{}]]],Set[TypeSystem`NestedGrid`PackagePrivate`$topBar$$,
Dynamic[TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[TypeSystem`PackageScope`SubViewPathbar[
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]],RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`$path$$}]]],Set[
TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$,Style[Framed[Dynamic[Replace[TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
{TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null,Blank[]] -> "",RuleDelayed[
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Pattern[TypeSystem`NestedGrid`PackagePrivate`path$,
Blank[]],Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$,Blank[]],Pattern[
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,Blank[]]],CompoundExpression[Increment[
TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPath,
TypeSystem`NestedGrid`PackagePrivate`path$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
TypeSystem`NestedGrid`PackagePrivate`pathType$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]],
TypeSystem`NestedGrid`PackagePrivate`makePathTrail[TypeSystem`NestedGrid`PackagePrivate`path$,
TypeSystem`NestedGrid`PackagePrivate`makePathElements]]],RuleDelayed[Null,Spacer[
10]],RuleDelayed[Blank[],Spacer[10]]}],RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}]],
FrameStyle -> None,ImageMargins -> 0,FrameMargins -> 0,Alignment -> Top,ImageSize -> {Automatic,15}],
FontSize -> 1]],TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$},DynamicWrapperBox[
DynamicBox[ToBoxes[Dataset`DatasetContent[2,"Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
"Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],"State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
"VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],"HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
"TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],"BottomBar" -> Hold[
TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],"OutputID" -> Hold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]],StandardForm],RuleDelayed[TrackedSymbols,
{TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$}]],
Set[TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,MouseAnnotation[]]],RuleDelayed[
Initialization,Set[TypeSystem`NestedGrid`PackagePrivate`$outputID$$,CreateUUID[]]],
RuleDelayed[DynamicModuleValues,{}],BaseStyle -> {LineBreakWithin -> False},RuleDelayed[
UnsavedVariables,{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],ExpressionUUID -> "8cad0433-d4ad-4577-904c-9fa7efe9a71d"],
Deploy,DefaultBaseStyle -> "Deploy"],Dataset`InterpretDataset[1],Selectable -> False,
Editable -> False,SelectWithContents -> True],StandardForm],"Output",CellLabel -> "Out[13]= ",
ExpressionUUID -> "2848d58c-14c5-40e5-b408-77a3cab48ef0"]},Open],ExpressionUUID -> "e5e038f7-eb2e-4a6b-bcf4-b86ac07c7816"]},
{1}],ExpressionUUID -> "9e7bffc0-7a69-4337-9099-434e633a5f51"],Cell[
CellGroupData[
{Cell[
TextData[{"Finding"," ","answers"," ","in"," ","text",StyleBox[RowBox[{" ","("}]],"Q","&","A",")"}],
"Subsection",ExpressionUUID -> "e4bee1fc-cbb8-42d3-add6-e272e2e97286"],Cell[
TextData[
{ButtonBox["FindTextualAnswer",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL[
"https://reference.wolfram.com/language/ref/FindTextualAnswer.html"],None},ButtonNote -> "https://reference.wolfram.com/language/ref/FindTextualAnswer.html"]," ","gives"," ","the"," ","substring"," ","of","\[NonBreakingSpace]","a"," ","text","\[NonBreakingSpace]","that"," ","best"," ","appears"," ","to"," ","answer","\[NonBreakingSpace]","a"," ","specified"," ","question","."}],
"Text",ExpressionUUID -> "a1f81aea-9418-40b6-917b-5765a3f2764a"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{RowBox[{"FindTextualAnswer","[",RowBox[{"publicGood",","," ","\"What is the definition of a public good?\""}],"]"}]," "}]],
"Input",CellLabel -> "In[13]:= ",ExpressionUUID -> "b8e44c55-26e2-4407-ae16-b46c4b851868"],Cell[
BoxData[
"\"Kallhoff 2011: Ch. 2). According to her, a public good is one that satisfies the \[OpenCurlyDoubleQuote]basic availability condition\[CloseCurlyDoubleQuote] and the \[OpenCurlyDoubleQuote]open access condition\[CloseCurlyDoubleQuote]\""],
"Output",CellLabel -> "Out[13]= ",ExpressionUUID -> "08923ed4-8282-496b-af76-da98dbf38af5"]},
Open],ExpressionUUID -> "419b1576-8351-4d3d-a230-3e97b4ffed07"]},{1}],ExpressionUUID -> "c580dc38-7cb1-4365-8515-d3d887d715ea"],Cell[
CellGroupData[
{Cell[
TextData[{"Searching"," ","text"}],"Subsection",ExpressionUUID -> "ab91a80b-9f76-4b86-998d-053d6654ac5d"],Cell[
TextData[
{ButtonBox["TextSearchReport",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL[
"https://reference.wolfram.com/language/ref/TextSearchReport.html?q=TextSearchReport"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/TextSearchReport.html?q=TextSearchReport"]," ","returns"," ","a"," ","structured"," ","report"," ","of"," ","files"," ","that"," ","contains"," ","the"," ","expression"," ","specified"," ","as"," ","second"," ","argument",StyleBox[
RowBox[{"."," "}]]}],"Text",ExpressionUUID -> "f3913c5e-b533-485f-960e-997f9449704f"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"TextSearchReport","[",RowBox[{"\"ExampleData/Text\"",",","\"cat\""}],"]"}]],
"Input",CellLabel -> "In[2]:= ",ExpressionUUID -> "7eb02c1b-0039-485a-9528-5b7ed09df77c"],Cell[
BoxData[
TemplateBox[{"Clear","wrsym","\"\!\(\*RowBox[{\"\\:f3b5Symbol \", StyleBox[TagBox[\"TextSearch`LoadCLuceneLink\", Function[Short[Slot[1], 5]]], ShowStringCharacters -> False], \" is Protected.\\:f3b5\"}]\)\"",2,2,2,29286912036826525503,"Local"},
"MessageTemplate"]],"Message","MSG",ExpressionUUID -> "db03dacb-399a-4f77-9882-2f96bec19ad0"],Cell[
BoxData[
TagBox[TagBox[DynamicModuleBox[{Set[TypeSystem`NestedGrid`PackagePrivate`$state$$,
Association["InitialData" -> {Association["Title" -> "OriginOfSpecies","FileName" -> "OriginOfSpecies.txt",
"ModificationDate" -> DateObject[{2021,8,19,9,3,12.`},"Instant","Gregorian",-6.`],
"FileByteCount" -> 893121,"FileExtension" -> "txt","Location" -> File["/usr/local/Wolfram/WolframEngine/12.3.1.7360342/SystemFiles/Components/TextSearch/ExampleData/Text/OriginOfSpecies.txt"]],Association[
"Title" -> "AliceInWonderland","FileName" -> "AliceInWonderland.txt","ModificationDate" -> DateObject[
{2021,8,19,9,3,12.`},"Instant","Gregorian",-6.`],"FileByteCount" -> 51724,"FileExtension" -> "txt",
"Location" -> File["/usr/local/Wolfram/WolframEngine/12.3.1.7360342/SystemFiles/Components/TextSearch/ExampleData/Text/AliceInWonderland.txt"]]},
"AllowEmbedding" -> True,"InitialShape" -> TypeSystem`PackageScope`HeaderShape[Association[
{All,"Title"} -> 1,{All,"FileName"} -> 1,{All,"ModificationDate"} -> 1,{All,"FileByteCount"} -> 1,
{All,"FileExtension"} -> 1,{All,"Location"} -> 1],TypeSystem`PackageScope`Limited[
TypeSystem`PackageScope`ColumnShape[TypeSystem`PackageScope`Limited[TypeSystem`PackageScope`RowShape[
Association["Title" -> TypeSystem`PackageScope`AtomShape[190.4`],"FileName" -> TypeSystem`PackageScope`AtomShape[
235.20000000000002`],"ModificationDate" -> TypeSystem`PackageScope`AtomShape[75],
"FileByteCount" -> TypeSystem`PackageScope`AtomShape[34],"FileExtension" -> TypeSystem`PackageScope`AtomShape[
33.6`],"Location" -> TypeSystem`PackageScope`AtomShape[60]]],DirectedInfinity[1],
6,{All}]],2,DirectedInfinity[1],{}]],"InitialType" -> TypeSystem`Vector[TypeSystem`Struct[
{"Title","FileName","ModificationDate","FileByteCount","FileExtension","Location"},
{TypeSystem`Atom[String],TypeSystem`Atom[String],TypeSystem`Atom[DateObject],TypeSystem`Atom[
Integer],TypeSystem`Atom[String],TypeSystem`Atom[File]}],2],"Meta" -> Association[],
"RowTarget" -> 20,"ColumnTarget" -> 10,"Shape" -> TypeSystem`PackageScope`HeaderShape[
Association[{All,"Title"} -> 1,{All,"FileName"} -> 1,{All,"ModificationDate"} -> 1,
{All,"FileByteCount"} -> 1,{All,"FileExtension"} -> 1,{All,"Location"} -> 1],TypeSystem`PackageScope`Limited[
TypeSystem`PackageScope`ColumnShape[TypeSystem`PackageScope`Limited[TypeSystem`PackageScope`RowShape[
Association["Title" -> TypeSystem`PackageScope`AtomShape[190.4`],"FileName" -> TypeSystem`PackageScope`AtomShape[
235.20000000000002`],"ModificationDate" -> TypeSystem`PackageScope`AtomShape[75],
"FileByteCount" -> TypeSystem`PackageScope`AtomShape[34],"FileExtension" -> TypeSystem`PackageScope`AtomShape[
33.6`],"Location" -> TypeSystem`PackageScope`AtomShape[60]]],DirectedInfinity[1],
6,{All}]],2,DirectedInfinity[1],{}]],"Type" -> TypeSystem`Vector[TypeSystem`Struct[
{"Title","FileName","ModificationDate","FileByteCount","FileExtension","Location"},
{TypeSystem`Atom[String],TypeSystem`Atom[String],TypeSystem`Atom[DateObject],TypeSystem`Atom[
Integer],TypeSystem`Atom[String],TypeSystem`Atom[File]}],2],"Path" -> {},"DisplayedRowCount" -> 2,
"DisplayedColumnCount" -> 6,"DataRowCount" -> 2,"DataColumnCount" -> 6,"SortPaths" -> {},
"SortDirections" -> {},"HiddenItemsMap" -> Null,"UpdateType" -> 1]],Set[TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
"fe80535d-40ce-47cf-87d3-94ec37859d82"],Set[TypeSystem`NestedGrid`PackagePrivate`$path$$,
{}],Set[TypeSystem`NestedGrid`PackagePrivate`$vPos$$,1],Set[TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
1],Set[TypeSystem`NestedGrid`PackagePrivate`$grid$$,DynamicModule[{Set[TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
Deploy[Style[Grid[{{Item[Pane[Tooltip[EventHandler[MouseAppearance[Mouseover["Title",
Style["Title",FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{All,"Title"},1]]],Row[{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["Title",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Tooltip[EventHandler[MouseAppearance[
Mouseover["FileName",Style["FileName",FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{All,"FileName"},1]]],Row[{Row[
{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["FileName",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Tooltip[EventHandler[MouseAppearance[
Mouseover["ModificationDate",Style["ModificationDate",FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{All,"ModificationDate"},1]]],
Row[{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["ModificationDate",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{1,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}],Item[
Pane[Tooltip[EventHandler[MouseAppearance[Mouseover["FileByteCount",Style["FileByteCount",
FontColor -> RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],
"LinkHand"],RuleDelayed[{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
{All,"FileByteCount"},1]]],Row[{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",
RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style["FileByteCount",
GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}],Item[Pane[Tooltip[EventHandler[MouseAppearance[
Mouseover["FileExtension",Style["FileExtension",FontColor -> RGBColor[0.27450980392156865`,
0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[{"MouseClicked",1},
TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{All,"FileExtension"},1]]],Row[
{Row[{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["FileExtension",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],ImageSize -> {{1,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[0.95`],Alignment -> {Left,Baseline}],Item[
Pane[Tooltip[EventHandler[MouseAppearance[Mouseover["Location",Style["Location",FontColor -> RGBColor[
0.27450980392156865`,0.5372549019607843`,0.792156862745098`]]],"LinkHand"],RuleDelayed[
{"MouseClicked",1},TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{All,"Location"},1]]],Row[{Row[
{Style["All",GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Location",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
ImageSize -> {{1,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],Background -> GrayLevel[
0.95`],Alignment -> {Left,Baseline}]},{Item[Pane[Annotation[Tooltip["OriginOfSpecies",
Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Title",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1,Key["Title"]},"Item",False],
"Mouse"],ImageSize -> {{190.4`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[
Pane[Annotation[Tooltip["OriginOfSpecies.txt",Row[{Row[{Style[RawBoxes["1"],GrayLevel[
0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"FileName",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1,Key["FileName"]},"Item",False],
"Mouse"],ImageSize -> {{235.20000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[RawBoxes["\"19/08/2021 9:03 am\""],
Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["ModificationDate",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{1,Key["ModificationDate"]},"Item",False],"Mouse"],ImageSize -> {{75,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["893121"],Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"FileByteCount",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1,Key["FileByteCount"]},"Item",
False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["txt",Row[{Row[{Style[
RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["FileExtension",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{1,Key["FileExtension"]},"Item",False],"Mouse"],ImageSize -> {{33.6`,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[File["/usr/local/Wolfram/WolframEngine/12.3.1.7360342/SystemFiles/Components/TextSearch/ExampleData/Text/OriginOfSpecies.txt"],
Row[{Row[{Style[RawBoxes["1"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Location",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1,Key["Location"]},"Item",False],
"Mouse"],ImageSize -> {{60,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]},{Item[
Pane[Annotation[Tooltip["AliceInWonderland",Row[{Row[{Style[RawBoxes["2"],GrayLevel[
0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"Title",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2,Key["Title"]},"Item",False],
"Mouse"],ImageSize -> {{190.4`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[
Pane[Annotation[Tooltip["AliceInWonderland.txt",Row[{Row[{Style[RawBoxes["2"],GrayLevel[
0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"FileName",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2,Key["FileName"]},"Item",False],
"Mouse"],ImageSize -> {{235.20000000000002`,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip[RawBoxes["\"19/08/2021 9:03 am\""],
Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["ModificationDate",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{2,Key["ModificationDate"]},"Item",False],"Mouse"],ImageSize -> {{75,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[RawBoxes["51724"],Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[
" \:203a ",RGBColor[0.6509803921568628`,0.6509803921568628`,0.6509803921568628`]],Style[
"FileByteCount",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2,Key["FileByteCount"]},"Item",
False],"Mouse"],ImageSize -> {{34,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],
ItemSize -> {Full,Automatic}],Item[Pane[Annotation[Tooltip["txt",Row[{Row[{Style[
RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["FileExtension",GrayLevel[0.6`]]}]},
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
{2,Key["FileExtension"]},"Item",False],"Mouse"],ImageSize -> {{33.6`,Full},Automatic},
ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}],Item[Pane[Annotation[
Tooltip[File["/usr/local/Wolfram/WolframEngine/12.3.1.7360342/SystemFiles/Components/TextSearch/ExampleData/Text/AliceInWonderland.txt"],
Row[{Row[{Style[RawBoxes["2"],GrayLevel[0.6`]]}],Row[{Style[" \:203a ",RGBColor[0.6509803921568628`,
0.6509803921568628`,0.6509803921568628`]],Style["Location",GrayLevel[0.6`]]}]},BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 10.5`}]],
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2,Key["Location"]},"Item",False],
"Mouse"],ImageSize -> {{60,Full},Automatic},ImageMargins -> {{5,3},{4,5}}],ItemSize -> {Full,Automatic}]}},
BaseStyle -> {ContextMenu -> Dynamic[CompoundExpression[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
Which[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]],{},SameQ[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger],TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
True,CompoundExpression[Set[TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger],Set[TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
Block[{Set[TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos,{TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$}]},
With[{Set[TypeSystem`NestedGrid`PackagePrivate`lastPath$,TypeSystem`NestedGrid`PackagePrivate`$lastPath],Set[
TypeSystem`NestedGrid`PackagePrivate`lastPathType$,TypeSystem`NestedGrid`PackagePrivate`$lastPathType],Set[
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader],Set[
TypeSystem`NestedGrid`PackagePrivate`headerHidden$,And[MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
Alternatives["RowHeader","ColumnHeader"]],TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]]],Set[
TypeSystem`NestedGrid`PackagePrivate`allHidden$,TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]],Set[
TypeSystem`NestedGrid`PackagePrivate`anyHidden$,TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$]],Set[
TypeSystem`NestedGrid`PackagePrivate`sortDirection$,TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$[
"SortPaths"],TypeSystem`NestedGrid`PackagePrivate`$state$$["SortDirections"]]],Set[
TypeSystem`NestedGrid`PackagePrivate`haveData$,Not[FailureQ[TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
TypeSystem`NestedGrid`PackagePrivate`$state$$]]]],Set[TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
Not[FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath,Keys]]]},Join[{If[Or[Not[
TypeSystem`NestedGrid`PackagePrivate`haveData$],Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$],Nothing,MenuItem[StringJoin["Show ",
Which[Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"Item"],"",Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
"RowHeader"],"Row",Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"ColumnHeader"],
"Column",True,""]],KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
TypeSystem`NestedGrid`PackagePrivate`lastPath$,"remove"]],MenuEvaluator -> Automatic]],If[
Or[Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
TypeSystem`NestedGrid`PackagePrivate`$lastPath,TypeSystem`NestedGrid`PackagePrivate`$state$$],
TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,And[TypeSystem`NestedGrid`PackagePrivate`allHidden$,
TypeSystem`NestedGrid`PackagePrivate`headerHidden$]],Nothing,MenuItem[StringJoin[
"Hide ",Which[Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"Item"],"",
Equal[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"RowHeader"],"Row",Equal[
TypeSystem`NestedGrid`PackagePrivate`lastPathType$,"ColumnHeader"],"Column",True,
""]],KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
"add"]],MenuEvaluator -> Automatic]],Delimiter},If[And[TypeSystem`NestedGrid`PackagePrivate`haveData$,
MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$,Alternatives["ColumnHeader",
"KeyDummy"]],TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]],
{If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,"Ascending"],MenuItem[
"Sort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
TypeSystem`NestedGrid`PackagePrivate`lastPath$,"Ascending"]],MenuEvaluator -> Automatic],
Nothing],If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,"Descending"],
MenuItem["Reverse Sort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
"Descending"]],MenuEvaluator -> Automatic],Nothing],If[UnsameQ[TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
None],MenuItem["Unsort",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`updateSort[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][TypeSystem`NestedGrid`PackagePrivate`lastPath$,
None]],MenuEvaluator -> Automatic],Nothing],Delimiter},{}],{MenuItem["Copy Position to Clipboard",
KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[TypeSystem`NestedGrid`PackagePrivate`copyClip]],
MenuEvaluator -> Automatic],If[TypeSystem`NestedGrid`PackagePrivate`haveData$,MenuItem[
"Copy Data to Clipboard",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`copyClip]],
MenuEvaluator -> Automatic],Nothing],Delimiter,MenuItem["Paste Position in New Cell",
KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[TypeSystem`NestedGrid`PackagePrivate`cellPaste]],
MenuEvaluator -> Automatic],If[TypeSystem`NestedGrid`PackagePrivate`haveData$,MenuItem[
"Paste Data in New Cell",KernelExecute[TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`cellPaste]],
MenuEvaluator -> Automatic],Nothing]}]]]]]]]],FontFamily -> "Source Sans Pro",FontSize -> 14,FontWeight -> Plain},
Dividers -> All,FrameStyle -> GrayLevel[0.7490196078431373`],Spacings -> {0,0},Alignment -> Left,
BaseStyle -> {FontFamily -> "Source Sans Pro",FontSize -> 14,FontWeight -> Plain}],
LineBreakWithin -> False,ContextMenu -> {},NumberMarks -> False,ShowAutoStyles -> False]]],Set[
TypeSystem`NestedGrid`PackagePrivate`initialQ,True]},Dynamic[TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
TypeSystem`NestedGrid`PackagePrivate`$path$$,CompoundExpression[If[Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
Module[{Set[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$,$Failed],Set[TypeSystem`NestedGrid`PackagePrivate`tmpData$,
TypeSystem`NestedGrid`PackagePrivate`datasetData[TypeSystem`NestedGrid`PackagePrivate`$state$$]]},
CompoundExpression[Set[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$,If[FailureQ[
TypeSystem`NestedGrid`PackagePrivate`tmpData$],TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$,
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
TypeSystem`NestedGrid`PackagePrivate`tmpData$]]],If[Not[FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]],
Set[TypeSystem`NestedGrid`PackagePrivate`renderedGrid,TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]],
Null]]],Set[TypeSystem`NestedGrid`PackagePrivate`initialQ,False],TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
TypeSystem`NestedGrid`PackagePrivate`$hPos$$,If[FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
TypeSystem`SparseGrid[TypeSystem`H["(data no longer present)"]],TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]],
RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$}]],
RuleDelayed[DynamicModuleValues,{}]]],Set[TypeSystem`NestedGrid`PackagePrivate`$topBar$$,
Dynamic[TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[TypeSystem`PackageScope`SubViewPathbar[
TypeSystem`NestedGrid`PackagePrivate`$path$$,TypeSystem`NestedGrid`PackagePrivate`updateState[
TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$path$$,
TypeSystem`NestedGrid`PackagePrivate`$vPos$$,TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
TypeSystem`NestedGrid`PackagePrivate`$grid$$,TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]],RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`$path$$}]]],Set[
TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$,Style[Framed[Dynamic[Replace[TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
{TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null,Blank[]] -> "",RuleDelayed[
TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Pattern[TypeSystem`NestedGrid`PackagePrivate`path$,
Blank[]],Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$,Blank[]],Pattern[
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,Blank[]]],CompoundExpression[Increment[
TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPath,
TypeSystem`NestedGrid`PackagePrivate`path$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
TypeSystem`NestedGrid`PackagePrivate`pathType$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$],Set[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]],
TypeSystem`NestedGrid`PackagePrivate`makePathTrail[TypeSystem`NestedGrid`PackagePrivate`path$,
TypeSystem`NestedGrid`PackagePrivate`makePathElements]]],RuleDelayed[Null,Spacer[
10]],RuleDelayed[Blank[],Spacer[10]]}],RuleDelayed[TrackedSymbols,{TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}]],
FrameStyle -> None,ImageMargins -> 0,FrameMargins -> 0,Alignment -> Top,ImageSize -> {Automatic,15}],
FontSize -> 1]],Set[TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
"fd4d08f9-6d50-4651-892c-b297b97ac1be"][{8,Key["HighlightedSnippet"]},"Item",False]]},
DynamicWrapperBox[DynamicBox[ToBoxes[Dataset`DatasetContent[2,"Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
"Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],"State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
"VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],"HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
"TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],"BottomBar" -> Hold[
TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],"OutputID" -> Hold[TypeSystem`NestedGrid`PackagePrivate`localHold[
TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]],StandardForm],RuleDelayed[TrackedSymbols,
{TypeSystem`NestedGrid`PackagePrivate`$state$$,TypeSystem`NestedGrid`PackagePrivate`$grid$$}]],
Set[TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,MouseAnnotation[]]],RuleDelayed[
Initialization,Set[TypeSystem`NestedGrid`PackagePrivate`$outputID$$,CreateUUID[]]],
BaseStyle -> {LineBreakWithin -> False},RuleDelayed[UnsavedVariables,{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
ExpressionUUID -> "0b2b7e55-3132-463d-8e82-2ebdfb951c69"],Deploy,DefaultBaseStyle -> "Deploy"],
Dataset`InterpretDataset[1],Selectable -> False,Editable -> False,SelectWithContents -> True]],
"Output",CellLabel -> "Out[2]= ",ExpressionUUID -> "a07759d3-63f0-447f-b29e-0866050dcafc"]},
Open],ExpressionUUID -> "e9a9c323-6b08-4ace-8b33-a1911e50de35"]},{1}],ExpressionUUID -> "9717f2c1-cd7d-4696-886d-22c2e42b39a4"],Cell[
CellGroupData[
{Cell[
TextData[{"Understand"," ","the"," ","structure"," ","and"," ","meaning"," ","of"," ","text"}],
"Subsection",ExpressionUUID -> "de0ba1fd-65a0-49c4-9a82-3acc6e8597af"],Cell[
TextData[
{ButtonBox["TextStructure",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/TextStructure.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/TextStructure.html"]," ","allows"," ","to"," ","display"," ","the"," ","grammatical"," ","structure"," ","of"," ","a"," ","sentence",":"}],
"Text",ExpressionUUID -> "7895f8f3-cfef-48ee-a741-07bd35fda5d8"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"TextStructure","[","\"This is not a complex sentence.\"","]"}]],
"Input",CellLabel -> "In[16]:= ",ExpressionUUID -> "8236ad82-a3d9-4127-aa2d-48327b79ccb6"],Cell[
BoxData[
InterpretationBox[TemplateBox[{InterpretationBox[GridBox[{{TemplateBox[{"\[ThinSpace]","\" \"",InterpretationBox[
GridBox[{{TemplateBox[{"\[ThinSpace]","\" \"",InterpretationBox[GridBox[{{"\"This\""},{StyleBox[
"\"Determiner\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],TextElement[
"This",Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Determiner"]]]]},
"RowWithSeparators"]},{StyleBox["\"Noun Phrase\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],
TextElement[{TextElement["This",Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"Determiner"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit","NounPhrase"]]]],InterpretationBox[
GridBox[{{TemplateBox[{"\[ThinSpace]","\" \"",InterpretationBox[GridBox[{{"\"is\""},{StyleBox[
"\"Verb\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],TextElement["is",
Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Verb"]]]],InterpretationBox[
GridBox[{{"\"not\""},{StyleBox["\"Adverb\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],
TextElement["not",Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Adverb"]]]],InterpretationBox[
GridBox[{{TemplateBox[{"\[ThinSpace]","\" \"",InterpretationBox[GridBox[{{"\"a\""},{StyleBox[
"\"Determiner\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],TextElement[
"a",Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Determiner"]]]],InterpretationBox[
GridBox[{{"\"complex\""},{StyleBox["\"Adjective\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],
TextElement["complex",Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Adjective"]]]],InterpretationBox[
GridBox[{{"\"sentence\""},{StyleBox["\"Noun\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],
TextElement["sentence",Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"Noun"]]]]},"RowWithSeparators"]},{StyleBox["\"Noun Phrase\"","TextElementLabel"]}},
BaseStyle -> "TextElementGrid"],TextElement[{TextElement["a",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Determiner"]]],TextElement["complex",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Adjective"]]],TextElement["sentence",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Noun"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"NounPhrase"]]]]},"RowWithSeparators"]},{StyleBox["\"Verb Phrase\"","TextElementLabel"]}},
BaseStyle -> "TextElementGrid"],TextElement[{TextElement["is",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Verb"]]],TextElement["not",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Adverb"]]],TextElement[{TextElement["a",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Determiner"]]],TextElement["complex",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Adjective"]]],TextElement["sentence",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Noun"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"NounPhrase"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit","VerbPhrase"]]]],InterpretationBox[
GridBox[{{"\".\""},{StyleBox["\"Punctuation\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],
TextElement[".",Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Punctuation"]]]]},
"RowWithSeparators"]},{StyleBox["\"Sentence\"","TextElementLabel"]}},BaseStyle -> "TextElementGrid"],
TextElement[{TextElement[{TextElement["This",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Determiner"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"NounPhrase"]]],TextElement[{TextElement["is",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Verb"]]],TextElement["not",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Adverb"]]],TextElement[{TextElement["a",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Determiner"]]],TextElement["complex",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Adjective"]]],TextElement["sentence",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Noun"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"NounPhrase"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit","VerbPhrase"]]],TextElement[
".",Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Punctuation"]]]},Association[
"GrammaticalUnit" -> Entity["GrammaticalUnit","Sentence"]]]]},"RowDefault"],TextElement[
{TextElement[{TextElement[{TextElement["This",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Determiner"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"NounPhrase"]]],TextElement[{TextElement["is",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Verb"]]],TextElement["not",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Adverb"]]],TextElement[{TextElement["a",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Determiner"]]],TextElement["complex",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Adjective"]]],TextElement["sentence",Association["GrammaticalUnit" -> Entity[
"GrammaticalUnit","Noun"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit",
"NounPhrase"]]]},Association["GrammaticalUnit" -> Entity["GrammaticalUnit","VerbPhrase"]]],TextElement[
".",Association["GrammaticalUnit" -> Entity["GrammaticalUnit","Punctuation"]]]},Association[
"GrammaticalUnit" -> Entity["GrammaticalUnit","Sentence"]]]}]],StandardForm],"Output",
CellLabel -> "Out[16]= ",ExpressionUUID -> "8fe43e21-4db6-4933-98a0-925f754d6d4f"]},
Open],ExpressionUUID -> "f2aa66f1-8a56-4209-b81b-aa96c1431fcb"],Cell[
TextData[{"You"," ","can"," ","get"," ","the"," ","definition"," ","of"," ","a"," ","word"," ","with"," ",ButtonBox[
"WordDefinition",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/WordDefinition.html?q=WordDefinition"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/WordDefinition.html?q=WordDefinition"]}],
"Text",ExpressionUUID -> "f20fbc9b-2c5e-4f05-ba00-a679f731e91e"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"WordDefinition","[","\"computer\"","]"}]],"Input",CellLabel -> "In[15]:= ",
ExpressionUUID -> "1d87b208-e4ef-4d1a-92b7-f73cc0b9c104"],Cell[
BoxData[RowBox[{"{",RowBox[
{"\"a machine for performing calculations automatically\"",",","\"an expert at calculation (or at operating calculating machines)\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[15]= ",ExpressionUUID -> "6045eb43-1451-4ceb-b22f-944ad752b11b"]},
Open],ExpressionUUID -> "c0f7a947-9831-4ed3-8877-f4382eb0d6a9"]},{1}],ExpressionUUID -> "b226281e-1204-4b89-8544-0c4a666c4572"],Cell[
CellGroupData[
{Cell[
TextData[{"Similarity"," ","between"," ","words","/","texts","/","vectors"}],
"Subsection",ExpressionUUID -> "c22dbbba-f5a8-4ecb-86b7-4e66ebab6a9d"],Cell[
TextData[
{ButtonBox["EditDistance",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/EditDistance.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/EditDistance.html"],"\[NonBreakingSpace]","gives"," ","the"," ","number"," ","of"," ","one","-","element"," ","deletions",StyleBox[
RowBox[{","," "}]],"insertions",StyleBox[RowBox[{","," "}]],"and"," ","substitutions"," ","required"," ","to"," ","transform","\[NonBreakingSpace]","one"," ","element","\[NonBreakingSpace]","into","\[NonBreakingSpace]","another","."}],
"Text",ExpressionUUID -> "9888383e-6032-4c65-9e6d-894dba3da83d"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"EditDistance","[",RowBox[{"\"economy\"",",","\"ecology\""}],"]"}]],
"Input",CellLabel -> "In[17]:= ",ExpressionUUID -> "adbaf46e-eaf0-4104-a3cf-7114b3dd9c8c"],Cell[
BoxData[
"2",StandardForm],"Output",CellLabel -> "Out[17]= ",ExpressionUUID -> "7a659d9b-2c06-48ee-8f5a-2b19d9cb673b"]},
Open],ExpressionUUID -> "eea2f756-591d-421c-b404-527007ad2db6"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"JaccardDissimilarity","[",RowBox[{RowBox[{"{",RowBox[{"1",",","0",",","1",",","1",",","0"}],"}"}],",",RowBox[
{"{",RowBox[{"1",",","1",",","0",",","1",",","1"}],"}"}]}],"]"}]],"Input",CellLabel -> "In[18]:= ",
ExpressionUUID -> "b6c502d4-f1d4-41de-9230-594ed33bfd37"],Cell[
BoxData[FractionBox[
"3","5"],StandardForm],"Output",CellLabel -> "Out[18]= ",ExpressionUUID -> "2f502e5d-4922-4b2c-9121-e6d2f8bd7043"]},
Open],ExpressionUUID -> "bc10a2b3-74fe-4868-a455-6ed51f43d6a3"],Cell[
TextData[{ButtonBox[
"Nearest",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/Nearest.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/Nearest.html"]," ","gives"," ","the"," ","list"," ","of"," ","elements"," ","that"," ","are"," ","closest"," ","to"," ","a"," ","given"," ","expression",".","\n","Nearest","[","data",StyleBox[
RowBox[{"]"," "}]],"generates"," ","a","\[NonBreakingSpace]","NearestFunction",StyleBox[
RowBox[{"[\[Ellipsis]]","\[NonBreakingSpace]"}]],"that"," ","can"," ","be"," ","applied"," ","repeatedly"," ","to"," ","different","\[NonBreakingSpace]","x","."}],
"Text",ExpressionUUID -> "6028c63f-8d02-4eea-b63f-c64d78285c96"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"nf","=",RowBox[{"Nearest","[",RowBox[{"DictionaryLookup","[","]"}],"]"}]}]],
"Input",CellLabel -> "In[19]:= ",ExpressionUUID -> "3ae483a5-ffe9-44c4-9aa0-e6c0fa2e076e"],Cell[
BoxData[
TagBox[TemplateBox[{RowBox[{StyleBox[TagBox["NearestFunction","SummaryHead"],"NonInterpretableSummary"],StyleBox[
"[","NonInterpretableSummary"],DynamicModuleBox[{Set[Typeset`open$$,False],Set[Typeset`embedState$$,
"Ready"]},TemplateBox[{TemplateBox[{PaneSelectorBox[{False -> GridBox[{{PaneBox[ButtonBox[
DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxOpener"]],RuleDelayed[
ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,BaseStyle -> {},Evaluator -> Automatic,
Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[{Automatic,Times[
3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],
-1]]]}]],GraphicsBox[{{{Directive[PointSize[0.125`],RGBColor[1,0,0]],PointBox[{0.5`,0.5`}]},{Directive[
PointSize[0.125`],GrayLevel[0.5`]],PointBox[CompressedData["1:eJxTTMoPSuNiYGAoZgESPpnFJWlMyLyiAyqZkdN+H7Mv+rA6/NnXsp32aPKzjvCceDjlmX2Rm6DDvnV5j9HlOUTMvvYzvrEvsgmP6H9/4Da6/Kv5my79/vfAvuiNfHne//XP0eUbpqcpZxTNtC9iWWXILKh+EV1eZ+Pyrvv+r+2LBP5s/vNZaTu6/Icju7mfS5ywL1IIj20uX7oXXd6mwDXRlfeGfVHILsWDdq8w7I/5yn4o4SfQf0+il3gbiV1Bl3/0Oa3mfdVj+6IFvK+Xr3NYbg8A3Xd4iA=="]]}},{Directive[
PointSize[0.125`],GrayLevel[0]],PointBox[{0.7056740672325248`,0.6072610584092579`}],AbsoluteDashing[
{1,2}],CircleBox[{0.7056740672325248`,0.6072610584092579`},0.23196283448656893`]}},
{Background -> GrayLevel[0.93`],Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}],Frame -> True,FrameTicks -> None,FrameStyle -> Directive[Thickness[
Tiny],GrayLevel[0.7`]],PlotRangePadding -> 0.1`}],GridBox[{{RowBox[{TagBox["\"Data points: \"",
"SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["92518","SummaryItem"]}]},{RowBox[
{TagBox["\"Input: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["String",
"SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{{Directive[PointSize[0.125`],RGBColor[1,0,0]],PointBox[
{0.5`,0.5`}]},{Directive[PointSize[0.125`],GrayLevel[0.5`]],PointBox[CompressedData[
"1:eJxTTMoPSuNiYGAoZgESPpnFJWlMyLyiAyqZkdN+H7Mv+rA6/NnXsp32aPKzjvCceDjlmX2Rm6DDvnV5j9HlOUTMvvYzvrEvsgmP6H9/4Da6/Kv5my79/vfAvuiNfHne//XP0eUbpqcpZxTNtC9iWWXILKh+EV1eZ+Pyrvv+r+2LBP5s/vNZaTu6/Icju7mfS5ywL1IIj20uX7oXXd6mwDXRlfeGfVHILsWDdq8w7I/5yn4o4SfQf0+il3gbiV1Bl3/0Oa3mfdVj+6IFvK+Xr3NYbg8A3Xd4iA=="]]}},{Directive[
PointSize[0.125`],GrayLevel[0]],PointBox[{0.7056740672325248`,0.6072610584092579`}],AbsoluteDashing[
{1,2}],CircleBox[{0.7056740672325248`,0.6072610584092579`},0.23196283448656893`]}},
{Background -> GrayLevel[0.93`],Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}],Frame -> True,FrameTicks -> None,FrameStyle -> Directive[Thickness[
Tiny],GrayLevel[0.7`]],PlotRangePadding -> 0.1`}],GridBox[{{RowBox[{TagBox["\"Data points: \"",
"SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["92518","SummaryItem"]}]},{RowBox[
{TagBox["\"Input: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["String",
"SummaryItem"]}]},{RowBox[{TagBox["\"Output dimension: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"\"variable\"","SummaryItem"]}]},{RowBox[{TagBox["\"Distance function: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"Automatic","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],ButtonBox[DynamicBox[
ToBoxes[If[Or[Less[$VersionNumber,11.2`],UnsameQ[CurrentValue["RunningEvaluator"],
"Local"]],Style["This object cannot be used as input.","SummaryEmbed"],BoxForm`EmbedSummaryLabel[
NearestFunction,4159328,Dynamic[Typeset`embedState$$],Automatic]],StandardForm]],
RuleDelayed[ButtonFunction,BoxForm`EmbedSummaryInterpretation["Choose",NearestFunction,
4159328,9965821769451101110556141454770689595224559841842490712368,EvaluationBox[],
Dynamic[Typeset`embedState$$],StandardForm,ElisionsDump`embedSummaryBoxes]],DefaultBaseStyle -> "SummaryEmbedButton",
ImageSize -> Inherited,BaseStyle -> {"DialogStyle"},Enabled -> Dynamic[And[GreaterEqual[
$VersionNumber,11.2`],SameQ[CurrentValue["RunningEvaluator"],"Local"],SameQ[Typeset`embedState$$,
"Ready"]]],Appearance -> Inherited,Method -> Inherited,Evaluator -> Automatic]},"SummaryEmbedGrid"],
RuleDelayed[DynamicModuleValues,{}],ExpressionUUID -> "6ac230d5-76ce-479b-9efb-4520738aee35"],StyleBox[
"]","NonInterpretableSummary"]}]},"CopyTag",DisplayFunction -> Function[Slot[1]],
InterpretationFunction -> Function["NearestFunction[{1, <>}]"]],False,Selectable -> False,
Editable -> False,SelectWithContents -> True,BoxID -> 9965821769451101110556141454770689595224559841842490712368],
StandardForm],"Output",CellLabel -> "Out[19]= ",ExpressionUUID -> "e7deb403-44f4-4d14-a1b3-bc3d2c9c45d7"]},
Open],ExpressionUUID -> "1e6d7a5e-1bd3-4a8a-9b39-a74693b8741f"],Cell[
TextData[{"We"," ","can"," ","apply"," ","our"," ","function"," ","to"," ","find"," ","the"," ","nearest"," ","words"," ","of",StyleBox[
RowBox[{","," "}]],"for"," ","instance",StyleBox[RowBox[{","," "}]],"the"," ","word",StyleBox[
RowBox[{" ","\""}]],"ecology","\":"}],"Text",ExpressionUUID -> "5afb392c-c710-473b-85bd-be212c6562bd"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"nf","[",RowBox[{"\"ecology\"",",","6"}],"]"}]],"Input",CellLabel -> "In[46]:= ",
ExpressionUUID -> "52103d29-cba1-4858-828d-1c263072227f"],Cell[
BoxData[RowBox[{"{",RowBox[
{"\"ecology\"",",","\"apology\"",",","\"biology\"",",","\"colony\"",",","\"ecologic\"",",","\"economy\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[46]= ",ExpressionUUID -> "843939ac-4853-4bbf-af3b-3279576fb8bc"]},
Open],ExpressionUUID -> "7a87dda8-d1cf-4d80-b431-10efb67bb22f"],Cell[
TextData[{"We"," ","can"," ","create"," ","a"," ","graph"," ","displaying"," ","the"," ","nearest"," ","words"," ","of",StyleBox[
RowBox[{" ","\""}]],"ecology","\".","\n","To"," ","do"," ","so",StyleBox[RowBox[{","," "}]],"see"," ","how"," ","to"," ","create"," ","an"," ","association"," ","between",StyleBox[
RowBox[{" ","\""}]],"ecology",StyleBox[RowBox[{"\""," "}]],"and"," ","its"," ","4"," ","nearest"," ","words","."}],
"Text",ExpressionUUID -> "6fb0bcb1-ee4c-4fa3-9c29-fb39b1d29bbc"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{RowBox[{RowBox[{"Thread","[",RowBox[{"#","\[Rule]",RowBox[
{"nf","[",RowBox[{"#",",","4"}],"]"}]}],"]"}],"&"}],"[","\"ecology\"","]"}]],"Input",
CellLabel -> "In[56]:= ",ExpressionUUID -> "a67579af-638b-4db8-86b3-f728d2c92bab"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"\"ecology\"","\[Rule]","\"ecology\""}],",",RowBox[{"\"ecology\"","\[Rule]","\"apology\""}],",",RowBox[
{"\"ecology\"","\[Rule]","\"biology\""}],",",RowBox[{"\"ecology\"","\[Rule]","\"colony\""}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[56]= ",ExpressionUUID -> "be3752a1-5b6e-469d-9420-3b426a57a816"]},
Open],ExpressionUUID -> "b102a17e-4f4c-4991-b148-7d184979d4e9"],Cell[
TextData[{"We"," ","can"," ","repeat"," ","this"," ","operation"," ","to"," ","identify"," ","the"," ","4"," ","nearest"," ","neighbors"," ","of"," ","the"," ","neighbors",".","\n",ButtonBox[
"Nest",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/Nest.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/Nest.html"]," ","allows"," ","to"," ","apply"," ","a"," ","function"," ","several"," ","times",StyleBox[
RowBox[{"."," "}]],"The"," ","first"," ","argument"," ","is"," ","the"," ","function",StyleBox[
RowBox[{","," "}]],"the"," ","second"," ","the"," ","argument",StyleBox[RowBox[{","," "}]],"the"," ","third"," ","the"," ","number"," ","of"," ","times"," ","you"," ","wish"," ","to"," ","apply"," ","your"," ","function",StyleBox[
RowBox[{" ","("}]],"i",".","e",StyleBox[RowBox[{"."," "}]],"the"," ","nesting"," ","level",")."}],
"Text",ExpressionUUID -> "d632ca0b-2bd0-4fac-aa43-845917127002"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ecologyNeighbors"," ","="," ",RowBox[{"Nest","[",RowBox[{RowBox[
{RowBox[{"Flatten","[",RowBox[{RowBox[{RowBox[{"Thread","[",RowBox[{"#","\[Rule]",RowBox[
{"nf","[",RowBox[{"#",",","4"}],"]"}]}],"]"}],"&"}],"/@",RowBox[{"(",RowBox[{"Last","/@","#"}],")"}]}],"]"}],"&"}],",",RowBox[
{"{",RowBox[{"\"\"","\[Rule]","\"ecology\""}],"}"}],",","3"}],"]"}]}]],"Input",CellLabel -> "In[58]:= ",
ExpressionUUID -> "257f7a12-2f9d-4ae1-adbc-e9da339a89ff"],Cell[
BoxData[RowBox[{"{",RowBox[
{RowBox[{"\"ecology\"","\[Rule]","\"ecology\""}],",",RowBox[{"\"ecology\"","\[Rule]","\"apology\""}],",",RowBox[
{"\"ecology\"","\[Rule]","\"biology\""}],",",RowBox[{"\"ecology\"","\[Rule]","\"colony\""}],",",RowBox[
{"\"apology\"","\[Rule]","\"apology\""}],",",RowBox[{"\"apology\"","\[Rule]","\"analogy\""}],",",RowBox[
{"\"apology\"","\[Rule]","\"apologia\""}],",",RowBox[{"\"apology\"","\[Rule]","\"auxology\""}],",",RowBox[
{"\"biology\"","\[Rule]","\"biology\""}],",",RowBox[{"\"biology\"","\[Rule]","\"apology\""}],",",RowBox[
{"\"biology\"","\[Rule]","\"billowy\""}],",",RowBox[{"\"biology\"","\[Rule]","\"biologic\""}],",",RowBox[
{"\"colony\"","\[Rule]","\"colony\""}],",",RowBox[{"\"colony\"","\[Rule]","\"colon\""}],",",RowBox[
{"\"colony\"","\[Rule]","\"colons\""}],",",RowBox[{"\"colony\"","\[Rule]","\"clone\""}],",",RowBox[
{"\"apology\"","\[Rule]","\"apology\""}],",",RowBox[{"\"apology\"","\[Rule]","\"analogy\""}],",",RowBox[
{"\"apology\"","\[Rule]","\"apologia\""}],",",RowBox[{"\"apology\"","\[Rule]","\"auxology\""}],",",RowBox[
{"\"analogy\"","\[Rule]","\"analogy\""}],",",RowBox[{"\"analogy\"","\[Rule]","\"analog\""}],",",RowBox[
{"\"analogy\"","\[Rule]","\"analogs\""}],",",RowBox[{"\"analogy\"","\[Rule]","\"anally\""}],",",RowBox[
{"\"apologia\"","\[Rule]","\"apologia\""}],",",RowBox[{"\"apologia\"","\[Rule]","\"apologias\""}],",",RowBox[
{"\"apologia\"","\[Rule]","\"apologies\""}],",",RowBox[{"\"apologia\"","\[Rule]","\"apologist\""}],",",RowBox[
{"\"auxology\"","\[Rule]","\"auxology\""}],",",RowBox[{"\"auxology\"","\[Rule]","\"apology\""}],",",RowBox[
{"\"auxology\"","\[Rule]","\"audiology\""}],",",RowBox[{"\"auxology\"","\[Rule]","\"doxology\""}],",",RowBox[
{"\"biology\"","\[Rule]","\"biology\""}],",",RowBox[{"\"biology\"","\[Rule]","\"apology\""}],",",RowBox[
{"\"biology\"","\[Rule]","\"billowy\""}],",",RowBox[{"\"biology\"","\[Rule]","\"biologic\""}],",",RowBox[
{"\"apology\"","\[Rule]","\"apology\""}],",",RowBox[{"\"apology\"","\[Rule]","\"analogy\""}],",",RowBox[
{"\"apology\"","\[Rule]","\"apologia\""}],",",RowBox[{"\"apology\"","\[Rule]","\"auxology\""}],",",RowBox[
{"\"billowy\"","\[Rule]","\"billowy\""}],",",RowBox[{"\"billowy\"","\[Rule]","\"billow\""}],",",RowBox[
{"\"billowy\"","\[Rule]","\"billows\""}],",",RowBox[{"\"billowy\"","\[Rule]","\"willowy\""}],",",RowBox[
{"\"biologic\"","\[Rule]","\"biologic\""}],",",RowBox[{"\"biologic\"","\[Rule]","\"biological\""}],",",RowBox[
{"\"biologic\"","\[Rule]","\"biologist\""}],",",RowBox[{"\"biologic\"","\[Rule]","\"biology\""}],",",RowBox[
{"\"colony\"","\[Rule]","\"colony\""}],",",RowBox[{"\"colony\"","\[Rule]","\"colon\""}],",",RowBox[
{"\"colony\"","\[Rule]","\"colons\""}],",",RowBox[{"\"colony\"","\[Rule]","\"clone\""}],",",RowBox[
{"\"colon\"","\[Rule]","\"colon\""}],",",RowBox[{"\"colon\"","\[Rule]","\"Colon\""}],",",RowBox[
{"\"colon\"","\[Rule]","\"colons\""}],",",RowBox[{"\"colon\"","\[Rule]","\"colony\""}],",",RowBox[
{"\"colons\"","\[Rule]","\"colons\""}],",",RowBox[{"\"colons\"","\[Rule]","\"colon\""}],",",RowBox[
{"\"colons\"","\[Rule]","\"colony\""}],",",RowBox[{"\"colons\"","\[Rule]","\"colors\""}],",",RowBox[
{"\"clone\"","\[Rule]","\"clone\""}],",",RowBox[{"\"clone\"","\[Rule]","\"alone\""}],",",RowBox[
{"\"clone\"","\[Rule]","\"cloned\""}],",",RowBox[{"\"clone\"","\[Rule]","\"clones\""}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[58]= ",ExpressionUUID -> "5fdcd988-1752-49ab-a45b-2c62dcab1172"]},
Open],ExpressionUUID -> "07e592e3-150c-482f-b1a3-63a49903a877"],Cell[
TextData[{"Finally",StyleBox[
RowBox[{","," "}]],"you"," ","can"," ","do"," ","a"," ",ButtonBox["GraphPlot",BaseStyle -> "HyperlinkActionNew",
ButtonData -> {URL["https://reference.wolfram.com/language/ref/GraphPlot.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/GraphPlot.html"],StyleBox[
RowBox[{","," "}]],"where"," ","a"," ","link"," ","between"," ","two"," ","words"," ","is"," ","created"," ","if"," ","one"," ","belongs"," ","to"," ","the"," ","4"," ","nearest"," ","neighbors"," ","of"," ","the"," ","other","."}],
"Text",ExpressionUUID -> "7ca81999-4ec5-4be0-b7e5-1022cd79eb9f"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"GraphPlot","[",RowBox[{"ecologyNeighbors",",",RowBox[{"PlotTheme","\[Rule]","\"ClassicDiagram\""}],",",RowBox[
{"VertexSize","\[Rule]",RowBox[{"{",RowBox[{".2",",",".2"}],"}"}]}]}],"]"}]],"Input",
CellLabel -> "In[59]:= ",ExpressionUUID -> "307b969a-0dc6-490d-b623-00ad11ab66a4"],Cell[
BoxData[
GraphicsBox[NamespaceBox[{{Directive[Hue[0,1,0.5`],Opacity[1]],BezierCurveBox[{DynamicLocation[
"VertexID$1",Automatic,Center],{3.3561926289271624`,2.946343491172163`},{3.3752422317678987`,3.111449804556229`},{3.4490588169087446`,3.195898769427719`},{3.7579271155996383`,3.1608349714596304`},{3.8109353587492145`,3.061988413259978`},{3.7924902906585016`,2.896813470999367`},DynamicLocation[
"VertexID$1",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$1",
Automatic,Center],DynamicLocation["VertexID$2",Automatic,Center]}],LineBox[{DynamicLocation[
"VertexID$1",Automatic,Center],DynamicLocation["VertexID$3",Automatic,Center]}],LineBox[
{DynamicLocation["VertexID$1",Automatic,Center],DynamicLocation["VertexID$4",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,Center],{2.2914935658789415`,2.783766724949254`},{2.270714485379697`,2.7417644141559503`},{2.246683519893263`,2.721525672211217`},{2.155881414250465`,2.7177427575089443`},{2.130250308458202`,2.735912523428776`},{2.10604957290922`,2.776040926054094`},DynamicLocation[
"VertexID$2",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$2",Automatic,Center],{2.0332440569725203`,2.7952374432621805`},{1.9924038489771214`,2.7722582851125894`},{1.9611461263514054`,2.7690883081458786`},{1.8840138645934117`,2.8171502164403575`},{1.8730859148253467`,2.846606521225281`},{1.875717813435209`,2.893393671256874`},DynamicLocation[
"VertexID$2",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$2",Automatic,Center],{1.8264040306590372`,2.9502909493291503`},{1.7797175721681144`,2.9543330888550323`},{1.7521126815201555`,2.9693352217043945`},{1.7154969832766467`,3.0525134849403557`},{1.7230757808817665`,3.083003742475777`},{1.7516242528159751`,3.12016486528703`},DynamicLocation[
"VertexID$2",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$2",Automatic,Center],{2.6201778804729687`,2.640428195935812`},DynamicLocation[
"VertexID$3",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,
Center],{2.197688843624228`,2.4904669641602113`},DynamicLocation["VertexID$3",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,Center],{1.5785797464907265`,3.6303868845731655`},DynamicLocation[
"VertexID$5",Automatic,Center]}],LineBox[{DynamicLocation["VertexID$2",Automatic,
Center],DynamicLocation["VertexID$5",Automatic,Center]}],BezierCurveBox[{DynamicLocation[
"VertexID$2",Automatic,Center],{1.9470239856494993`,3.905427036706576`},DynamicLocation[
"VertexID$5",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,
Center],{1.536189559463895`,2.9097308025635216`},DynamicLocation["VertexID$6",Automatic,
Center]}],LineBox[{DynamicLocation["VertexID$2",Automatic,Center],DynamicLocation[
"VertexID$6",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,
Center],{1.4851550938428792`,3.3506124340914174`},DynamicLocation["VertexID$6",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,Center],{2.188605607073923`,3.773014600188072`},DynamicLocation[
"VertexID$7",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,
Center],{2.299777460531766`,3.7347755006348997`},DynamicLocation["VertexID$7",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,Center],{2.4114523116387105`,3.696363388069885`},DynamicLocation[
"VertexID$7",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$2",Automatic,
Center],{2.5226241650965586`,3.658124288516806`},DynamicLocation["VertexID$7",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$3",Automatic,Center],{2.3696275344237976`,1.6326227045594148`},{2.2881161489619952`,1.6278407998107607`},{2.237614803888136`,1.6491624316611488`},{2.170903295012724`,1.7914755835647476`},{2.1868201349814327`,1.8439317752340163`},{2.2426378472654553`,1.9035250262638579`},DynamicLocation[
"VertexID$3",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$3",Automatic,Center],{2.258079786447667`,2.0341450151858718`},{2.2176968476076944`,2.1051111396649125`},{2.2144506091197127`,2.1598327969379856`},{2.312507918757719`,2.2826669234978594`},{2.3665889169886767`,2.2916247954201228`},{2.444738239905443`,2.26796774783217`},DynamicLocation[
"VertexID$3",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$3",Automatic,Center],{2.452845833057799`,1.2275022207423927`},DynamicLocation[
"VertexID$8",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$3",Automatic,
Center],{2.075877980987792`,1.472557204861145`},DynamicLocation["VertexID$8",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$3",Automatic,Center],{3.0341755967787867`,1.4928336663412745`},DynamicLocation[
"VertexID$9",Automatic,Center]}],LineBox[{DynamicLocation["VertexID$3",Automatic,
Center],DynamicLocation["VertexID$9",Automatic,Center]}],BezierCurveBox[{DynamicLocation[
"VertexID$3",Automatic,Center],{2.7012160874726563`,1.3410379181029752`},DynamicLocation[
"VertexID$9",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$4",Automatic,
Center],{5.587892076973885`,2.714426205120191`},{5.608519316867685`,2.620836981050942`},{5.591846366019644`,2.558650800224553`},{5.434437066725982`,2.4637322860449`},{5.371657209650679`,2.4780080669817903`},{5.2985114835656635`,2.539928408090479`},DynamicLocation[
"VertexID$4",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$4",Automatic,Center],{5.145319195826434`,2.5596063557106885`},{5.058898666599935`,2.5181827149275273`},{4.994548934346606`,2.520237060243768`},{4.866239081000058`,2.651856942375542`},{4.865824036468525`,2.716238120632781`},{4.909434901390464`,2.8015757931360827`},DynamicLocation[
"VertexID$4",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$4",Automatic,Center],{5.633850482557768`,2.9014891243454546`},DynamicLocation[
"VertexID$10",Automatic,Center]}],LineBox[{DynamicLocation["VertexID$4",Automatic,
Center],DynamicLocation["VertexID$10",Automatic,Center]}],BezierCurveBox[{DynamicLocation[
"VertexID$4",Automatic,Center],{5.553943013546428`,2.68776643294497`},DynamicLocation[
"VertexID$10",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$4",Automatic,
Center],{5.494219559942132`,3.218108299591447`},DynamicLocation["VertexID$11",Automatic,
Center]}],LineBox[{DynamicLocation["VertexID$4",Automatic,Center],DynamicLocation[
"VertexID$11",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$4",Automatic,
Center],{5.629502614669541`,3.025457480149355`},DynamicLocation["VertexID$11",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$4",Automatic,Center],{5.976647997377682`,3.2165025980293405`},DynamicLocation[
"VertexID$12",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$4",Automatic,
Center],{6.016802431416796`,2.7378142506591443`},DynamicLocation["VertexID$12",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$5",Automatic,Center],{1.401020637701958`,4.03943957580671`},{1.3000534786646867`,3.9148024828890167`},{1.1966458821098684`,3.88297118981355`},{0.9567075647363283`,4.06442296146193`},{0.959173391331216`,4.172590803001383`},{1.0516016341355627`,4.3036853950604455`},DynamicLocation[
"VertexID$5",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$5",
Automatic,Center],DynamicLocation["VertexID$13",Automatic,Center]}],LineBox[{DynamicLocation[
"VertexID$5",Automatic,Center],DynamicLocation["VertexID$14",Automatic,Center]}],LineBox[
{DynamicLocation["VertexID$5",Automatic,Center],DynamicLocation["VertexID$15",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$6",Automatic,Center],{0.6603585740659823`,3.287012878890877`},{0.6947929512304358`,3.4425847660621023`},{0.7724058269545175`,3.5169198613819765`},{1.0666116802955647`,3.463750806462811`},{1.1132972142036286`,3.3669524294201376`},{1.0911017822914744`,3.209168712861827`},DynamicLocation[
"VertexID$6",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$6",
Automatic,Center],DynamicLocation["VertexID$16",Automatic,Center]}],LineBox[{DynamicLocation[
"VertexID$6",Automatic,Center],DynamicLocation["VertexID$17",Automatic,Center]}],LineBox[
{DynamicLocation["VertexID$6",Automatic,Center],DynamicLocation["VertexID$18",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$7",Automatic,Center],{2.788216226024005`,4.332169053087296`},{2.938819176528027`,4.2533476867699544`},{2.9915037255293058`,4.151403653768943`},{2.83891940228597`,3.873167142637598`},{2.724636807408096`,3.8627875436106986`},{2.5772118929406616`,3.947404037764729`},DynamicLocation[
"VertexID$7",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$7",
Automatic,Center],DynamicLocation["VertexID$19",Automatic,Center]}],LineBox[{DynamicLocation[
"VertexID$7",Automatic,Center],DynamicLocation["VertexID$20",Automatic,Center]}],BezierCurveBox[
{DynamicLocation["VertexID$8",Automatic,Center],{2.1436606470875774`,0.9320542023928673`},{2.294739641393604`,0.8818972705445709`},{2.3606880482205232`,0.7971726166987352`},{2.277933753455916`,0.5101540130250275`},{2.177001933882003`,0.4735449003643154`},{2.0224106251427503`,0.5115199921382677`},DynamicLocation[
"VertexID$8",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$8",
Automatic,Center],DynamicLocation["VertexID$21",Automatic,Center]}],LineBox[{DynamicLocation[
"VertexID$8",Automatic,Center],DynamicLocation["VertexID$22",Automatic,Center]}],LineBox[
{DynamicLocation["VertexID$8",Automatic,Center],DynamicLocation["VertexID$23",Automatic,
Center]}],BezierCurveBox[{DynamicLocation["VertexID$9",Automatic,Center],{3.1185560896426328`,1.1899993357572947`},{3.257100932578594`,1.288430666132956`},{3.371830256660024`,1.2891366952500025`},{3.5505716891148342`,1.027001065226376`},{3.508010448810191`,0.9204559709938099`},{3.365777068506151`,0.8274341142559499`},DynamicLocation[
"VertexID$9",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$9",
Automatic,Center],DynamicLocation["VertexID$24",Automatic,Center]}],LineBox[{DynamicLocation[
"VertexID$9",Automatic,Center],DynamicLocation["VertexID$25",Automatic,Center]}],BezierCurveBox[
{DynamicLocation["VertexID$10",Automatic,Center],{6.021002844664506`,2.9469552878889362`},{6.17347724761263`,3.0006790200040525`},{6.279004020076493`,2.973154152435951`},{6.387274468800439`,2.690145227347384`},{6.327065017664023`,2.599214814200115`},{6.17766639508787`,2.537451277067661`},DynamicLocation[
"VertexID$10",Automatic,Center]},SplineDegree -> 7],BezierCurveBox[{DynamicLocation[
"VertexID$10",Automatic,Center],{5.779189384623815`,2.9897632730215493`},DynamicLocation[
"VertexID$11",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$10",Automatic,
Center],{5.994379908362368`,3.010835144979662`},DynamicLocation["VertexID$11",Automatic,
Center]}],LineBox[{DynamicLocation["VertexID$10",Automatic,Center],DynamicLocation[
"VertexID$26",Automatic,Center]}],BezierCurveBox[{DynamicLocation["VertexID$11",Automatic,
Center],{5.5676796994836035`,3.28387517029949`},{5.445729937018652`,3.3919893763426834`},{5.418651792256298`,3.498557142532163`},{5.6166701088133815`,3.7309086377509013`},{5.726183063873545`,3.7210685468785067`},{5.852264128838544`,3.6178019444801524`},DynamicLocation[
"VertexID$11",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$11",
Automatic,Center],DynamicLocation["VertexID$27",Automatic,Center]}],BezierCurveBox[
{DynamicLocation["VertexID$12",Automatic,Center],{6.446446888957894`,3.1415265345346532`},{6.393112734954644`,3.2909088872119208`},{6.419034811673879`,3.3946977818295605`},{6.6948738978790665`,3.506719578008462`},{6.78582101974447`,3.450392766170858`},{6.851742974100523`,3.30612248091254`},DynamicLocation[
"VertexID$12",Automatic,Center]},SplineDegree -> 7],LineBox[{DynamicLocation["VertexID$12",
Automatic,Center],DynamicLocation["VertexID$28",Automatic,Center]}],LineBox[{DynamicLocation[
"VertexID$12",Automatic,Center],DynamicLocation["VertexID$29",Automatic,Center]}],LineBox[
{DynamicLocation["VertexID$12",Automatic,Center],DynamicLocation["VertexID$30",Automatic,
Center]}]},{Directive[Hue[0.15`,0.2`,1],EdgeForm[{Thickness[0.003`],Hue[0.15`,0.6`,
0.9`],Opacity[1]}]],TagBox[{TagBox[RectangleBox[{3.3772634021872996`,2.5635818987390047`},
{3.7302046021872997`,2.9165230987390047`}],"DynamicName",BoxID -> "VertexID$1"],InsetBox[
FormBox["\"ecology\"",TraditionalForm],DynamicLocation["VertexID$1",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$1"],TagBox[{TagBox[
RectangleBox[{2.0044760337826`,3.031288943606372`},{2.3574172337826003`,3.384230143606372`}],
"DynamicName",BoxID -> "VertexID$2"],InsetBox[FormBox["\"apology\"",TraditionalForm],
DynamicLocation["VertexID$2",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$2"],TagBox[{TagBox[RectangleBox[{2.4604494903145757`,1.746665016489724`},
{2.813390690314576`,2.099606216489724`}],"DynamicName",BoxID -> "VertexID$3"],InsetBox[
FormBox["\"biology\"",TraditionalForm],DynamicLocation["VertexID$3",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$3"],TagBox[{TagBox[
RectangleBox[{5.092502588864958`,2.7396408595151245`},{5.445443788864958`,3.0925820595151245`}],
"DynamicName",BoxID -> "VertexID$4"],InsetBox[FormBox["\"colony\"",TraditionalForm],
DynamicLocation["VertexID$4",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$4"],TagBox[{TagBox[RectangleBox[{1.1681864983575918`,4.151583777673412`},
{1.5211276983575919`,4.504524977673412`}],"DynamicName",BoxID -> "VertexID$5"],InsetBox[
FormBox["\"analogy\"",TraditionalForm],DynamicLocation["VertexID$5",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$5"],TagBox[{TagBox[
RectangleBox[{0.6639274195241986`,2.8761130930485725`},{1.0168686195241987`,3.2290542930485726`}],
"DynamicName",BoxID -> "VertexID$6"],InsetBox[FormBox["\"apologia\"",TraditionalForm],
DynamicLocation["VertexID$6",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$6"],TagBox[{TagBox[RectangleBox[{2.3538125383878703`,4.046908745098437`},
{2.7067537383878704`,4.399849945098437`}],"DynamicName",BoxID -> "VertexID$7"],InsetBox[
FormBox["\"auxology\"",TraditionalForm],DynamicLocation["VertexID$7",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$7"],TagBox[{TagBox[
RectangleBox[{1.7153331237310148`,0.6004532091137937`},{2.068274323731015`,0.9533944091137938`}],
"DynamicName",BoxID -> "VertexID$8"],InsetBox[FormBox["\"billowy\"",TraditionalForm],
DynamicLocation["VertexID$8",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$8"],TagBox[{TagBox[RectangleBox[{2.9220009939368756`,0.7342653679544908`},
{3.2749421939368757`,1.0872065679544909`}],"DynamicName",BoxID -> "VertexID$9"],InsetBox[
FormBox["\"biologic\"",TraditionalForm],DynamicLocation["VertexID$9",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$9"],TagBox[{TagBox[
RectangleBox[{5.742349707239264`,2.496673497775279`},{6.0952909072392645`,2.849614697775279`}],
"DynamicName",BoxID -> "VertexID$10"],InsetBox[FormBox["\"colon\"",TraditionalForm],
DynamicLocation["VertexID$10",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$10"],TagBox[{TagBox[RectangleBox[{5.678278385746889`,3.150983720225784`},
{6.031219585746889`,3.503924920225784`}],"DynamicName",BoxID -> "VertexID$11"],InsetBox[
FormBox["\"colons\"",TraditionalForm],DynamicLocation["VertexID$11",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$11"],TagBox[{TagBox[
RectangleBox[{6.548006639929392`,2.861734789173339`},{6.900947839929392`,3.214675989173339`}],
"DynamicName",BoxID -> "VertexID$12"],InsetBox[FormBox["\"clone\"",TraditionalForm],
DynamicLocation["VertexID$12",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$12"],TagBox[{TagBox[RectangleBox[{0.443050522841657`,4.429027326809854`},
{0.7959917228416571`,4.781968526809854`}],"DynamicName",BoxID -> "VertexID$13"],InsetBox[
FormBox["\"analog\"",TraditionalForm],DynamicLocation["VertexID$13",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$13"],TagBox[{TagBox[
RectangleBox[{0.6552457013670789`,4.843138118845133`},{1.008186901367079`,5.196079318845133`}],
"DynamicName",BoxID -> "VertexID$14"],InsetBox[FormBox["\"analogs\"",TraditionalForm],
DynamicLocation["VertexID$14",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$14"],TagBox[{TagBox[RectangleBox[{1.11603779458976`,4.931919411758788`},
{1.46897899458976`,5.284860611758788`}],"DynamicName",BoxID -> "VertexID$15"],InsetBox[
FormBox["\"anally\"",TraditionalForm],DynamicLocation["VertexID$15",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$15"],TagBox[{TagBox[
RectangleBox[{-0.01986764815029085`,3.2258906664789295`},{0.3330735518497092`,3.5788318664789296`}],
"DynamicName",BoxID -> "VertexID$16"],InsetBox[FormBox["\"apologias\"",TraditionalForm],
DynamicLocation["VertexID$16",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$16"],TagBox[{TagBox[RectangleBox[{-0.17647060000000003`,2.7839550353123927`},
{0.17647060000000003`,3.136896235312393`}],"DynamicName",BoxID -> "VertexID$17"],InsetBox[
FormBox["\"apologies\"",TraditionalForm],DynamicLocation["VertexID$17",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$17"],TagBox[{TagBox[
RectangleBox[{0.10076795313898756`,2.39070599375184`},{0.45370915313898763`,2.74364719375184`}],
"DynamicName",BoxID -> "VertexID$18"],InsetBox[FormBox["\"apologist\"",TraditionalForm],
DynamicLocation["VertexID$18",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$18"],TagBox[{TagBox[RectangleBox[{2.322920550762425`,4.795721059788532`},
{2.675861750762425`,5.148662259788532`}],"DynamicName",BoxID -> "VertexID$19"],InsetBox[
FormBox["\"audiology\"",TraditionalForm],DynamicLocation["VertexID$19",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$19"],TagBox[{TagBox[
RectangleBox[{2.8035537324273565`,4.612327555870229`},{3.1564949324273566`,4.965268755870229`}],
"DynamicName",BoxID -> "VertexID$20"],InsetBox[FormBox["\"doxology\"",TraditionalForm],
DynamicLocation["VertexID$20",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$20"],TagBox[{TagBox[RectangleBox[{1.2574742406449255`,-0.10462659043024791`},
{1.6104154406449256`,0.24831460956975215`}],"DynamicName",BoxID -> "VertexID$21"],InsetBox[
FormBox["\"billow\"",TraditionalForm],DynamicLocation["VertexID$21",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$21"],TagBox[{TagBox[
RectangleBox[{1.7269896853990352`,-0.17647060000000003`},{2.079930885399035`,0.17647060000000003`}],
"DynamicName",BoxID -> "VertexID$22"],InsetBox[FormBox["\"billows\"",TraditionalForm],
DynamicLocation["VertexID$22",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$22"],TagBox[{TagBox[RectangleBox[{1.0167633923207315`,0.3119064836216796`},
{1.3697045923207316`,0.6648476836216797`}],"DynamicName",BoxID -> "VertexID$23"],InsetBox[
FormBox["\"willowy\"",TraditionalForm],DynamicLocation["VertexID$23",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$23"],TagBox[{TagBox[
RectangleBox[{3.4348188556986803`,0.20451143561435003`},{3.7877600556986804`,0.5574526356143501`}],
"DynamicName",BoxID -> "VertexID$24"],InsetBox[FormBox["\"biological\"",TraditionalForm],
DynamicLocation["VertexID$24",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$24"],TagBox[{TagBox[RectangleBox[{2.9745041403026447`,-0.025465371072125542`},
{3.3274453403026447`,0.3274758289278745`}],"DynamicName",BoxID -> "VertexID$25"],InsetBox[
FormBox["\"biologist\"",TraditionalForm],DynamicLocation["VertexID$25",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$25"],TagBox[{TagBox[
RectangleBox[{6.165519214574282`,1.9201325187122347`},{6.518460414574282`,2.2730737187122347`}],
"DynamicName",BoxID -> "VertexID$26"],InsetBox[FormBox["\"Colon\"",TraditionalForm],
DynamicLocation["VertexID$26",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$26"],TagBox[{TagBox[RectangleBox[{5.995630929258223`,3.8029542421676963`},
{6.348572129258223`,4.155895442167696`}],"DynamicName",BoxID -> "VertexID$27"],InsetBox[
FormBox["\"colors\"",TraditionalForm],DynamicLocation["VertexID$27",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$27"],TagBox[{TagBox[
RectangleBox[{7.247515322440805`,2.458253750943791`},{7.600456522440805`,2.8111949509437912`}],
"DynamicName",BoxID -> "VertexID$28"],InsetBox[FormBox["\"alone\"",TraditionalForm],
DynamicLocation["VertexID$28",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$28"],TagBox[{TagBox[RectangleBox[{7.171827773539656`,3.3743371871303474`},
{7.524768973539656`,3.7272783871303474`}],"DynamicName",BoxID -> "VertexID$29"],InsetBox[
FormBox["\"cloned\"",TraditionalForm],DynamicLocation["VertexID$29",None,Center],
BaseStyle -> "Graphics"]},"DynamicName",BoxID -> "VertexLabelID$29"],TagBox[{TagBox[
RectangleBox[{7.392947769657681`,2.9307986375773734`},{7.745888969657681`,3.2837398375773734`}],
"DynamicName",BoxID -> "VertexID$30"],InsetBox[FormBox["\"clones\"",TraditionalForm],
DynamicLocation["VertexID$30",None,Center],BaseStyle -> "Graphics"]},"DynamicName",
BoxID -> "VertexLabelID$30"]}}],{FormatType -> TraditionalForm,FrameTicks -> None}],
StandardForm],"Output",CellLabel -> "Out[59]= ",ExpressionUUID -> "3e014a97-af25-402f-824c-9a918fd3f84a"]},
Open],ExpressionUUID -> "8e879ce1-50c9-4234-9c3d-c3cbe8d2ba8f"]},{1}],ExpressionUUID -> "d2c1b7da-db7a-4670-a06e-32d87b23a92e"]},
{1}],ExpressionUUID -> "a3df1e36-54c8-4402-b974-4093067b7e02"],Cell[
CellGroupData[
{Cell[
"\<Applications\>","Section",ExpressionUUID -> "a147e15d-848f-4e6b-8f79-62a110941f76"],Cell[
CellGroupData[
{Cell[
TextData[{"Language"," ","identification"}],"Subsection",ExpressionUUID -> "aca8810b-385b-4188-a96b-4a596cd0bba7"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{RowBox[{"DynamicModule","[",RowBox[{RowBox[{"{",RowBox[{"text","=","\"\""}],"}"}],",","\n"," ",RowBox[
{"Column","["," ",RowBox[{"{","\n","\[NonBreakingSpace]    ",RowBox[{RowBox[{"InputField","[",RowBox[
{RowBox[{"Dynamic","[","text","]"}],","," ","String",","," ",RowBox[{"ContinuousAction","\[Rule]","True"}],",",RowBox[
{"FieldHint","\[Rule]","\"Enter a string\""}]}],"]"}],",","\n","       ",RowBox[{"Dynamic","[",RowBox[
{"Classify","[",RowBox[{"\"Language\"",","," ","text",","," ","\"TopProbabilities\""}],"]"}],"]"}]}],"\n","\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]","}"}],"\n","  ","]"}]}],"\n"," ","]"}]," "}]],
"Input",CellLabel -> "In[92]:= ",ExpressionUUID -> "2ece782f-2a59-46c9-bd57-a376010d8bd8"],Cell[
BoxData[
DynamicModuleBox[{Set[text$$,""]},TagBox[GridBox[{{InputFieldBox[Dynamic[text$$],
String,ContinuousAction -> True,FieldHint -> "Enter a string"]},{DynamicBox[ToBoxes[
Classify["Language",text$$,"TopProbabilities"],StandardForm]]}},GridBoxAlignment -> {"Columns" -> {{Left}}},
DefaultBaseStyle -> "Column",GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}}],
"Column"],RuleDelayed[DynamicModuleValues,{}],ExpressionUUID -> "5d8e00f8-79b2-4fdc-8957-63e5a2ddb11b"],
StandardForm],"Output",CellLabel -> "Out[92]= ",ExpressionUUID -> "936076d5-6977-48b9-b9f4-fd96ff60baa6"]},
Open],ExpressionUUID -> "69eac2fc-85b5-4503-9c5c-21b5cdf6667f"],Cell[
TextData[{"\n","Notice"," ","here"," ","the"," ","use"," ","of"," ",ButtonBox[
"DynamicModule",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/DynamicModule.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/DynamicModule.html"]," ","and"," ",ButtonBox[
"Dynamic",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/Dynamic.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/Dynamic.html"]," ","as"," ","well"," ","as"," ",ButtonBox[
"InputField",BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://reference.wolfram.com/language/ref/InputField.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/ref/InputField.html"]," ","to"," ","create"," ","interactive"," ","content","!"}],
"Text",ExpressionUUID -> "ce1e6613-fb3a-4090-897f-1a7b80dbd83a"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"InputField","[","]"}]],"Input",CellLabel -> "In[96]:= ",ExpressionUUID -> "91d37032-2ceb-4649-a3e1-fef6571f4e43"],Cell[
BoxData[
TagBox[DynamicModuleBox[{Set[Typeset`i$$,Null]},InputFieldBox[Dynamic[Typeset`i$$]],
DynamicModuleValues -> Automatic,ExpressionUUID -> "35a41f71-05ed-4b3c-a654-0365bfad9552"],
Function[InputField[Setting[Slot[1]]]]],StandardForm],"Output",CellLabel -> "Out[96]= ",
ExpressionUUID -> "207f0754-de39-462c-82a9-36dc08c9a2e3"]},Open],ExpressionUUID -> "4e44156e-358d-4fa8-9876-6b7a998a974b"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"DynamicModule","[",RowBox[{RowBox[{"{",RowBox[{"number","=","x"}],"}"}],",",RowBox[
{"{",RowBox[{RowBox[{"InputField","[",RowBox[{RowBox[{"Dynamic","[","number","]"}],","," ","Number"}],"]"}],",",RowBox[
{"Dynamic","[",RowBox[{"number","^","2"}],"]"}]}],"}"}]}],"]"}]],"Input",CellLabel -> "In[63]:= ",
ExpressionUUID -> "8aaf77e3-164f-4381-b035-ad62416b312a"],Cell[
BoxData[DynamicModuleBox[
{Set[number$$,x]},RowBox[{"{",RowBox[{InputFieldBox[Dynamic[number$$],Number],",",DynamicBox[
ToBoxes[Power[number$$,2],StandardForm]]}],"}"}],RuleDelayed[DynamicModuleValues,
{}],ExpressionUUID -> "7f06c546-fad8-4451-a2fa-ce0008524f71"],StandardForm],"Output",
CellLabel -> "Out[63]= ",ExpressionUUID -> "85a1a1eb-5fe8-4f10-8b59-5436c987c0a7"]},
Open],ExpressionUUID -> "5e6a94d1-cc7f-4e3c-8898-39436b788eef"]},Open],ExpressionUUID -> "d2f4e06d-f735-4e68-bcbe-b765edd68ae6"],Cell[
CellGroupData[
{Cell[
TextData[{"Topic"," ","Modelling",StyleBox[RowBox[{" ","-"," "}]],"Understand"," ","the"," ","topic"," ","of"," ","a"," ","text"}],
"Subsection",ExpressionUUID -> "9a0767f4-bad7-4ae8-8a31-aeaaa6c9a984"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Classify","[",RowBox[{"\"FacebookTopic\"",","," ",RowBox[
{"{",RowBox[{"\"I bought a new computer\"",","," ","\"happy birthday\"",","," ","\"this dress looks nice\""}],"}"}]}],"]"}]],
"Input",CellLabel -> "In[86]:= ",ExpressionUUID -> "2d5fe421-e14c-4806-8556-bb2a5f4cca0a"],Cell[
BoxData[
RowBox[{"{",RowBox[{"\"Technology\"",",","\"SpecialOccasions\"",",","\"Fashion\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[86]= ",ExpressionUUID -> "4fe593aa-260c-4671-8061-6698ce72bbfd"]},
Open],ExpressionUUID -> "ba934723-c8a6-49de-893e-828841e56bb5"]},Open],ExpressionUUID -> "2941cac9-7079-42fa-a762-ce53a379f600"],Cell[
CellGroupData[
{Cell[
TextData[{"Text"," ","Classification",StyleBox[RowBox[{" ","-"," "}]],"Spam"," ","Detection"}],
"Subsection",ExpressionUUID -> "17f9b6e5-05ac-4adb-9150-37017eeed0cc"],Cell[
BoxData[
RowBox[{RowBox[{"cSpam"," ","="," ",RowBox[{"Classify","[","\"Spam\"","]"}]}],";"}]],
"Input",CellLabel -> "In[78]:= ",ExpressionUUID -> "cad31135-2d04-43fd-8cdf-d13214e7b020"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cSpam","[","\"Dear Sir, I feel you should send 1M dollars to my account. Yours truly.\"","]"}]],
"Input",CellLabel -> "In[79]:= ",ExpressionUUID -> "e9ff82bc-fb97-4c05-9814-bae5dedff320"],Cell[
BoxData[
"True",StandardForm],"Output",CellLabel -> "Out[79]= ",ExpressionUUID -> "4e612e8b-41ca-48f5-b851-280d31709863"]},
Open],ExpressionUUID -> "31d871e7-5293-4d64-91c4-d95197424f7a"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cSpam","[","\"I thought that latest song of Florence + The Machine was amazing\"","]"}]],
"Input",CellLabel -> "In[94]:= ",ExpressionUUID -> "9abfc0af-7b34-448c-bff6-e0bf40e626bc"],Cell[
BoxData[
"False",StandardForm],"Output",CellLabel -> "Out[94]= ",ExpressionUUID -> "88b282c5-cf01-442f-a151-b841bc1fd0c4"]},
Open],ExpressionUUID -> "f167c2d1-1eec-440d-8997-4b77525002cb"]},Open],ExpressionUUID -> "cfb3ac48-5732-4a7a-b49c-d13b350dbdbe"],Cell[
CellGroupData[
{Cell[
TextData[{"Text"," ","Classification",StyleBox[RowBox[{" ","-"," "}]],"Sentiment"," ","Analysis"}],
"Subsection",ExpressionUUID -> "5c4ee932-46ef-4dcc-92b4-8dfdcb1041cb"],Cell[
BoxData[
RowBox[{RowBox[{"cSentiment"," ","="," ",RowBox[{"Classify","[","\"Sentiment\"","]"}]}],";"}]],
"Input",CellLabel -> "In[81]:= ",ExpressionUUID -> "7d94caa7-15aa-4025-9a94-a076ab5f30b0"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cSentiment","[","\"I thought that latest song of Florence + The Machine was amazing\"","]"}]],
"Input",CellLabel -> "In[95]:= ",ExpressionUUID -> "19f870d5-c1d7-4f57-9020-a3f2cb9340c3"],Cell[
BoxData[
"\"Positive\"",StandardForm],"Output",CellLabel -> "Out[95]= ",ExpressionUUID -> "7d988baf-6246-4e24-8918-847a51fa7153"]},
Open],ExpressionUUID -> "e29a59ff-36dc-40da-a0bd-d9bcd56967c7"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cSentiment","[","\"I didn't like the last move of Google\"","]"}]],
"Input",CellLabel -> "In[83]:= ",ExpressionUUID -> "66f77f70-a09e-4d2f-ae33-6998cee01bf4"],Cell[
BoxData[
"\"Negative\"",StandardForm],"Output",CellLabel -> "Out[83]= ",ExpressionUUID -> "8399d971-f302-4a8c-9cb6-b7e18ecffbda"]},
Open],ExpressionUUID -> "59893fc6-419c-4ea1-a99f-c79e6707681e"]},Open],ExpressionUUID -> "732b2fd0-68ee-4f32-9005-ce9b55f4c07a"]},
{1}],ExpressionUUID -> "1fb3e4ba-2f41-455e-aa53-a6b5c4a28529"],Cell[
CellGroupData[
{Cell[
TextData[{"Useful"," ","Links"}],"Section",ExpressionUUID -> "1bf37faf-6cb9-467c-8f5c-71d0a991aa4e"],Cell[
CellGroupData[
{Cell[
TextData[{ButtonBox[RowBox[{"Text"," ","Manipulation"}],BaseStyle -> "HyperlinkActionNew",
ButtonData -> {URL["https://reference.wolfram.com/language/guide/ProcessingTextualData.html"],None},
ButtonNote -> "https://reference.wolfram.com/language/guide/ProcessingTextualData.html"]," ","functions"}],
"Item",ExpressionUUID -> "6164f380-f140-4ea0-b9d3-d3022d80bd9f"],Cell[
TextData[{ButtonBox[
RowBox[{"Text"," ","Analysis"}],BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL[
"https://reference.wolfram.com/language/guide/TextAnalysis.html"],None},ButtonNote -> "https://reference.wolfram.com/language/guide/TextAnalysis.html"]," ","functions"}],
"Item",ExpressionUUID -> "05b4e32f-a657-4597-8efa-a7954effc99b"]},Open],ExpressionUUID -> "ef76032e-7ecd-479c-9ef8-9e90278e9f98"]},
Open],ExpressionUUID -> "7798dfa8-5079-4c9a-9e9e-b9cb28bb2f01"]},Open],ExpressionUUID -> "57359f45-1518-40dd-b1f0-0aeb675b982a"]},
Open],ExpressionUUID -> "11c29b09-741d-4007-9c42-28a5eb56d872"]},StyleDefinitions -> "Default.nb",
FrontEndVersion -> "12.3 for Wolfram Cloud 1.61 (October 22, 2021)"]