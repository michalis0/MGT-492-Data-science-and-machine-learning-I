Notebook[{Cell[
CellGroupData[{Cell[
TextData[{"Data"," ","Science"," ","and"," ","Machine"," ","Learning"}],
"Title",ExpressionUUID -> "98e3e3f9-128d-4e4c-9a86-5466abb3fc44"],Cell[
CellGroupData[
{Cell[
TextData[{"Assignment"," ","2",StyleBox[RowBox[{":"," "}]],"Prediction",StyleBox[
RowBox[{","," "}]],"classification",StyleBox[RowBox[{","," "}]],"and"," ","clustering"}],
"Subtitle",ExpressionUUID -> "81b96c51-9575-47fd-8957-e3af20dc0ee0"],Cell[
TextData[
{"In"," ","this"," ","assignment",StyleBox[RowBox[{","," "}]],"we"," ","will"," ","use"," ","a"," ","dataset"," ","to"," ","perform"," ","prediction"," ","and"," ","classification"," ","operations",":","\n","\t","First",StyleBox[
RowBox[{","," "}]],"we"," ","will"," ","use"," ","the"," ","same"," ","dataset"," ","as"," ","in"," ","Assignment"," ","1",StyleBox[
RowBox[{","," "}]],"picking"," ","up"," ","where"," ","we"," ","left"," ","of",StyleBox[
RowBox[{"."," "}]],"Recall"," ","that"," ","the"," ","dataset"," ","contains"," ","different"," ","environmental",StyleBox[
RowBox[{","," "}]],"social"," ","and"," ","governance",StyleBox[RowBox[{" ","("}]],"ESG",StyleBox[
RowBox[{")"," "}]],"scores"," ","of",StyleBox[RowBox[{" ","\t"}]],"companies"," ","across"," ","different"," ","years"," ","as"," ","well"," ","a"," ","set"," ","of"," ","features",StyleBox[
RowBox[{","," "}]],"e",".","g",StyleBox[RowBox[{","," "}]],"market"," ","value",StyleBox[
RowBox[{","," "}]],"assets",StyleBox[RowBox[{","," "}]],"etc",".","\n","\t","Second",StyleBox[
RowBox[{","," "}]],"we"," ","will"," ","classify"," ","images"," ","of"," ","Sustainable"," ","Development"," ","Goals",StyleBox[
RowBox[{" ","("}]],"SDGs",")","\n","Once"," ","you"," ","are"," ","done"," ","you"," ","have"," ","to"," ","submit"," ","your"," ","notebook"," ","here",StyleBox[
RowBox[{":"," "}]],ButtonBox["https://moodle.epfl.ch/mod/assign/view.php?id=1159930",
BaseStyle -> "HyperlinkActionNew",ButtonData -> {URL["https://moodle.epfl.ch/mod/assign/view.php?id=1159930"],None},
ButtonNote -> "https://moodle.epfl.ch/mod/assign/view.php?id=1159930"]," ","\n","There"," ","is"," ","no"," ","quiz",StyleBox[
RowBox[{","," "}]],"so"," ","your"," ","grade"," ","will"," ","depend"," ","only"," ","on"," ","your"," ","notebook",".","\n","If"," ","there"," ","is"," ","need"," ","for"," ","further"," ","clarifications"," ","on"," ","the"," ","questions",StyleBox[
RowBox[{","," "}]],"after"," ","the"," ","assignment"," ","is"," ","released",StyleBox[
RowBox[{","," "}]],"we"," ","will"," ","update"," ","this"," ","file",StyleBox[RowBox[
{","," "}]],"so"," ","make"," ","sure"," ","you"," ","check"," ","the"," ","git"," ",StyleBox[
"repository",IgnoreSpellCheck -> True]," ","for"," ","updates",".","\n","\t","Good"," ","luck","!"}],
"Text",ExpressionUUID -> "133bac52-fcc8-475f-87c1-1bf9093120ff"],Cell[
TextData[{"Import"," ","as"," ","a"," ","dataset"," ","the"," ","CSV"," ","file",StyleBox[
RowBox[{":"," ","\""}]],"https://storage.googleapis.com/mgt_492/dataESG.csv","\""}],
"Text",CellFrame -> 2,FontSlant -> Plain,Background -> RGBColor[0.8941176470588236`,
0.8941176470588236`,0.8941176470588236`],ExpressionUUID -> "ae21ffdf-5389-4862-a19d-ac3d6f5e52cb"],Cell[
BoxData[
RowBox[{RowBox[{"dataset"," ","="," ",RowBox[{"Import","[",RowBox[{"\"https://storage.googleapis.com/mgt_492/dataESG.csv\"",","," ","\"Dataset\"",","," ",RowBox[
{"\"HeaderLines\""," ","\[Rule]"," ","1"}]}],"]"}]}],";"}]],"Input",CellLabel -> "In[117]:= ",
ExpressionUUID -> "faa5d048-09cd-4d22-bb1f-c6e6f9e9d301"],Cell[
CellGroupData[{Cell[
TextData[
{"Prediction",StyleBox[RowBox[{":"," "}]],"ESG"," ","Score"}],"Section",ExpressionUUID -> "f8afc99d-26d5-427e-b402-e305067a9a77"],Cell[
TextData[
{StyleBox["Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"1",FontWeight -> Bold],StyleBox[RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold]}]],"\n","Build"," ","a"," ","linear"," ","regression"," ","model"," ","for",StyleBox[
RowBox[{" ","\""}]],"ESG"," ","controversy"," ","score",StyleBox[RowBox[{"\""," "}]],"using"," ","the"," ","following"," ","attributes",":","\n","\"","mv",StyleBox[
RowBox[{"\","," ","\""}]],"mc",StyleBox[RowBox[{"\","," ","\""}]],"tobin",StyleBox[
RowBox[{"\","," ","\""}]],"roe",StyleBox[RowBox[{"\","," ","\""}]],"oia",StyleBox[
RowBox[{"\","," ","\""}]],"ois",StyleBox[RowBox[{"\","," ","\""}]],"assets",StyleBox[
RowBox[{"\","," ","\""}]],"roa",StyleBox[RowBox[{"\","," ","\""}]],"sg",StyleBox[
RowBox[{"\","," ","\""}]],"lev",StyleBox[RowBox[{"\","," ","\""}]],"div",StyleBox[
RowBox[{"\","," ","\""}]],"ind",StyleBox[RowBox[{"\","," ","\""}]],"country",StyleBox[
RowBox[{"\""," ",StyleBox["[",FontWeight -> Bold]}]],StyleBox["1",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],
"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,0.792156862745098`,
0.9215686274509803`],ExpressionUUID -> "6c507811-7e53-4620-ac1f-d611d7824c39"],Cell[
BoxData[
RowBox[{RowBox[{"regressKeys"," ","="," ",RowBox[{"{"," ",RowBox[{"\"ESG controversy score\"",","," ","\"mv\"",","," ","\"mc\"",","," ","\"tobin\"",","," ","\"roe\"",","," ","\"oia\"",","," ","\"ois\"",","," ","\"assets\"",","," ","\"roa\"",","," ","\"sg\"",","," ","\"lev\"",","," ","\"div\"",","," ","\"ind\"",","," ","\"country\""}],"}"}]}],";"}]],
"Input",CellLabel -> "In[118]:= ",ExpressionUUID -> "8e363c5f-8433-4ee8-90ee-001ecf212aa4"],Cell[
BoxData[
RowBox[{RowBox[{"dataR"," ","="," ",RowBox[{"dataset","[",RowBox[{"All",","," ","regressKeys"}],"]"}]}],";"}]],
"Input",CellLabel -> "In[119]:= ",ExpressionUUID -> "5c40e99c-0b2c-46f9-b110-de7441dc5a41"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"pESG"," ","="," ",RowBox[{"Predict","[",RowBox[{RowBox[{"dataR"," ","\[Rule]"," ","\"ESG controversy score\""}],","," ",RowBox[
{"Method"," ","\[Rule]"," ","\"LinearRegression\""}]}],"]"}]}]],"Input",CellLabel -> "In[120]:= ",
ExpressionUUID -> "b34dd8c2-0521-45bc-aa81-4f2ff75937ba"],Cell[
BoxData[InterpretationBox[
RowBox[{TagBox["PredictorFunction","SummaryHead"],"[",DynamicModuleBox[{Set[Typeset`open$$,
False],Set[Typeset`embedState$$,"Ready"]},TemplateBox[{PaneSelectorBox[{False -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxOpener"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{},{{},{PointSize[0.125`],GrayLevel[0.55`],PointBox[
{{-1,1.5`},{0,2.3`},{1,0.8`},{2,2},{3,1.3`},{4,4.`}}]},{GrayLevel[0.7`],AbsoluteThickness[
1.5`],BSplineCurveBox[{{-1,2},{0,2},{1,1},{2,1},{4,2},{5,4}}]}},{}},Axes -> {False,False},
AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},
FrameStyle -> Directive[Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},
GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},
PlotRange -> {All,All},PlotRangeClipping -> True,PlotRangePadding -> {{1,1},{1,1}},
Ticks -> {None,None},Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[
3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],
-1]]]}],Frame -> True,FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[
Tiny],RGBColor[0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[
{{RowBox[{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TagBox[TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"\"LinearRegression\"","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{},{{},{PointSize[0.125`],GrayLevel[0.55`],PointBox[
{{-1,1.5`},{0,2.3`},{1,0.8`},{2,2},{3,1.3`},{4,4.`}}]},{GrayLevel[0.7`],AbsoluteThickness[
1.5`],BSplineCurveBox[{{-1,2},{0,2},{1,1},{2,1},{4,2},{5,4}}]}},{}},Axes -> {False,False},
AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},
FrameStyle -> Directive[Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},
GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},
PlotRange -> {All,All},PlotRangeClipping -> True,PlotRangePadding -> {{1,1},{1,1}},
Ticks -> {None,None},Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[
3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],
-1]]]}],Frame -> True,FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[
Tiny],RGBColor[0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[
{{RowBox[{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TagBox[TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"\"LinearRegression\"","SummaryItem"]}]},{RowBox[{TagBox["\"Number of training examples: \"",
"SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["1007","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],RuleDelayed[DynamicModuleValues,
{}],ExpressionUUID -> "ab647938-f482-4120-9721-838f5a2b735b"],"]"}],PredictorFunction[
Association["ExampleNumber" -> 1007,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 1007,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 7039037788529425936,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 1436984763516442639,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 4935565381240052860]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-1.8557395047893887`*^-4,0.9883744206846383`,0.14829555426122099`,0.02297298334490654`,-0.021240101047951685`,0.004441735061481938`,0.00640547147448637`,-0.006434810146863741`,0.0064104637159583516`,0.001003717899411205`,1.5924695471878101`*^-4,-7.58035068259314`*^-4,7.946700282965741`*^-4},{-7.67159351371406`*^-6,0.012162222702450693`,0.013071097850151533`,-0.6552865469461218`,-0.051271821391373144`,-0.02940183103273892`,-1.427671272302388`*^-4,-0.004194114545300663`,-0.00935486405686776`,-0.3964797005030117`,-0.0429879579895007`,-0.09689298636514285`,0.6310705253971389`},{-4.698605689082378`*^-6,0.01183612382180464`,0.012042627514490268`,-0.5912666816641119`,-0.05005934413846577`,-0.03032686229504157`,-0.001449638925331002`,-0.004277555623736224`,0.006496566933392749`,-0.23938095871132964`,-0.0351564504758755`,0.0468840264502437`,-0.7654364769581903`},{1.9731383095129947`*^-5,-0.007258289166954043`,0.01832837907140844`,0.016732367019794518`,0.013341468643799594`,-0.5325748911615641`,-0.08163896602934263`,-0.41484258622494136`,0.6812655716589838`,0.020775113014791874`,0.14367265845555038`,-0.22679344484788203`,-0.01125299070618905`},{2.816097091681909`*^-6,0.003705380972339814`,0.0027977750705052424`,8.372938794488826`*^-4,0.052567711413827656`,-0.33595991401233155`,-0.013875552209488466`,0.04704523689116493`,-0.22468708229570364`,0.1601050998862639`,-0.7805989777610134`,-0.4419544285487304`,-0.03410453360315299`},{6.2371199040981594`*^-6,0.001809779857626149`,0.025211033649630153`,0.0073836227167722954`,0.07486633096612477`,-0.5397199938475072`,-0.025429202973445964`,0.07811979985823411`,-0.06796182044502787`,-0.030122323726854153`,-0.2015710985721824`,0.8021254435889257`,0.0780533492797489`},{1.0970570589503664`*^-6,0.0019240633790038324`,0.0046930403696330775`,0.0020804530237118414`,0.005617498677537646`,-0.06124132808561232`,0.05506538358045386`,0.8771327267262345`,0.4648183628964002`,-0.004326849730147628`,-0.0062900090134989034`,-0.0875307220538463`,-0.004224702964404554`},{-1.0661791342658116`*^-5,0.008208330598447765`,0.005639468077853123`,-0.46246969365344437`,-0.02728900742220981`,0.027464329023041054`,0.003520727028383058`,0.007883238512992169`,0.0157907812467474`,0.8707098833000042`,0.11226057093612901`,0.07835143649620191`,0.08557247657600799`},{9.316018827872233`*^-6,0.0038909620210056954`,0.026489073778518973`,0.0062489223166789865`,0.08256510491176064`,-0.5405500714969758`,0.07983342503774747`,0.2004081440760438`,-0.5075349440509056`,-0.012785239958328264`,0.5577512059425759`,-0.2893931076907711`,-0.033256633254031887`},{-3.245216066552585`*^-6,-0.008129426169464335`,0.002146209997489204`,0.0026577586661059352`,-0.01727401450937664`,-0.017081263030592465`,0.9913730523313671`,-0.09597861876649479`,0.0654696268057684`,0.0011559452411665741`,-0.04941359242917056`,0.023776591804597392`,0.0022404396736638394`},{2.2466343005350333`*^-4,0.14817838201880595`,-0.9876305352635909`,-0.012559890797028572`,-0.023362224901808403`,-0.04191048960293024`,0.002979189935418778`,0.0033571820668867143`,-0.0011378590681853486`,-0.0030030639780491844`,0.009640382150114965`,0.006733809240009`,5.180541807677981`*^-4},{2.7102262157216494`*^-5,0.025478264311716455`,-0.023215403672903107`,-0.07780677421321192`,0.9886507802228061`,0.10791619719542726`,0.014331077795648607`,-0.02649189407698267`,0.04917894333149045`,-0.014098014989317273`,0.006744004277503196`,-0.009446462468719045`,-0.004743142039059076`},{0.9999999568124154`,1.4972895524847864`*^-4,2.494787191480495`*^-4,-3.972737188857026`*^-6,-2.8116771505403864`*^-5,2.7108379599476546`*^-5,4.382209705570634`*^-6,3.226346005619551`*^-6,-7.715443852626172`*^-6,5.814659115834973`*^-6,-6.34601359827671`*^-6,2.500601350876403`*^-6,2.469795989612057`*^-6}},
"Precisions" -> {2.8658986648380616`*^-4,18.66023183054173`,25.461324072156554`,194.38872339006073`,273.44358621630687`,313.5035116384137`,1006.6961460309421`,1343.315859900595`,2163.0557354715334`,2541.739278883981`,4612.073898855507`,7534.556958635849`,25482.514512008882`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499277`,0.009146984843098319`,0.008662863386295936`,0.03201969057497516`,0.4760999158331675`,0.30155210090069506`,0.2487729478291958`,0.006042477192651441`,0.3815092675491559`,0.0015480930516385306`,0.27875878701886797`,0.06452104640019861`,113.23634558093346`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5851818833362818341]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3398064305660113545]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3398064305660113545]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.236528`,"MaxTrainingMemory" -> 8943960,"DataMemory" -> 353280,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,5,35.027895`8.296989018805315},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8783065634782469`,0.8783065634782469`,0.9889029585098147`,1.0086351796697375`,1.1359356704196353`,1.139048124882747`,1.1602185953213477`,1.1759352769585245`,1.1868678098123036`,1.252429135408372`,1.3694632187501294`},
"LeftBoundary" -> 0.9889029585098147`,"LeftScale" -> 0.05529819751578391`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-14.684465293174117`,0.5760096371792968`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 5043419960004123664]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 9162135246989219361]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["Standardize",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Mean" -> {0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8128819341018390786]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{0.03972011059522629`,-0.15578825771808624`,-0.3032674193382263`,0.1697862148284912`,0.06928092241287231`,-0.12224914133548737`},{-0.3037623167037964`,0.2442009449005127`,-0.41829925775527954`,0.5183126926422119`,0.7185214161872864`,0.034876640886068344`},{1.11789870262146`,0.06451744586229324`,0.2761942148208618`,-0.21557849645614624`,-0.347463995218277`,-0.22760500013828278`},{-0.2731706202030182`,-0.8212507963180542`,1.0276328325271606`,0.11630996316671371`,-0.7739960551261902`,-0.5578123927116394`},{-0.2470545768737793`,-0.39912769198417664`,-0.20223714411258698`,-0.6258736848831177`,0.06271404772996902`,0.822462797164917`},{0.7651844024658203`,-0.607970654964447`,-0.1983891725540161`,0.09799265116453171`,0.0658055767416954`,0.3305623531341553`},{-0.3588855564594269`,0.15606559813022614`,0.21148431301116943`,-0.1649528592824936`,-0.32789114117622375`,0.5183995366096497`},{0.027751944959163666`,-0.1765281856060028`,0.2528044283390045`,0.29958608746528625`,0.2814983129501343`,-0.27091071009635925`},{0.4334915578365326`,0.21868975460529327`,0.3313189148902893`,0.15218040347099304`,0.6548845767974854`,0.02975352294743061`},{0.05514517053961754`,0.8787866234779358`,0.18280209600925446`,-0.6141870021820068`,0.5653268098831177`,0.2905510663986206`},{-0.23993176221847534`,-0.017175914719700813`,0.10568251460790634`,-0.24191078543663025`,-0.6953346133232117`,-0.2047688215970993`},{-0.7110679149627686`,-0.6357394456863403`,0.46429187059402466`,-0.173386812210083`,-0.4404087960720062`,0.1353435516357422`},{0.019231244921684265`,0.03258339688181877`,0.11384154111146927`,-0.20764970779418945`,-0.9780294895172119`,-0.0391814224421978`},{0.5275387763977051`,0.11234533041715622`,-0.7592102885246277`,0.6195807456970215`,-0.6660134196281433`,4.3285827268846333`*^-4},{-0.08919527381658554`,0.505937933921814`,-0.26045292615890503`,0.4190792739391327`,0.6030683517456055`,-0.24370768666267395`},{-0.361797958612442`,-0.11218204349279404`,-0.4293869137763977`,0.48013418912887573`,0.5854218602180481`,0.8115440011024475`},{-0.38054990768432617`,0.2130960375070572`,-0.39035171270370483`,-0.29974624514579773`,-0.4751039147377014`,0.1737474501132965`},{0.13729500770568848`,0.4861004650592804`,-0.14435075223445892`,-0.026394639164209366`,0.7842423319816589`,0.13296456634998322`},{0.8097424507141113`,-0.18874762952327728`,0.19114966690540314`,-0.6109498143196106`,-0.2629683315753937`,-0.27042651176452637`},{-0.9196298718452454`,-0.39173606038093567`,0.17258886992931366`,-0.6131251454353333`,0.5276080369949341`,0.75865638256073`}}]},
"Version" -> {12.3`,1},"ID" -> 2142446066226798798]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 983674003085461790]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Numerical"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 3605005846534147222]],MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.6880768016911611`},"StandardDeviation" -> {0.3037042673953065`},"Output" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3995372887227076068]],MachineLearning`MLProcessor["FromVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 1260058274441559957]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Numerical","Weight" -> 1],
"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]]},
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"ProbabilityPostprocessor" -> Identity,"InverseProcessorFunction" -> Function[Plus[
0.6880768016911611`,Times[0.3037042673953065`,Slot[1]]]],"ProcessorFunction" -> Function[
Plus[-2.2656145321644394`,Times[3.292676815431057`,Slot[1]]]],"Name" -> "value","Quantiles" -> {-2.2656145321644394`,1.0270622832666176`},
"Mean" -> 0.6880768016911618`],"LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit",
Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",Association[
"Index" -> "ESG controversy score","Order" -> {"ESG controversy score","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> Function[DiracDelta[
Plus[Slot[2],Times[-1,Slot[1]]]]],"Threshold" -> 0,"PerformanceGoal" -> Automatic,
"BatchProcessing" -> Automatic,"Model" -> Association["MeanFunction" -> LinearLayer[
Association["Type" -> "Linear","Arrays" -> Association["Weights" -> RawArray["Real32",
{{-0.08083596080541611`,0.006008992437273264`,0.022519906982779503`,0.010260670445859432`,-0.01822715625166893`,-0.050798773765563965`,0.008721869438886642`,-0.00657618697732687`,0.05296968296170235`,-0.029155757278203964`,0.018288714811205864`,0.01002486702054739`,-0.1338483691215515`,0.015766337513923645`,0.009851484559476376`,-0.027005024254322052`,-0.012284282594919205`,0.013767833821475506`}}],
"Biases" -> RawArray["Real32",{2.3203616321919567`*^-15}]],"Parameters" -> Association[
"OutputDimensions" -> {1},"$OutputSize" -> 1,"$InputSize" -> 18,"$InputDimensions" -> {18}],
"Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{18},NeuralNetworks`AtomT]],
"Outputs" -> Association["Output" -> NeuralNetworks`TensorT[{1},NeuralNetworks`RealT]]],
Association["Version" -> "12.3.3","Unstable" -> False]],"DistributionData" -> {NormalDistribution,0.9928350360632701`},
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Processors" -> {MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {0.1184867666470311`,0.2809487115277043`,0.0400053141560746`,-0.2608260774520184`,0.22593773912765394`,0.21223287467791893`,-8.047058065981256`*^-5,1.3513019747207265`*^-4,-2.015670226465343`*^-5,-9.92110551361689`*^-5,4.488341737872193`*^-5,1.3124912085903822`*^-4,9.506042326160281`*^-5,-1.642808025337896`*^-4,-1.485952642864705`*^-4,-1.6325571882185011`*^-4,-1.2197362124939765`*^-4,9.764157456449414`*^-5},
"StandardDeviation" -> {0.4383062344710174`,0.49329351983416825`,0.29864735238426976`,0.42841778893056337`,0.4646088125125342`,0.33276119544732735`,0.9999518469121118`,1.0000746705118084`,1.0001846512271124`,0.9998760059914594`,0.9998520974720879`,1.0001376742949344`,0.9997788828144927`,1.0001628065494985`,0.9999648925770828`,0.9999156148564674`,1.000005629070436`,0.9998453104735201`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 8970789242639911585]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LinearRegression","PostProcessor" -> MachineLearning`MLProcessor[
"Identity"],"Options" -> Association["L1Regularization" -> Association["Value" -> 0,
"Options" -> Association[]],"L2Regularization" -> Association["Value" -> 100.`,"Options" -> Association[]],
"OptimizationMethod" -> Association["Value" -> "NormalEquation","Options" -> Association[]],
MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"PanelCell" -> None,"TrainingFunction" -> Predict,"EMIterations" -> Missing["KeyAbsent",
"EMIterations"],"ProcessorEntropyShift" -> -1.1917008556781277`,"PreprocessingTime" -> 0.686704`6.288314570630775,
"LossName" -> "StandardDeviation","BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[
0.20391329624836693`,0.07862379947767742`],"StandardDeviation" -> Around[0.2925269205981635`,
0.024305417305198945`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5195647688776655`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20391329624836693`,0.055595421773317034`]},
"StandardDeviationHistory" -> {Around[0.2925269205981635`,0.017186525396075035`]},
"Configuration" -> {"LinearRegression","L1Regularization" -> 0,"L2Regularization" -> 100.`,"OptimizationMethod" -> Automatic,MaxIterations -> 30},
"FinalTrainingSize" -> 1007],TypeSystem`Struct[{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory","Configuration","FinalTrainingSize"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`Atom[
Integer]}],Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "LinearRegression",
"Options" -> Association["L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-5],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.7292843708874185`*^12,1.6296795673198625`*^12],"StandardDeviation" -> Around[0.6566326157238632`,
0.32920725337906953`],"EvaluationTime" -> 3.9810717055349695`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> -0.3680790737359322`,"TrainingSize" -> 10,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 249008,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.7292843708874185`*^12,1.1523574732130334`*^12]},
"StandardDeviationHistory" -> {Around[0.6566326157238632`,0.23278468128013802`]}],Association[
"MeanCrossEntropy" -> Around[0.9279488073188086`,0.5493064747990719`],"StandardDeviation" -> Around[
0.436914520447664`,0.09018807273846408`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.09441025043692153`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.9279488073188086`,0.38841833328010106`]},"StandardDeviationHistory" -> {Around[
0.436914520447664`,0.06377259781551355`]}],Association["MeanCrossEntropy" -> Around[
0.21574761783292873`,0.08816728818568591`],"StandardDeviation" -> Around[0.2963474219106709`,
0.0261856141350338`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5055520722075343`,"TrainingSize" -> 200,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.21574761783292873`,0.062343687354927076`]},"StandardDeviationHistory" -> {Around[
0.2963474219106709`,0.01851602532441671`]}],Association["MeanCrossEntropy" -> Around[
0.24345857706142607`,0.07036947465903425`],"StandardDeviation" -> Around[0.3018452589326347`,
0.020857341095084154`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4909627016891409`,"TrainingSize" -> 806,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 407488,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24345857706142607`,0.049758732719938026`]},
"StandardDeviationHistory" -> {Around[0.3018452589326347`,0.014748367325854855`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.3018452589326347`,0.020857341095084154`],
"TrainingMemory" -> 407488,"TrainingTime" -> 0.02251342945748697`],"Index" -> 1],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 10.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.5147429089591009`,0.27806935810348105`],
"StandardDeviation" -> Around[0.3001092078390103`,0.03376176578511753`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48820576154023265`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75576,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.5147429089591009`,0.19662472875516188`]},"StandardDeviationHistory" -> {Around[
0.3001092078390103`,0.023873173531488566`]}],Association["MeanCrossEntropy" -> Around[
0.5865730181544999`,0.3280506780701437`],"StandardDeviation" -> Around[0.3820641400200063`,
0.0703034964624581`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> 0.2328730536792636`,"TrainingSize" -> 40,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.5865730181544999`,0.23196685903624364`]},"StandardDeviationHistory" -> {Around[
0.3820641400200063`,0.04971207908972858`]}],Association["MeanCrossEntropy" -> Around[
0.206605640704205`,0.082952138665468`],"StandardDeviation" -> Around[0.293565605360788`,
0.025030008312286422`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5155926724529161`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.206605640704205`,0.05865601976427922`]},"StandardDeviationHistory" -> {Around[
0.293565605360788`,0.01769888861077338`]}],Association["MeanCrossEntropy" -> Around[
0.24650192987182526`,0.04067769949871539`],"StandardDeviation" -> Around[0.303536227259097`,
0.01205677814513886`],"EvaluationTime" -> 2.511886431509579`*^-5,"TestSize" -> 400,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4911886765137723`,"TrainingSize" -> 806,
"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407610.6666666666`,"ExperimentCount" -> 2,
"MeanCrossEntropyHistory" -> {Around[0.24338844727057848`,0.0497747713184657`],Around[
0.24961541247307203`,0.06996575978107505`]},"StandardDeviationHistory" -> {Around[
0.3018240084402837`,0.01475447232668639`],Around[0.3052484460779103`,0.020297755178353333`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.511886431509579`*^-5,
"ModelMemory" -> 17536.`,"StandardDeviation" -> Around[0.303536227259097`,0.01205677814513886`],
"TrainingMemory" -> 407610.6666666666`,"TrainingTime" -> 0.018723998082291214`],"Index" -> 2],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 10000.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.34016037384510955`,0.03171621768875464`],
"StandardDeviation" -> Around[0.3037177267837419`,0.019257517473002896`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48590226176670936`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.34016037384510955`,0.022426752601307137`]},
"StandardDeviationHistory" -> {Around[0.3037177267837419`,0.013617121193978773`]}],Association[
"MeanCrossEntropy" -> Around[0.24759399043378263`,0.06111321338068985`],"StandardDeviation" -> Around[
0.30299232551383304`,0.020480905817210387`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4874664646380007`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24759399043378263`,0.04321356760158624`]},
"StandardDeviationHistory" -> {Around[0.30299232551383304`,0.014482187388192472`]}],Association[
"MeanCrossEntropy" -> Around[0.24474031008153924`,0.03511479974132768`],"StandardDeviation" -> Around[
0.3024987149329279`,0.010645873688927701`],"EvaluationTime" -> 2.7286835077291794`*^-5,
"TestSize" -> 400,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4955114659801273`,
"TrainingSize" -> 806,"TrainingTime" -> 0.009314427449080937`,"TrainingMemory" -> 407573.3333333333`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.24729637806997667`,
0.04954366015043928`],Around[0.2421842420931018`,0.04951252757252981`]},"StandardDeviationHistory" -> {Around[
0.3032453824161581`,0.014992452162270738`],Around[0.3017520474496977`,0.015044609533273934`]}],Association[
"MeanCrossEntropy" -> Around[0.6805983999036436`,0.014303560902438277`],"StandardDeviation" -> Around[
0.30513889917263426`,0.01993072083705735`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.48085659999788954`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75520,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6805983999036436`,0.010114144909228878`]},
"StandardDeviationHistory" -> {Around[0.30513889917263426`,0.014093147857819273`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.30513889917263426`,0.01993072083705735`],
"TrainingMemory" -> 75520,"TrainingTime" -> 0.08793213558397794`],"Index" -> 3],Association[
"Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1.`*^-4],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.9279064488159402`,0.5492568854213569`],
"StandardDeviation" -> Around[0.43690676065981804`,0.09018120894186962`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.09443032428233367`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84728,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.9279064488159402`,0.38838326829484393`]},"StandardDeviationHistory" -> {Around[
0.43690676065981804`,0.06376774437839693`]}],Association["MeanCrossEntropy" -> Around[
0.21574751534035685`,0.08816717397254667`],"StandardDeviation" -> Around[0.2963473859039863`,
0.02618558295401531`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5055522155293051`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135800,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.21574751534035685`,0.06234360659404182`]},
"StandardDeviationHistory" -> {Around[0.2963473859039863`,0.01851600327610709`]}],Association[
"MeanCrossEntropy" -> Around[0.2500066630246117`,0.05045348466454959`],"StandardDeviation" -> Around[
0.30458623425966014`,0.014684727667930155`],"EvaluationTime" -> 3.491343280859839`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4860519904002374`,
"TrainingSize" -> 806,"TrainingTime" -> 0.009999999999999998`,"TrainingMemory" -> 407613.3333333333`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.25495809593522845`,
0.07112345683738697`],Around[0.24505523011399497`,0.07089224578211306`]},"StandardDeviationHistory" -> {Around[
0.30512149241016406`,0.020853913988993743`],Around[0.3040509761091562`,0.0206546028987164`]}],Association[
"MeanCrossEntropy" -> Around[4.010720816725951`*^9,9.25509857779209`*^8],"StandardDeviation" -> Around[
0.3214227791544533`,0.03637378904573149`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4194644754133291`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4.010720816725951`*^9,6.544342964906758`*^8]},
"StandardDeviationHistory" -> {Around[0.3214227791544533`,0.025720152891685694`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.8370820458389797`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.3214227791544533`,0.03637378904573149`],
"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],"Index" -> 4],Association[
"Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[52.44239741299497`,10.582643666204062`],
"StandardDeviation" -> Around[0.3383242229081771`,0.03150373957541412`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.3721456813601194`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[52.44239741299497`,7.483059099253758`]},"StandardDeviationHistory" -> {Around[
0.3383242229081771`,0.02227650788651033`]}],Association["MeanCrossEntropy" -> Around[
0.6254785996172716`,0.29929568275849583`],"StandardDeviation" -> Around[0.3829835486458447`,
0.05635837776182956`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.23760398930809679`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6254785996172716`,0.21163400685839004`]},"StandardDeviationHistory" -> {Around[
0.3829835486458447`,0.039851391092062795`]}],Association["MeanCrossEntropy" -> Around[
0.2145946247494457`,0.08704908613247879`],"StandardDeviation" -> Around[0.29596031399063927`,
0.025892285982067935`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5070312736923357`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2145946247494457`,0.0615529991003676`]},"StandardDeviationHistory" -> {Around[
0.29596031399063927`,0.01830861099834162`]}],Association["MeanCrossEntropy" -> Around[
0.24453719692783565`,0.04072339715528041`],"StandardDeviation" -> Around[0.3030229024523076`,
0.012053072172200025`],"EvaluationTime" -> 2.6202849696193794`*^-5,"TestSize" -> 400,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.49287033069427943`,"TrainingSize" -> 806,
"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407568.`,"ExperimentCount" -> 2,
"MeanCrossEntropyHistory" -> {Around[0.243430319109482`,0.04976019024355506`],Around[
0.24564407474618932`,0.07078616022637006`]},"StandardDeviationHistory" -> {Around[
0.30183670174992183`,0.014749163579757713`],Around[0.3042091031546934`,0.020611578561037312`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.6202849696193794`*^-5,
"ModelMemory" -> 17536.`,"StandardDeviation" -> Around[0.3030229024523076`,0.012053072172200025`],
"TrainingMemory" -> 407568.`,"TrainingTime" -> 0.018723998082291214`],"Index" -> 5],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0.1`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.8831644899852518`,0.5006181789267424`],
"StandardDeviation" -> Around[0.4288338043319327`,0.08351189021164307`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.11532400497824336`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.8831644899852518`,0.3539905091043599`]},"StandardDeviationHistory" -> {Around[
0.4288338043319327`,0.05905182387835927`]}],Association["MeanCrossEntropy" -> Around[
0.21563546017132112`,0.08804217279838086`],"StandardDeviation" -> Around[0.29630805757608586`,
0.026151564846980734`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5057051892293415`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.21563546017132112`,0.0622552174161329`]},"StandardDeviationHistory" -> {Around[
0.29630805757608586`,0.018491948841939814`]}],Association["MeanCrossEntropy" -> Around[
0.2434553857152781`,0.07036967845152851`],"StandardDeviation" -> Around[0.30184429242204236`,
0.020857458209899173`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.49096578025918614`,"TrainingSize" -> 806,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 407424,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.2434553857152781`,0.04975887682299268`]},"StandardDeviationHistory" -> {Around[
0.30184429242204236`,0.014748450138534732`]}],Association["MeanCrossEntropy" -> Around[
4542.760069266185`,886.5687375947408`],"StandardDeviation" -> Around[0.34351391149870636`,
0.03227973999366927`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 300,
"ModelMemory" -> 17536,"ModelUtility" -> 0.35675543098810314`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4542.760069266185`,626.898766341238`]},"StandardDeviationHistory" -> {Around[
0.34351391149870636`,0.02282522304446214`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.5118864315095795`*^-5,"ModelMemory" -> 17536,"StandardDeviation" -> Around[
0.34351391149870636`,0.03227973999366927`],"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],
"Index" -> 6],Association["Value" -> "LinearRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 100000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
0.6833879825741994`,0.014260978538216453`],"StandardDeviation" -> Around[0.30515663264541903`,
0.01993966980128871`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 300,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4807934454603753`,"TrainingSize" -> 10,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 77696,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.6833879825741994`,0.010084034630728671`]},"StandardDeviationHistory" -> {Around[
0.30515663264541903`,0.014099475731111864`]}],Association["MeanCrossEntropy" -> Around[
0.34199685491865117`,0.03162825604303987`],"StandardDeviation" -> Around[0.30405395002649155`,
0.019281595095393914`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4847940597819176`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.34199685491865117`,0.022364554325137894`]},
"StandardDeviationHistory" -> {Around[0.30405395002649155`,0.01363414664404631`]}],Association[
"MeanCrossEntropy" -> Around[0.2488856610152403`,0.060773644955825205`],"StandardDeviation" -> Around[
0.303335909866842`,0.020524569932095567`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48631984006832396`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135800,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2488856610152403`,0.04297345646568762`]},"StandardDeviationHistory" -> {Around[
0.303335909866842`,0.014513062579922291`]}],Association["MeanCrossEntropy" -> Around[
0.24702075091797981`,0.06965667589011522`],"StandardDeviation" -> Around[0.303225342331713`,
0.02122892092133829`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.48622128071287185`,"TrainingSize" -> 806,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 407488,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24702075091797981`,0.04925470787681396`]},
"StandardDeviationHistory" -> {Around[0.303225342331713`,0.015011113940751273`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.303225342331713`,0.02122892092133829`],
"TrainingMemory" -> 407488,"TrainingTime" -> 0.019924175339545304`],"Index" -> 7],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1000.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.6538831483696669`,0.014796270673266772`],
"StandardDeviation" -> Around[0.3053258538432065`,0.019883027260214417`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.48028283521765314`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75576,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6538831483696669`,0.010462543329338577`]},
"StandardDeviationHistory" -> {Around[0.3053258538432065`,0.014059423406214595`]}],Association[
"MeanCrossEntropy" -> Around[0.3234479300365895`,0.032631718066437713`],"StandardDeviation" -> Around[
0.3009210113023353`,0.019050829503999202`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4951724643028259`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.3234479300365895`,0.02307410912654568`]},"StandardDeviationHistory" -> {Around[
0.3009210113023353`,0.013470970729506586`]}],Association["MeanCrossEntropy" -> Around[
0.27822524137647076`,0.10212250242261312`],"StandardDeviation" -> Around[0.3126578432476319`,
0.031384372931076966`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4496160304887358`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.27822524137647076`,0.07221151397476935`]},
"StandardDeviationHistory" -> {Around[0.3126578432476319`,0.022192102922852043`]}],Association[
"MeanCrossEntropy" -> Around[0.24836916157082206`,0.07091442511068671`],"StandardDeviation" -> Around[
0.30339800129288347`,0.021104132797124187`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4857410181488667`,"TrainingSize" -> 806,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 407424,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.24836916157082206`,0.050144070879712156`]},"StandardDeviationHistory" -> {Around[
0.30339800129288347`,0.014922875411907933`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.8370820458389797`*^-5,"ModelMemory" -> 17536,"StandardDeviation" -> Around[
0.30339800129288347`,0.021104132797124187`],"TrainingMemory" -> 407424,"TrainingTime" -> 0.020437078873297404`],
"Index" -> 8],Association["Value" -> "LinearRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 100.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
0.2483973569263034`,0.04459778089316626`],"StandardDeviation" -> Around[0.29483001579721285`,
0.01971053723583402`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5149213128369845`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2483973569263034`,0.0315353932954297`]},"StandardDeviationHistory" -> {Around[
0.29483001579721285`,0.013937454540288182`]}],Association["MeanCrossEntropy" -> Around[
0.20391329624836693`,0.07862379947767742`],"StandardDeviation" -> Around[0.2925269205981635`,
0.024305417305198945`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5195647688776655`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20391329624836693`,0.055595421773317034`]},
"StandardDeviationHistory" -> {Around[0.2925269205981635`,0.017186525396075035`]}],Association[
"MeanCrossEntropy" -> Around[0.2563280387938678`,0.07125405884051224`],"StandardDeviation" -> Around[
0.3055343528966801`,0.02088691120333508`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 100,"ModelMemory" -> 17536,"ModelUtility" -> 0.47896048782912093`,"TrainingSize" -> 806,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 4667936,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.2563280387938678`,0.07125405884051224`]},"StandardDeviationHistory" -> {Around[
0.3055343528966801`,0.02088691120333508`]}],Association["MeanCrossEntropy" -> Around[
0.4531107410450785`,0.033607292743332094`],"StandardDeviation" -> Around[0.302648745261845`,
0.030441969667914025`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4821122301429822`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.4531107410450785`,0.023763944596131573`]},
"StandardDeviationHistory" -> {Around[0.302648745261845`,0.0215257231848572`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.8370820458389797`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.302648745261845`,0.030441969667914025`],
"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],"Index" -> 9],Association[
"Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1.`*^-6],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.9279530092244757`,0.5493114292448106`],
"StandardDeviation" -> Around[0.43691529099814747`,0.09018875959737602`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.09440825479542414`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.9279530092244757`,0.3884218366022799`]},"StandardDeviationHistory" -> {Around[
0.43691529099814747`,0.0637730834981079`]}],Association["MeanCrossEntropy" -> Around[
0.215747627735556`,0.08816729884710449`],"StandardDeviation" -> Around[0.2963474254217402`,
0.026185617036915437`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5055520586410381`,"TrainingSize" -> 200,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.215747627735556`,0.062343694893688455`]},"StandardDeviationHistory" -> {Around[
0.2963474254217402`,0.018516027376356894`]}],Association["MeanCrossEntropy" -> Around[
0.24425687269952429`,0.04073552434477672`],"StandardDeviation" -> Around[0.3029481091947951`,
0.0120531540754785`],"EvaluationTime" -> 2.511886431509579`*^-5,"TestSize" -> 400,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4931151838581205`,"TrainingSize" -> 806,
"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407610.6666666666`,"ExperimentCount" -> 2,
"MeanCrossEntropyHistory" -> {Around[0.2434585779054606`,0.04975873272275445`],Around[
0.24505516749358797`,0.07089225693081318`]},"StandardDeviationHistory" -> {Around[
0.3018452591761167`,0.014748367315817058`],Around[0.30405095921347347`,0.02065460745087785`]}],Association[
"MeanCrossEntropy" -> Around[4.434782507898643`*^13,8.659287116044047`*^12],"StandardDeviation" -> Around[
0.34422399548516264`,0.03238843990109296`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.354666508606692`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75576,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4.434782507898643`*^13,6.123040639996048`*^12]},
"StandardDeviationHistory" -> {Around[0.34422399548516264`,0.022902085486115786`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.34422399548516264`,0.03238843990109296`],
"TrainingMemory" -> 75576,"TrainingTime" -> 0.08793213558397794`],"Index" -> 10],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1000000.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.24903238612930495`,0.06073998575090398`],
"StandardDeviation" -> Around[0.30337597327965576`,0.020529857098590468`],"EvaluationTime" -> 3.1622776601683795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48618609043998373`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135800,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24903238612930495`,0.04294965581363847`]},
"StandardDeviationHistory" -> {Around[0.30337597327965576`,0.014516801171204097`]}],Association[
"MeanCrossEntropy" -> Around[0.24814131360013858`,0.03494147241512783`],"StandardDeviation" -> Around[
0.3035659563553433`,0.010639973862623555`],"EvaluationTime" -> 1.2215516488234317`*^-4,
"TestSize" -> 400,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4920179272594287`,
"TrainingSize" -> 806,"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407610.6666666666`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.24699937509873346`,
0.04921659892664419`],Around[0.24928325210154367`,0.04956182639058635`]},"StandardDeviationHistory" -> {Around[
0.3032267721508669`,0.015013516033579402`],Around[0.30390514055981965`,0.01506571529365706`]}],Association[
"MeanCrossEntropy" -> Around[0.6836681706929596`,0.014256775746603018`],"StandardDeviation" -> Around[
0.3051588205292711`,0.019940583254689087`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.48078577731511496`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6836681706929596`,0.010081062808278897`]},
"StandardDeviationHistory" -> {Around[0.3051588205292711`,0.01410012164020557`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.3051588205292711`,0.019940583254689087`],
"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],"Index" -> 11],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0.01`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.21573646599941593`,0.08815464334798948`],
"StandardDeviation" -> Around[0.2963434843660333`,0.026182158074836166`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.5055674204482835`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.21573646599941593`,0.06233474610444493`]},
"StandardDeviationHistory" -> {Around[0.2963434843660333`,0.018513581520814774`]}],Association[
"MeanCrossEntropy" -> Around[0.24425975555882973`,0.04073539059426792`],"StandardDeviation" -> Around[
0.3029488802815528`,0.012053151847316956`],"EvaluationTime" -> 2.511886431509579`*^-5,
"TestSize" -> 400,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.49311266013748645`,
"TrainingSize" -> 806,"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407632.`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.2434582546120504`,0.049758747103273986`],Around[
0.24506125650560906`,0.07089117775540078`]},"StandardDeviationHistory" -> {Around[
0.30184516127093675`,0.014748375630288673`],Around[0.3040525992921689`,0.02065416616349073`]}],Association[
"MeanCrossEntropy" -> Around[444605.8002162325`,86801.01238774635`],"StandardDeviation" -> Around[
0.34415133167665135`,0.032377280852051105`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.3548800907487779`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75448,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[444605.8002162325`,61377.58447323296`]},"StandardDeviationHistory" -> {Around[
0.34415133167665135`,0.022894194846866694`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.5118864315095795`*^-5,"ModelMemory" -> 17536,"StandardDeviation" -> Around[
0.34415133167665135`,0.032377280852051105`],"TrainingMemory" -> 75448,"TrainingTime" -> 0.08793213558397794`],
"Index" -> 12]],TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[
TypeSystem`Enumeration["LinearRegression"]],TypeSystem`Assoc[TypeSystem`AnyType,TypeSystem`Struct[
{"Value"},{TypeSystem`AnyType}],4]}],TypeSystem`Struct[{"Experiments","PredictedPerformances","Index"},
{TypeSystem`Vector[TypeSystem`Struct[{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Real],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Real],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,TypeSystem`AnyLength],TypeSystem`Vector[
TypeSystem`AnyType,TypeSystem`AnyLength]}],TypeSystem`AnyLength],TypeSystem`Struct[
{"EvaluationTime","ModelMemory","StandardDeviation","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[
Real]}],TypeSystem`Atom[Integer]}],12],Association[]],"MaxTrainingSize" -> 1007,"PreprocessorEvaluationTime" -> 6.3515625`*^-6,
"PreprocessorMemory" -> 171264,"InputDimension" -> 18,"OutputDimension" -> 1,"BaselineLogProbability" -> -1.4189385332046727`,
"VariableBudget" -> True,"CheckpointingInfo" -> Association["Checkpointing" -> False],
"UserStop" -> False,"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[
{Association["TrainingSizes" -> 10,"TimeBudgets" -> 0.13719999999999996`,"ElapsedTimes" -> 0.27713299999999996`,
"ExperimentCounts" -> 12],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.19600000000000006`,
"ElapsedTimes" -> 0.20008599999999999`,"ExperimentCounts" -> 10],Association["TrainingSizes" -> 200,
"TimeBudgets" -> 0.27999999999999997`,"ElapsedTimes" -> 0.295442`,"ExperimentCounts" -> 12],Association[
"TrainingSizes" -> 806,"TimeBudgets" -> 0.4`,"ElapsedTimes" -> 0.416925`,"ExperimentCounts" -> 19]},
TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 8800802888778519852],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 5154301130884246007],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 1158318149837664758],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 4658431380324298604],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 6612385611817534699],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 1283109836901802735],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 6319261172030616397],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 9035757723250717457],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 2088918241571526895],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 5735735062414845938],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 2753064490390060301],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 9135149779559159253],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 4013711609810789428]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 2.082795`,"MaxTrainingMemory" -> 15406840,"DataMemory" -> 2080416,
"FunctionMemory" -> 424824,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,5,36.765613`8.318016790782782},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]],Selectable -> False,Editable -> False,
SelectWithContents -> True],StandardForm],"Output",CellLabel -> "Out[120]= ",ExpressionUUID -> "021bc327-7c35-4e10-a2bf-16e3813b6da8"]},
Open],ExpressionUUID -> "86ad6257-7044-4d83-a165-ad90e3298bf9"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[","pESG","]"}]],"Input",CellLabel -> "In[121]:= ",
ExpressionUUID -> "e7a420ac-a03a-4daf-9d1a-6059530ce6b1"],Cell[
BoxData[InterpretationBox[
TagBox[StyleBox[FrameBox[GridBox[{{ItemBox[FrameBox[StyleBox["\"Predictor information\"",
12,"SuggestionsBarText",StripOnInput -> False],FrameMargins -> {{10,5},{-4,2}},FrameStyle -> None,
StripOnInput -> False],ItemSize -> {Automatic,1},Alignment -> {Left,Bottom},FrameStyle -> Opacity[
0.1`],Background -> RGBColor[0.96`,0.96`,0.96`],Frame -> {{False,False},{True,False}},
StripOnInput -> False]},{ItemBox[TagBox[FrameBox[TagBox[GridBox[{{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Data type\>",ExpressionUUID -> "9662d56e-bcdf-47dc-926b-b1b519e842d7"],
TextCell["Data type"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[
TooltipBox[TemplateBox[{InterpretationBox[Cell[
"\<Mixed\>",ExpressionUUID -> "47a2c7f4-3738-47c3-93a0-6d949a65602d"],
TextCell["Mixed"]],StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},"RowDefault"],
GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Standard deviation\>",ExpressionUUID -> "f169ce63-3f4a-4f7d-80fa-7e52d9759e02"],
TextCell["Standard deviation"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[
TooltipBox[TemplateBox[{"0.2925269205981634868`3.",StyleBox[TemplateBox[{"\" \[PlusMinus] \"","0.0243054173051989453`2."},
"RowDefault"],{10,Opacity[0.5`]},StripOnInput -> False]},"RowDefault"],TemplateBox[
{"\"95% confidence interval: [\"","0.2439160859877655962`3.","\", \"","0.3411377552085613774`3.","\"]\""},
"RowDefault"],TooltipStyle -> {}],Function[Annotation[Slot[1],Row[{"95% confidence interval: [",0.2439160859877655962`3.,", ",0.3411377552085613774`3.,"]"}],
"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Method\>",ExpressionUUID -> "ae2c52d9-482c-41cb-9ee4-bdb7235defa9"],TextCell[
"Method"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[TooltipBox[
InterpretationBox[Cell[
"\<LinearRegression\>",ExpressionUUID -> "4766c0be-876b-44de-9a8a-f297fb90256a"],
TextCell["LinearRegression"]],StyleBox[TagBox[GridBox[{{"\"L1Regularization\"","0"},{"\"L2Regularization\"","100.`"},{"\"OptimizationMethod\"","\"NormalEquation\""}},
GridBoxAlignment -> {"Columns" -> {{Left}}},AutoDelete -> False,GridBoxBackground -> {"Columns" -> {{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},"Rows" -> {{None}}},GridBoxFrame -> {"Columns" -> {{True}},"Rows" -> {{True}}},
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},GridBoxSpacings -> {"Columns" -> {{1}},"Rows" -> {{1}}},
FrameStyle -> GrayLevel[0.84`]],"Grid"],FontFamily -> "Verdana",StripOnInput -> False]],
Function[Annotation[Slot[1],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100.`},{"OptimizationMethod","NormalEquation"}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"],"Tooltip"]]]},{TemplateBox[
{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Single evaluation time\>",
ExpressionUUID -> "84b695ff-188f-4e34-b92a-7c73d5ff3371"],TextCell["Single evaluation time"]],
GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{"11.6`",RowBox[
{"\"ms\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"example\""}],"milliseconds per example",FractionBox[
"\"Milliseconds\"","\"Examples\""]},"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Batch evaluation speed\>",ExpressionUUID -> "5545c63d-f4d8-43fe-b3f6-736936e167e1"],
TextCell["Batch evaluation speed"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"3.37`",RowBox[{"\"examples\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"ms\""}],"examples per millisecond",FractionBox[
"\"Examples\"","\"Milliseconds\""]},"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[TagBox[TooltipBox[InterpretationBox[Cell[
"\<Loss\>",ExpressionUUID -> "a2d89f72-91d2-46d9-bb54-31775cc8b453"],
TextCell["Loss"]],"\"Mean cross entropy\"",LabelStyle -> "TextStyling"],Function[
Annotation[Slot[1],"Mean cross entropy","Tooltip"]]],GrayLevel[0.4`],StripOnInput -> False]},
"RowDefault"],TagBox[TooltipBox[TemplateBox[{"0.203913296248366932`3.",StyleBox[TemplateBox[
{"\" \[PlusMinus] \"","0.0786237994776774196`2."},"RowDefault"],{10,Opacity[0.5`]},
StripOnInput -> False]},"RowDefault"],TemplateBox[{"\"95% confidence interval: [\"","0.0466656972930120928`3.","\", \"","0.3611608952037217435`3.","\"]\""},
"RowDefault"],TooltipStyle -> {}],Function[Annotation[Slot[1],Row[{"95% confidence interval: [",0.0466656972930120928`3.,", ",0.3611608952037217435`3.,"]"}],
"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Model memory\>",ExpressionUUID -> "a3519770-56f3-4422-95b4-099274e83417"],
TextCell["Model memory"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"427.`","\"kB\"","kilobytes","\"Kilobytes\""},"Quantity",SyntaxForm -> Mod]},{TemplateBox[
{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Training examples used\>",
ExpressionUUID -> "49dba9b4-65de-4615-8420-e7ed7cb158e6"],TextCell["Training examples used"]],
GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{"1007","\"examples\"","examples","\"Examples\""},
"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[
InterpretationBox[Cell[
"\<Training time\>",ExpressionUUID -> "15d4de94-8d4e-4f66-8387-402d7c88f994"],
TextCell["Training time"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"2.08`","\"s\"","seconds","\"Seconds\""},"Quantity",SyntaxForm -> Mod]},{ItemBox[
DynamicModuleBox[{Set[MachineLearning`file12Panel`PackagePrivate`pos$$,1]},DynamicBox[
ToBoxes[Show[Part[{Graphics[{{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[PointSize[
0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.302585092994046`,-1.203608844437338`},{3.6888794541139363`,-1.221356306356067`},{5.298317366548036`,-1.2291985803122625`},{6.692083742506628`,-1.1956782496758747`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,-1.203608844437338`}},{{3.6888794541139363`,-1.221356306356067`}},{{5.298317366548036`,-1.2291985803122625`}},{{6.692083742506628`,-1.1956782496758747`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,-1.3229536493675433`},{2.302585092994046`,-1.0970006671556076`},{2.302585092994046`,-1.0970006671556076`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,-1.290549808173317`},{3.6888794541139363`,-1.156642266693066`},{3.6888794541139363`,-1.156642266693066`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,-1.3159421350138167`},{5.298317366548036`,-1.1493825475361805`},{5.298317366548036`,-1.1493825475361805`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,-1.2315055720910484`},{6.692083742506628`,-1.1610902506267156`},{6.692083742506628`,-1.1610902506267156`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,-1.231060820903173`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{-1.231060820903173`,-1.1956782496758747`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}],Graphics[{{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.302585092994046`,0.5147429089591009`},{3.6888794541139363`,0.2483973569263034`},{5.298317366548036`,0.20391329624836693`},{6.692083742506628`,0.24474031008153924`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,0.5147429089591009`}},{{3.6888794541139363`,0.2483973569263034`}},{{5.298317366548036`,0.20391329624836693`}},{{6.692083742506628`,0.24474031008153924`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,0.23667355085561986`},{2.302585092994046`,0.42678848049896845`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,0.20379957603313714`},{3.6888794541139363`,0.2929951378194697`},{3.6888794541139363`,0.2929951378194697`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,0.1252894967706895`},{5.298317366548036`,0.28253709572604435`},{5.298317366548036`,0.28253709572604435`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,0.20962551034021154`},{6.692083742506628`,0.27985510982286693`},{6.692083742506628`,0.27985510982286693`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,0.5147429089591009`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}],Graphics[{{{},{{{},{},Tooltip[{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.9279488073188086`},{5.298317366548036`,0.21574761783292873`},{6.692083742506628`,0.24345857706142607`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.880722`,0.611041`,0.142051`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.5147429089591009`},{3.6888794541139363`,0.5865730181544999`},{5.298317366548036`,0.206605640704205`},{6.692083742506628`,0.24650192987182526`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.560181`,0.691569`,0.194885`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6805983999036436`},{3.6888794541139363`,0.34016037384510955`},{5.298317366548036`,0.24759399043378263`},{6.692083742506628`,0.24474031008153924`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.922526`,0.385626`,0.209179`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.9279064488159402`},{5.298317366548036`,0.21574751534035685`},{6.692083742506628`,0.2500066630246117`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.6142719099991583`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.528488`,0.470624`,0.701351`],AbsoluteThickness[1.6`]],Line[{{3.6687500774829576`,1.377874558155775`},{3.6888794541139363`,0.6254785996172716`},{5.298317366548036`,0.2145946247494457`},{6.692083742506628`,0.24453719692783565`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.8503398874989481`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.772079`,0.431554`,0.102387`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.8831644899852518`},{5.298317366548036`,0.21563546017132112`},{6.692083742506628`,0.2434553857152781`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.08640786499873876`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.363898`,0.618501`,0.782349`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6833879825741994`},{3.6888794541139363`,0.34199685491865117`},{5.298317366548036`,0.2488856610152403`},{6.692083742506628`,0.24702075091797981`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.3224758424985268`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
1,0.75`,0],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6538831483696669`},{3.6888794541139363`,0.3234479300365895`},{5.298317366548036`,0.27822524137647076`},{6.692083742506628`,0.24836916157082206`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.5585438199983166`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.647624`,0.37816`,0.614037`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.4531107410450785`},{3.6888794541139363`,0.2483973569263034`},{5.298317366548036`,0.20391329624836693`},{6.692083742506628`,0.2563280387938678`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.7946117974981064`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.571589`,0.586483`,0.`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.9279530092244757`},{5.298317366548036`,0.215747627735556`},{6.692083742506628`,0.24425687269952429`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.030679774997896203`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],
RGBColor[0.915`,0.3325`,0.2125`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6836681706929596`},{5.298317366548036`,0.24903238612930495`},{6.692083742506628`,0.24814131360013858`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.266747752497686`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.40082222609352647`,0.5220066643438841`,0.85`],AbsoluteThickness[1.6`]],Line[{{5.298317366548036`,0.21573646599941593`},{6.692083742506628`,0.24425975555882973`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]},{Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,0.9279488073188086`}},{{5.298317366548036`,0.21574761783292873`}},{{6.692083742506628`,0.24345857706142607`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.880722`,0.611041`,0.142051`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.5147429089591009`}},{{3.6888794541139363`,0.5865730181544999`}},{{5.298317366548036`,0.206605640704205`}},{{6.692083742506628`,0.24650192987182526`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.560181`,0.691569`,0.194885`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.6805983999036436`}},{{3.6888794541139363`,0.34016037384510955`}},{{5.298317366548036`,0.24759399043378263`}},{{6.692083742506628`,0.24474031008153924`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.922526`,0.385626`,0.209179`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,0.9279064488159402`}},{{5.298317366548036`,0.21574751534035685`}},{{6.692083742506628`,0.2500066630246117`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.528488`,0.470624`,0.701351`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,52.44239741299497`}},{{3.6888794541139363`,0.6254785996172716`}},{{5.298317366548036`,0.2145946247494457`}},{{6.692083742506628`,0.24453719692783565`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.772079`,0.431554`,0.102387`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,0.8831644899852518`}},{{5.298317366548036`,0.21563546017132112`}},{{6.692083742506628`,0.2434553857152781`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.363898`,0.618501`,0.782349`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.6833879825741994`}},{{3.6888794541139363`,0.34199685491865117`}},{{5.298317366548036`,0.2488856610152403`}},{{6.692083742506628`,0.24702075091797981`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[1,0.75`,0],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{2.302585092994046`,0.6538831483696669`}},{{3.6888794541139363`,0.3234479300365895`}},{{5.298317366548036`,0.27822524137647076`}},{{6.692083742506628`,0.24836916157082206`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.647624`,0.37816`,0.614037`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.4531107410450785`}},{{3.6888794541139363`,0.2483973569263034`}},{{5.298317366548036`,0.20391329624836693`}},{{6.692083742506628`,0.2563280387938678`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.571589`,0.586483`,0.`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{3.6888794541139363`,0.9279530092244757`}},{{5.298317366548036`,0.215747627735556`}},{{6.692083742506628`,0.24425687269952429`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.915`,0.3325`,0.2125`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{2.302585092994046`,0.6836681706929596`}},{{5.298317366548036`,0.24903238612930495`}},{{6.692083742506628`,0.24814131360013858`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.40082222609352647`,0.5220066643438841`,
0.85`],AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",
FontSize -> 5],{0.`,0.`}],{{{5.298317366548036`,0.21573646599941593`}},{{6.692083742506628`,0.24425975555882973`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,1.377874558155775`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}]},MachineLearning`file12Panel`PackagePrivate`pos$$],
PlotLabel -> Grid[{{Button[Deploy[MouseAppearance[Mouseover[Graphics[{GrayLevel[0.25`],Line[
{{0,0.8`},{-1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},
BaselinePosition -> Scaled[0.1`]],Graphics[{RGBColor[0.27450980392156865`,0.5372549019607843`,
0.792156862745098`],Line[{{0,0.8`},{-1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},
ImagePadding -> {{1,1},{1,1}},BaselinePosition -> Scaled[0.1`]]],"LinkHand"]],Set[
MachineLearning`file12Panel`PackagePrivate`pos$$,Max[Plus[MachineLearning`file12Panel`PackagePrivate`pos$$,
-1],1]],Appearance -> "Frameless"],Part[{"Standard deviation",Tooltip["Learning curve",
"mean cross entropy for best algorithm at each training size"],Tooltip["Learning curves for all algorithms",
"mean cross entropy at each training size"]},MachineLearning`file12Panel`PackagePrivate`pos$$],Button[
Deploy[MouseAppearance[Mouseover[Graphics[{GrayLevel[0.25`],Line[{{0,0.8`},{1,0},{0,-0.8`}}]},
ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},BaselinePosition -> Scaled[
0.1`]],Graphics[{RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`],Line[
{{0,0.8`},{1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},
BaselinePosition -> Scaled[0.1`]]],"LinkHand"]],Set[MachineLearning`file12Panel`PackagePrivate`pos$$,
Min[Plus[MachineLearning`file12Panel`PackagePrivate`pos$$,1],Length[{Graphics[{{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,-1.203608844437338`},{3.6888794541139363`,-1.221356306356067`},{5.298317366548036`,-1.2291985803122625`},{6.692083742506628`,-1.1956782496758747`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,-1.203608844437338`}},{{3.6888794541139363`,-1.221356306356067`}},{{5.298317366548036`,-1.2291985803122625`}},{{6.692083742506628`,-1.1956782496758747`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,-1.3229536493675433`},{2.302585092994046`,-1.0970006671556076`},{2.302585092994046`,-1.0970006671556076`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,-1.290549808173317`},{3.6888794541139363`,-1.156642266693066`},{3.6888794541139363`,-1.156642266693066`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,-1.3159421350138167`},{5.298317366548036`,-1.1493825475361805`},{5.298317366548036`,-1.1493825475361805`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,-1.2315055720910484`},{6.692083742506628`,-1.1610902506267156`},{6.692083742506628`,-1.1610902506267156`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,-1.231060820903173`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{-1.231060820903173`,-1.1956782496758747`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}],Graphics[{{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.302585092994046`,0.5147429089591009`},{3.6888794541139363`,0.2483973569263034`},{5.298317366548036`,0.20391329624836693`},{6.692083742506628`,0.24474031008153924`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,0.5147429089591009`}},{{3.6888794541139363`,0.2483973569263034`}},{{5.298317366548036`,0.20391329624836693`}},{{6.692083742506628`,0.24474031008153924`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,0.23667355085561986`},{2.302585092994046`,0.42678848049896845`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,0.20379957603313714`},{3.6888794541139363`,0.2929951378194697`},{3.6888794541139363`,0.2929951378194697`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,0.1252894967706895`},{5.298317366548036`,0.28253709572604435`},{5.298317366548036`,0.28253709572604435`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,0.20962551034021154`},{6.692083742506628`,0.27985510982286693`},{6.692083742506628`,0.27985510982286693`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,0.5147429089591009`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}],Graphics[{{{},{{{},{},Tooltip[{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.9279488073188086`},{5.298317366548036`,0.21574761783292873`},{6.692083742506628`,0.24345857706142607`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.880722`,0.611041`,0.142051`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.5147429089591009`},{3.6888794541139363`,0.5865730181544999`},{5.298317366548036`,0.206605640704205`},{6.692083742506628`,0.24650192987182526`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.560181`,0.691569`,0.194885`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6805983999036436`},{3.6888794541139363`,0.34016037384510955`},{5.298317366548036`,0.24759399043378263`},{6.692083742506628`,0.24474031008153924`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.922526`,0.385626`,0.209179`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.9279064488159402`},{5.298317366548036`,0.21574751534035685`},{6.692083742506628`,0.2500066630246117`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.6142719099991583`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.528488`,0.470624`,0.701351`],AbsoluteThickness[1.6`]],Line[{{3.6687500774829576`,1.377874558155775`},{3.6888794541139363`,0.6254785996172716`},{5.298317366548036`,0.2145946247494457`},{6.692083742506628`,0.24453719692783565`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.8503398874989481`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.772079`,0.431554`,0.102387`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.8831644899852518`},{5.298317366548036`,0.21563546017132112`},{6.692083742506628`,0.2434553857152781`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.08640786499873876`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.363898`,0.618501`,0.782349`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6833879825741994`},{3.6888794541139363`,0.34199685491865117`},{5.298317366548036`,0.2488856610152403`},{6.692083742506628`,0.24702075091797981`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.3224758424985268`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
1,0.75`,0],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6538831483696669`},{3.6888794541139363`,0.3234479300365895`},{5.298317366548036`,0.27822524137647076`},{6.692083742506628`,0.24836916157082206`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.5585438199983166`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.647624`,0.37816`,0.614037`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.4531107410450785`},{3.6888794541139363`,0.2483973569263034`},{5.298317366548036`,0.20391329624836693`},{6.692083742506628`,0.2563280387938678`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.7946117974981064`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.571589`,0.586483`,0.`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,0.9279530092244757`},{5.298317366548036`,0.215747627735556`},{6.692083742506628`,0.24425687269952429`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.030679774997896203`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],
RGBColor[0.915`,0.3325`,0.2125`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6836681706929596`},{5.298317366548036`,0.24903238612930495`},{6.692083742506628`,0.24814131360013858`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.266747752497686`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.40082222609352647`,0.5220066643438841`,0.85`],AbsoluteThickness[1.6`]],Line[{{5.298317366548036`,0.21573646599941593`},{6.692083742506628`,0.24425975555882973`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]},{Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,0.9279488073188086`}},{{5.298317366548036`,0.21574761783292873`}},{{6.692083742506628`,0.24345857706142607`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.880722`,0.611041`,0.142051`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.5147429089591009`}},{{3.6888794541139363`,0.5865730181544999`}},{{5.298317366548036`,0.206605640704205`}},{{6.692083742506628`,0.24650192987182526`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.560181`,0.691569`,0.194885`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.6805983999036436`}},{{3.6888794541139363`,0.34016037384510955`}},{{5.298317366548036`,0.24759399043378263`}},{{6.692083742506628`,0.24474031008153924`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.922526`,0.385626`,0.209179`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,0.9279064488159402`}},{{5.298317366548036`,0.21574751534035685`}},{{6.692083742506628`,0.2500066630246117`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.528488`,0.470624`,0.701351`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,52.44239741299497`}},{{3.6888794541139363`,0.6254785996172716`}},{{5.298317366548036`,0.2145946247494457`}},{{6.692083742506628`,0.24453719692783565`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.772079`,0.431554`,0.102387`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,0.8831644899852518`}},{{5.298317366548036`,0.21563546017132112`}},{{6.692083742506628`,0.2434553857152781`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.363898`,0.618501`,0.782349`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.6833879825741994`}},{{3.6888794541139363`,0.34199685491865117`}},{{5.298317366548036`,0.2488856610152403`}},{{6.692083742506628`,0.24702075091797981`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[1,0.75`,0],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{2.302585092994046`,0.6538831483696669`}},{{3.6888794541139363`,0.3234479300365895`}},{{5.298317366548036`,0.27822524137647076`}},{{6.692083742506628`,0.24836916157082206`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.647624`,0.37816`,0.614037`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.4531107410450785`}},{{3.6888794541139363`,0.2483973569263034`}},{{5.298317366548036`,0.20391329624836693`}},{{6.692083742506628`,0.2563280387938678`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",100.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.571589`,0.586483`,0.`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{3.6888794541139363`,0.9279530092244757`}},{{5.298317366548036`,0.215747627735556`}},{{6.692083742506628`,0.24425687269952429`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.915`,0.3325`,0.2125`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{2.302585092994046`,0.6836681706929596`}},{{5.298317366548036`,0.24903238612930495`}},{{6.692083742506628`,0.24814131360013858`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.40082222609352647`,0.5220066643438841`,
0.85`],AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",
FontSize -> 5],{0.`,0.`}],{{{5.298317366548036`,0.21573646599941593`}},{{6.692083742506628`,0.24425975555882973`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,1.377874558155775`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}]}]]],Appearance -> "Frameless"]}},
Alignment -> {Center,Baseline},ItemSize -> {{3,20,3},{2}}]],StandardForm]],RuleDelayed[
DynamicModuleValues,{}],ExpressionUUID -> "f0809ac8-7a36-4ab4-a624-a31683472150"],
Alignment -> Center,StripOnInput -> False],"\[SpanFromLeft]"}},AutoDelete -> False,
GridBoxDividers -> {"Columns" -> {False,{Opacity[0.15`]},False}},GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
ColumnWidths -> {Automatic,Automatic},ColumnsEqual -> False,ColumnAlignments -> {Right,Left},
ColumnSpacings -> {1.6`,2.5`},RowSpacings -> 2],"Grid"],FrameMargins -> {{10,10},{10,5}},
FrameStyle -> None,StripOnInput -> False],Deploy,DefaultBaseStyle -> "Deploy"],BaseStyle -> {FontWeight -> "Light",FontSize -> 11,FontFamily -> "Roboto",NumberMarks -> False,Deployed -> False},
Alignment -> Center,StripOnInput -> False]}},GridBoxAlignment -> {"Columns" -> {{Left}}},
DefaultBaseStyle -> "Column",GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
ColumnWidths -> Automatic,ColumnAlignments -> Left,RowLines -> False,RowSpacings -> {2,1}],
Background -> GrayLevel[1],FrameMargins -> {{0,0},{0,0}},FrameStyle -> GrayLevel[
0.85`],RoundingRadius -> 5,StripOnInput -> False],LineBreakWithin -> False,StripOnInput -> False],
Deploy,DefaultBaseStyle -> "Deploy"],MachineLearning`MLInformationObject[PredictorFunction[
Association["ExampleNumber" -> 1007,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 1007,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 7039037788529425936,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 1436984763516442639,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 4935565381240052860]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-1.8557395047893887`*^-4,0.9883744206846383`,0.14829555426122099`,0.02297298334490654`,-0.021240101047951685`,0.004441735061481938`,0.00640547147448637`,-0.006434810146863741`,0.0064104637159583516`,0.001003717899411205`,1.5924695471878101`*^-4,-7.58035068259314`*^-4,7.946700282965741`*^-4},{-7.67159351371406`*^-6,0.012162222702450693`,0.013071097850151533`,-0.6552865469461218`,-0.051271821391373144`,-0.02940183103273892`,-1.427671272302388`*^-4,-0.004194114545300663`,-0.00935486405686776`,-0.3964797005030117`,-0.0429879579895007`,-0.09689298636514285`,0.6310705253971389`},{-4.698605689082378`*^-6,0.01183612382180464`,0.012042627514490268`,-0.5912666816641119`,-0.05005934413846577`,-0.03032686229504157`,-0.001449638925331002`,-0.004277555623736224`,0.006496566933392749`,-0.23938095871132964`,-0.0351564504758755`,0.0468840264502437`,-0.7654364769581903`},{1.9731383095129947`*^-5,-0.007258289166954043`,0.01832837907140844`,0.016732367019794518`,0.013341468643799594`,-0.5325748911615641`,-0.08163896602934263`,-0.41484258622494136`,0.6812655716589838`,0.020775113014791874`,0.14367265845555038`,-0.22679344484788203`,-0.01125299070618905`},{2.816097091681909`*^-6,0.003705380972339814`,0.0027977750705052424`,8.372938794488826`*^-4,0.052567711413827656`,-0.33595991401233155`,-0.013875552209488466`,0.04704523689116493`,-0.22468708229570364`,0.1601050998862639`,-0.7805989777610134`,-0.4419544285487304`,-0.03410453360315299`},{6.2371199040981594`*^-6,0.001809779857626149`,0.025211033649630153`,0.0073836227167722954`,0.07486633096612477`,-0.5397199938475072`,-0.025429202973445964`,0.07811979985823411`,-0.06796182044502787`,-0.030122323726854153`,-0.2015710985721824`,0.8021254435889257`,0.0780533492797489`},{1.0970570589503664`*^-6,0.0019240633790038324`,0.0046930403696330775`,0.0020804530237118414`,0.005617498677537646`,-0.06124132808561232`,0.05506538358045386`,0.8771327267262345`,0.4648183628964002`,-0.004326849730147628`,-0.0062900090134989034`,-0.0875307220538463`,-0.004224702964404554`},{-1.0661791342658116`*^-5,0.008208330598447765`,0.005639468077853123`,-0.46246969365344437`,-0.02728900742220981`,0.027464329023041054`,0.003520727028383058`,0.007883238512992169`,0.0157907812467474`,0.8707098833000042`,0.11226057093612901`,0.07835143649620191`,0.08557247657600799`},{9.316018827872233`*^-6,0.0038909620210056954`,0.026489073778518973`,0.0062489223166789865`,0.08256510491176064`,-0.5405500714969758`,0.07983342503774747`,0.2004081440760438`,-0.5075349440509056`,-0.012785239958328264`,0.5577512059425759`,-0.2893931076907711`,-0.033256633254031887`},{-3.245216066552585`*^-6,-0.008129426169464335`,0.002146209997489204`,0.0026577586661059352`,-0.01727401450937664`,-0.017081263030592465`,0.9913730523313671`,-0.09597861876649479`,0.0654696268057684`,0.0011559452411665741`,-0.04941359242917056`,0.023776591804597392`,0.0022404396736638394`},{2.2466343005350333`*^-4,0.14817838201880595`,-0.9876305352635909`,-0.012559890797028572`,-0.023362224901808403`,-0.04191048960293024`,0.002979189935418778`,0.0033571820668867143`,-0.0011378590681853486`,-0.0030030639780491844`,0.009640382150114965`,0.006733809240009`,5.180541807677981`*^-4},{2.7102262157216494`*^-5,0.025478264311716455`,-0.023215403672903107`,-0.07780677421321192`,0.9886507802228061`,0.10791619719542726`,0.014331077795648607`,-0.02649189407698267`,0.04917894333149045`,-0.014098014989317273`,0.006744004277503196`,-0.009446462468719045`,-0.004743142039059076`},{0.9999999568124154`,1.4972895524847864`*^-4,2.494787191480495`*^-4,-3.972737188857026`*^-6,-2.8116771505403864`*^-5,2.7108379599476546`*^-5,4.382209705570634`*^-6,3.226346005619551`*^-6,-7.715443852626172`*^-6,5.814659115834973`*^-6,-6.34601359827671`*^-6,2.500601350876403`*^-6,2.469795989612057`*^-6}},
"Precisions" -> {2.8658986648380616`*^-4,18.66023183054173`,25.461324072156554`,194.38872339006073`,273.44358621630687`,313.5035116384137`,1006.6961460309421`,1343.315859900595`,2163.0557354715334`,2541.739278883981`,4612.073898855507`,7534.556958635849`,25482.514512008882`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499277`,0.009146984843098319`,0.008662863386295936`,0.03201969057497516`,0.4760999158331675`,0.30155210090069506`,0.2487729478291958`,0.006042477192651441`,0.3815092675491559`,0.0015480930516385306`,0.27875878701886797`,0.06452104640019861`,113.23634558093346`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5851818833362818341]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3398064305660113545]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3398064305660113545]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.236528`,"MaxTrainingMemory" -> 8943960,"DataMemory" -> 353280,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,5,35.027895`8.296989018805315},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8783065634782469`,0.8783065634782469`,0.9889029585098147`,1.0086351796697375`,1.1359356704196353`,1.139048124882747`,1.1602185953213477`,1.1759352769585245`,1.1868678098123036`,1.252429135408372`,1.3694632187501294`},
"LeftBoundary" -> 0.9889029585098147`,"LeftScale" -> 0.05529819751578391`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-14.684465293174117`,0.5760096371792968`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 5043419960004123664]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 9162135246989219361]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["Standardize",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Mean" -> {0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8128819341018390786]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{0.03972011059522629`,-0.15578825771808624`,-0.3032674193382263`,0.1697862148284912`,0.06928092241287231`,-0.12224914133548737`},{-0.3037623167037964`,0.2442009449005127`,-0.41829925775527954`,0.5183126926422119`,0.7185214161872864`,0.034876640886068344`},{1.11789870262146`,0.06451744586229324`,0.2761942148208618`,-0.21557849645614624`,-0.347463995218277`,-0.22760500013828278`},{-0.2731706202030182`,-0.8212507963180542`,1.0276328325271606`,0.11630996316671371`,-0.7739960551261902`,-0.5578123927116394`},{-0.2470545768737793`,-0.39912769198417664`,-0.20223714411258698`,-0.6258736848831177`,0.06271404772996902`,0.822462797164917`},{0.7651844024658203`,-0.607970654964447`,-0.1983891725540161`,0.09799265116453171`,0.0658055767416954`,0.3305623531341553`},{-0.3588855564594269`,0.15606559813022614`,0.21148431301116943`,-0.1649528592824936`,-0.32789114117622375`,0.5183995366096497`},{0.027751944959163666`,-0.1765281856060028`,0.2528044283390045`,0.29958608746528625`,0.2814983129501343`,-0.27091071009635925`},{0.4334915578365326`,0.21868975460529327`,0.3313189148902893`,0.15218040347099304`,0.6548845767974854`,0.02975352294743061`},{0.05514517053961754`,0.8787866234779358`,0.18280209600925446`,-0.6141870021820068`,0.5653268098831177`,0.2905510663986206`},{-0.23993176221847534`,-0.017175914719700813`,0.10568251460790634`,-0.24191078543663025`,-0.6953346133232117`,-0.2047688215970993`},{-0.7110679149627686`,-0.6357394456863403`,0.46429187059402466`,-0.173386812210083`,-0.4404087960720062`,0.1353435516357422`},{0.019231244921684265`,0.03258339688181877`,0.11384154111146927`,-0.20764970779418945`,-0.9780294895172119`,-0.0391814224421978`},{0.5275387763977051`,0.11234533041715622`,-0.7592102885246277`,0.6195807456970215`,-0.6660134196281433`,4.3285827268846333`*^-4},{-0.08919527381658554`,0.505937933921814`,-0.26045292615890503`,0.4190792739391327`,0.6030683517456055`,-0.24370768666267395`},{-0.361797958612442`,-0.11218204349279404`,-0.4293869137763977`,0.48013418912887573`,0.5854218602180481`,0.8115440011024475`},{-0.38054990768432617`,0.2130960375070572`,-0.39035171270370483`,-0.29974624514579773`,-0.4751039147377014`,0.1737474501132965`},{0.13729500770568848`,0.4861004650592804`,-0.14435075223445892`,-0.026394639164209366`,0.7842423319816589`,0.13296456634998322`},{0.8097424507141113`,-0.18874762952327728`,0.19114966690540314`,-0.6109498143196106`,-0.2629683315753937`,-0.27042651176452637`},{-0.9196298718452454`,-0.39173606038093567`,0.17258886992931366`,-0.6131251454353333`,0.5276080369949341`,0.75865638256073`}}]},
"Version" -> {12.3`,1},"ID" -> 2142446066226798798]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 983674003085461790]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Numerical"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 3605005846534147222]],MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.6880768016911611`},"StandardDeviation" -> {0.3037042673953065`},"Output" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3995372887227076068]],MachineLearning`MLProcessor["FromVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 1260058274441559957]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Numerical","Weight" -> 1],
"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]]},
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"ProbabilityPostprocessor" -> Identity,"InverseProcessorFunction" -> Function[Plus[
0.6880768016911611`,Times[0.3037042673953065`,Slot[1]]]],"ProcessorFunction" -> Function[
Plus[-2.2656145321644394`,Times[3.292676815431057`,Slot[1]]]],"Name" -> "value","Quantiles" -> {-2.2656145321644394`,1.0270622832666176`},
"Mean" -> 0.6880768016911618`],"LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit",
Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",Association[
"Index" -> "ESG controversy score","Order" -> {"ESG controversy score","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> Function[DiracDelta[
Plus[Slot[2],Times[-1,Slot[1]]]]],"Threshold" -> 0,"PerformanceGoal" -> Automatic,
"BatchProcessing" -> Automatic,"Model" -> Association["MeanFunction" -> LinearLayer[
Association["Type" -> "Linear","Arrays" -> Association["Weights" -> RawArray["Real32",
{{-0.08083596080541611`,0.006008992437273264`,0.022519906982779503`,0.010260670445859432`,-0.01822715625166893`,-0.050798773765563965`,0.008721869438886642`,-0.00657618697732687`,0.05296968296170235`,-0.029155757278203964`,0.018288714811205864`,0.01002486702054739`,-0.1338483691215515`,0.015766337513923645`,0.009851484559476376`,-0.027005024254322052`,-0.012284282594919205`,0.013767833821475506`}}],
"Biases" -> RawArray["Real32",{2.3203616321919567`*^-15}]],"Parameters" -> Association[
"OutputDimensions" -> {1},"$OutputSize" -> 1,"$InputSize" -> 18,"$InputDimensions" -> {18}],
"Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{18},NeuralNetworks`AtomT]],
"Outputs" -> Association["Output" -> NeuralNetworks`TensorT[{1},NeuralNetworks`RealT]]],
Association["Version" -> "12.3.3","Unstable" -> False]],"DistributionData" -> {NormalDistribution,0.9928350360632701`},
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Processors" -> {MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {0.1184867666470311`,0.2809487115277043`,0.0400053141560746`,-0.2608260774520184`,0.22593773912765394`,0.21223287467791893`,-8.047058065981256`*^-5,1.3513019747207265`*^-4,-2.015670226465343`*^-5,-9.92110551361689`*^-5,4.488341737872193`*^-5,1.3124912085903822`*^-4,9.506042326160281`*^-5,-1.642808025337896`*^-4,-1.485952642864705`*^-4,-1.6325571882185011`*^-4,-1.2197362124939765`*^-4,9.764157456449414`*^-5},
"StandardDeviation" -> {0.4383062344710174`,0.49329351983416825`,0.29864735238426976`,0.42841778893056337`,0.4646088125125342`,0.33276119544732735`,0.9999518469121118`,1.0000746705118084`,1.0001846512271124`,0.9998760059914594`,0.9998520974720879`,1.0001376742949344`,0.9997788828144927`,1.0001628065494985`,0.9999648925770828`,0.9999156148564674`,1.000005629070436`,0.9998453104735201`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 8970789242639911585]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LinearRegression","PostProcessor" -> MachineLearning`MLProcessor[
"Identity"],"Options" -> Association["L1Regularization" -> Association["Value" -> 0,
"Options" -> Association[]],"L2Regularization" -> Association["Value" -> 100.`,"Options" -> Association[]],
"OptimizationMethod" -> Association["Value" -> "NormalEquation","Options" -> Association[]],
MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"PanelCell" -> None,"TrainingFunction" -> Predict,"EMIterations" -> Missing["KeyAbsent",
"EMIterations"],"ProcessorEntropyShift" -> -1.1917008556781277`,"PreprocessingTime" -> 0.686704`6.288314570630775,
"LossName" -> "StandardDeviation","BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[
0.20391329624836693`,0.07862379947767742`],"StandardDeviation" -> Around[0.2925269205981635`,
0.024305417305198945`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5195647688776655`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20391329624836693`,0.055595421773317034`]},
"StandardDeviationHistory" -> {Around[0.2925269205981635`,0.017186525396075035`]},
"Configuration" -> {"LinearRegression","L1Regularization" -> 0,"L2Regularization" -> 100.`,"OptimizationMethod" -> Automatic,MaxIterations -> 30},
"FinalTrainingSize" -> 1007],TypeSystem`Struct[{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory","Configuration","FinalTrainingSize"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`Atom[
Integer]}],Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "LinearRegression",
"Options" -> Association["L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-5],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.7292843708874185`*^12,1.6296795673198625`*^12],"StandardDeviation" -> Around[0.6566326157238632`,
0.32920725337906953`],"EvaluationTime" -> 3.9810717055349695`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> -0.3680790737359322`,"TrainingSize" -> 10,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 249008,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.7292843708874185`*^12,1.1523574732130334`*^12]},
"StandardDeviationHistory" -> {Around[0.6566326157238632`,0.23278468128013802`]}],Association[
"MeanCrossEntropy" -> Around[0.9279488073188086`,0.5493064747990719`],"StandardDeviation" -> Around[
0.436914520447664`,0.09018807273846408`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.09441025043692153`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.9279488073188086`,0.38841833328010106`]},"StandardDeviationHistory" -> {Around[
0.436914520447664`,0.06377259781551355`]}],Association["MeanCrossEntropy" -> Around[
0.21574761783292873`,0.08816728818568591`],"StandardDeviation" -> Around[0.2963474219106709`,
0.0261856141350338`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5055520722075343`,"TrainingSize" -> 200,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.21574761783292873`,0.062343687354927076`]},"StandardDeviationHistory" -> {Around[
0.2963474219106709`,0.01851602532441671`]}],Association["MeanCrossEntropy" -> Around[
0.24345857706142607`,0.07036947465903425`],"StandardDeviation" -> Around[0.3018452589326347`,
0.020857341095084154`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4909627016891409`,"TrainingSize" -> 806,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 407488,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24345857706142607`,0.049758732719938026`]},
"StandardDeviationHistory" -> {Around[0.3018452589326347`,0.014748367325854855`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.3018452589326347`,0.020857341095084154`],
"TrainingMemory" -> 407488,"TrainingTime" -> 0.02251342945748697`],"Index" -> 1],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 10.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.5147429089591009`,0.27806935810348105`],
"StandardDeviation" -> Around[0.3001092078390103`,0.03376176578511753`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48820576154023265`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75576,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.5147429089591009`,0.19662472875516188`]},"StandardDeviationHistory" -> {Around[
0.3001092078390103`,0.023873173531488566`]}],Association["MeanCrossEntropy" -> Around[
0.5865730181544999`,0.3280506780701437`],"StandardDeviation" -> Around[0.3820641400200063`,
0.0703034964624581`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> 0.2328730536792636`,"TrainingSize" -> 40,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.5865730181544999`,0.23196685903624364`]},"StandardDeviationHistory" -> {Around[
0.3820641400200063`,0.04971207908972858`]}],Association["MeanCrossEntropy" -> Around[
0.206605640704205`,0.082952138665468`],"StandardDeviation" -> Around[0.293565605360788`,
0.025030008312286422`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5155926724529161`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.206605640704205`,0.05865601976427922`]},"StandardDeviationHistory" -> {Around[
0.293565605360788`,0.01769888861077338`]}],Association["MeanCrossEntropy" -> Around[
0.24650192987182526`,0.04067769949871539`],"StandardDeviation" -> Around[0.303536227259097`,
0.01205677814513886`],"EvaluationTime" -> 2.511886431509579`*^-5,"TestSize" -> 400,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4911886765137723`,"TrainingSize" -> 806,
"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407610.6666666666`,"ExperimentCount" -> 2,
"MeanCrossEntropyHistory" -> {Around[0.24338844727057848`,0.0497747713184657`],Around[
0.24961541247307203`,0.06996575978107505`]},"StandardDeviationHistory" -> {Around[
0.3018240084402837`,0.01475447232668639`],Around[0.3052484460779103`,0.020297755178353333`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.511886431509579`*^-5,
"ModelMemory" -> 17536.`,"StandardDeviation" -> Around[0.303536227259097`,0.01205677814513886`],
"TrainingMemory" -> 407610.6666666666`,"TrainingTime" -> 0.018723998082291214`],"Index" -> 2],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 10000.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.34016037384510955`,0.03171621768875464`],
"StandardDeviation" -> Around[0.3037177267837419`,0.019257517473002896`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48590226176670936`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.34016037384510955`,0.022426752601307137`]},
"StandardDeviationHistory" -> {Around[0.3037177267837419`,0.013617121193978773`]}],Association[
"MeanCrossEntropy" -> Around[0.24759399043378263`,0.06111321338068985`],"StandardDeviation" -> Around[
0.30299232551383304`,0.020480905817210387`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4874664646380007`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24759399043378263`,0.04321356760158624`]},
"StandardDeviationHistory" -> {Around[0.30299232551383304`,0.014482187388192472`]}],Association[
"MeanCrossEntropy" -> Around[0.24474031008153924`,0.03511479974132768`],"StandardDeviation" -> Around[
0.3024987149329279`,0.010645873688927701`],"EvaluationTime" -> 2.7286835077291794`*^-5,
"TestSize" -> 400,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4955114659801273`,
"TrainingSize" -> 806,"TrainingTime" -> 0.009314427449080937`,"TrainingMemory" -> 407573.3333333333`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.24729637806997667`,
0.04954366015043928`],Around[0.2421842420931018`,0.04951252757252981`]},"StandardDeviationHistory" -> {Around[
0.3032453824161581`,0.014992452162270738`],Around[0.3017520474496977`,0.015044609533273934`]}],Association[
"MeanCrossEntropy" -> Around[0.6805983999036436`,0.014303560902438277`],"StandardDeviation" -> Around[
0.30513889917263426`,0.01993072083705735`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.48085659999788954`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75520,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6805983999036436`,0.010114144909228878`]},
"StandardDeviationHistory" -> {Around[0.30513889917263426`,0.014093147857819273`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.30513889917263426`,0.01993072083705735`],
"TrainingMemory" -> 75520,"TrainingTime" -> 0.08793213558397794`],"Index" -> 3],Association[
"Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1.`*^-4],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.9279064488159402`,0.5492568854213569`],
"StandardDeviation" -> Around[0.43690676065981804`,0.09018120894186962`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.09443032428233367`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84728,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.9279064488159402`,0.38838326829484393`]},"StandardDeviationHistory" -> {Around[
0.43690676065981804`,0.06376774437839693`]}],Association["MeanCrossEntropy" -> Around[
0.21574751534035685`,0.08816717397254667`],"StandardDeviation" -> Around[0.2963473859039863`,
0.02618558295401531`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5055522155293051`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135800,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.21574751534035685`,0.06234360659404182`]},
"StandardDeviationHistory" -> {Around[0.2963473859039863`,0.01851600327610709`]}],Association[
"MeanCrossEntropy" -> Around[0.2500066630246117`,0.05045348466454959`],"StandardDeviation" -> Around[
0.30458623425966014`,0.014684727667930155`],"EvaluationTime" -> 3.491343280859839`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4860519904002374`,
"TrainingSize" -> 806,"TrainingTime" -> 0.009999999999999998`,"TrainingMemory" -> 407613.3333333333`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.25495809593522845`,
0.07112345683738697`],Around[0.24505523011399497`,0.07089224578211306`]},"StandardDeviationHistory" -> {Around[
0.30512149241016406`,0.020853913988993743`],Around[0.3040509761091562`,0.0206546028987164`]}],Association[
"MeanCrossEntropy" -> Around[4.010720816725951`*^9,9.25509857779209`*^8],"StandardDeviation" -> Around[
0.3214227791544533`,0.03637378904573149`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4194644754133291`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4.010720816725951`*^9,6.544342964906758`*^8]},
"StandardDeviationHistory" -> {Around[0.3214227791544533`,0.025720152891685694`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.8370820458389797`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.3214227791544533`,0.03637378904573149`],
"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],"Index" -> 4],Association[
"Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[52.44239741299497`,10.582643666204062`],
"StandardDeviation" -> Around[0.3383242229081771`,0.03150373957541412`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.3721456813601194`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[52.44239741299497`,7.483059099253758`]},"StandardDeviationHistory" -> {Around[
0.3383242229081771`,0.02227650788651033`]}],Association["MeanCrossEntropy" -> Around[
0.6254785996172716`,0.29929568275849583`],"StandardDeviation" -> Around[0.3829835486458447`,
0.05635837776182956`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.23760398930809679`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6254785996172716`,0.21163400685839004`]},"StandardDeviationHistory" -> {Around[
0.3829835486458447`,0.039851391092062795`]}],Association["MeanCrossEntropy" -> Around[
0.2145946247494457`,0.08704908613247879`],"StandardDeviation" -> Around[0.29596031399063927`,
0.025892285982067935`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5070312736923357`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2145946247494457`,0.0615529991003676`]},"StandardDeviationHistory" -> {Around[
0.29596031399063927`,0.01830861099834162`]}],Association["MeanCrossEntropy" -> Around[
0.24453719692783565`,0.04072339715528041`],"StandardDeviation" -> Around[0.3030229024523076`,
0.012053072172200025`],"EvaluationTime" -> 2.6202849696193794`*^-5,"TestSize" -> 400,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.49287033069427943`,"TrainingSize" -> 806,
"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407568.`,"ExperimentCount" -> 2,
"MeanCrossEntropyHistory" -> {Around[0.243430319109482`,0.04976019024355506`],Around[
0.24564407474618932`,0.07078616022637006`]},"StandardDeviationHistory" -> {Around[
0.30183670174992183`,0.014749163579757713`],Around[0.3042091031546934`,0.020611578561037312`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.6202849696193794`*^-5,
"ModelMemory" -> 17536.`,"StandardDeviation" -> Around[0.3030229024523076`,0.012053072172200025`],
"TrainingMemory" -> 407568.`,"TrainingTime" -> 0.018723998082291214`],"Index" -> 5],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0.1`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.8831644899852518`,0.5006181789267424`],
"StandardDeviation" -> Around[0.4288338043319327`,0.08351189021164307`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.11532400497824336`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.8831644899852518`,0.3539905091043599`]},"StandardDeviationHistory" -> {Around[
0.4288338043319327`,0.05905182387835927`]}],Association["MeanCrossEntropy" -> Around[
0.21563546017132112`,0.08804217279838086`],"StandardDeviation" -> Around[0.29630805757608586`,
0.026151564846980734`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5057051892293415`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.21563546017132112`,0.0622552174161329`]},"StandardDeviationHistory" -> {Around[
0.29630805757608586`,0.018491948841939814`]}],Association["MeanCrossEntropy" -> Around[
0.2434553857152781`,0.07036967845152851`],"StandardDeviation" -> Around[0.30184429242204236`,
0.020857458209899173`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.49096578025918614`,"TrainingSize" -> 806,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 407424,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.2434553857152781`,0.04975887682299268`]},"StandardDeviationHistory" -> {Around[
0.30184429242204236`,0.014748450138534732`]}],Association["MeanCrossEntropy" -> Around[
4542.760069266185`,886.5687375947408`],"StandardDeviation" -> Around[0.34351391149870636`,
0.03227973999366927`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 300,
"ModelMemory" -> 17536,"ModelUtility" -> 0.35675543098810314`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4542.760069266185`,626.898766341238`]},"StandardDeviationHistory" -> {Around[
0.34351391149870636`,0.02282522304446214`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.5118864315095795`*^-5,"ModelMemory" -> 17536,"StandardDeviation" -> Around[
0.34351391149870636`,0.03227973999366927`],"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],
"Index" -> 6],Association["Value" -> "LinearRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 100000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
0.6833879825741994`,0.014260978538216453`],"StandardDeviation" -> Around[0.30515663264541903`,
0.01993966980128871`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 300,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4807934454603753`,"TrainingSize" -> 10,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 77696,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.6833879825741994`,0.010084034630728671`]},"StandardDeviationHistory" -> {Around[
0.30515663264541903`,0.014099475731111864`]}],Association["MeanCrossEntropy" -> Around[
0.34199685491865117`,0.03162825604303987`],"StandardDeviation" -> Around[0.30405395002649155`,
0.019281595095393914`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4847940597819176`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.34199685491865117`,0.022364554325137894`]},
"StandardDeviationHistory" -> {Around[0.30405395002649155`,0.01363414664404631`]}],Association[
"MeanCrossEntropy" -> Around[0.2488856610152403`,0.060773644955825205`],"StandardDeviation" -> Around[
0.303335909866842`,0.020524569932095567`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48631984006832396`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135800,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2488856610152403`,0.04297345646568762`]},"StandardDeviationHistory" -> {Around[
0.303335909866842`,0.014513062579922291`]}],Association["MeanCrossEntropy" -> Around[
0.24702075091797981`,0.06965667589011522`],"StandardDeviation" -> Around[0.303225342331713`,
0.02122892092133829`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.48622128071287185`,"TrainingSize" -> 806,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 407488,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24702075091797981`,0.04925470787681396`]},
"StandardDeviationHistory" -> {Around[0.303225342331713`,0.015011113940751273`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.303225342331713`,0.02122892092133829`],
"TrainingMemory" -> 407488,"TrainingTime" -> 0.019924175339545304`],"Index" -> 7],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1000.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.6538831483696669`,0.014796270673266772`],
"StandardDeviation" -> Around[0.3053258538432065`,0.019883027260214417`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.48028283521765314`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75576,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6538831483696669`,0.010462543329338577`]},
"StandardDeviationHistory" -> {Around[0.3053258538432065`,0.014059423406214595`]}],Association[
"MeanCrossEntropy" -> Around[0.3234479300365895`,0.032631718066437713`],"StandardDeviation" -> Around[
0.3009210113023353`,0.019050829503999202`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4951724643028259`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.3234479300365895`,0.02307410912654568`]},"StandardDeviationHistory" -> {Around[
0.3009210113023353`,0.013470970729506586`]}],Association["MeanCrossEntropy" -> Around[
0.27822524137647076`,0.10212250242261312`],"StandardDeviation" -> Around[0.3126578432476319`,
0.031384372931076966`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4496160304887358`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.27822524137647076`,0.07221151397476935`]},
"StandardDeviationHistory" -> {Around[0.3126578432476319`,0.022192102922852043`]}],Association[
"MeanCrossEntropy" -> Around[0.24836916157082206`,0.07091442511068671`],"StandardDeviation" -> Around[
0.30339800129288347`,0.021104132797124187`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.4857410181488667`,"TrainingSize" -> 806,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 407424,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.24836916157082206`,0.050144070879712156`]},"StandardDeviationHistory" -> {Around[
0.30339800129288347`,0.014922875411907933`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.8370820458389797`*^-5,"ModelMemory" -> 17536,"StandardDeviation" -> Around[
0.30339800129288347`,0.021104132797124187`],"TrainingMemory" -> 407424,"TrainingTime" -> 0.020437078873297404`],
"Index" -> 8],Association["Value" -> "LinearRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 100.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
0.2483973569263034`,0.04459778089316626`],"StandardDeviation" -> Around[0.29483001579721285`,
0.01971053723583402`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5149213128369845`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2483973569263034`,0.0315353932954297`]},"StandardDeviationHistory" -> {Around[
0.29483001579721285`,0.013937454540288182`]}],Association["MeanCrossEntropy" -> Around[
0.20391329624836693`,0.07862379947767742`],"StandardDeviation" -> Around[0.2925269205981635`,
0.024305417305198945`],"EvaluationTime" -> 2.5118864315095795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5195647688776655`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135864,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20391329624836693`,0.055595421773317034`]},
"StandardDeviationHistory" -> {Around[0.2925269205981635`,0.017186525396075035`]}],Association[
"MeanCrossEntropy" -> Around[0.2563280387938678`,0.07125405884051224`],"StandardDeviation" -> Around[
0.3055343528966801`,0.02088691120333508`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 100,"ModelMemory" -> 17536,"ModelUtility" -> 0.47896048782912093`,"TrainingSize" -> 806,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 4667936,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.2563280387938678`,0.07125405884051224`]},"StandardDeviationHistory" -> {Around[
0.3055343528966801`,0.02088691120333508`]}],Association["MeanCrossEntropy" -> Around[
0.4531107410450785`,0.033607292743332094`],"StandardDeviation" -> Around[0.302648745261845`,
0.030441969667914025`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4821122301429822`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.4531107410450785`,0.023763944596131573`]},
"StandardDeviationHistory" -> {Around[0.302648745261845`,0.0215257231848572`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.8370820458389797`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.302648745261845`,0.030441969667914025`],
"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],"Index" -> 9],Association[
"Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1.`*^-6],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.9279530092244757`,0.5493114292448106`],
"StandardDeviation" -> Around[0.43691529099814747`,0.09018875959737602`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.09440825479542414`,"TrainingSize" -> 40,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 84792,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.9279530092244757`,0.3884218366022799`]},"StandardDeviationHistory" -> {Around[
0.43691529099814747`,0.0637730834981079`]}],Association["MeanCrossEntropy" -> Around[
0.215747627735556`,0.08816729884710449`],"StandardDeviation" -> Around[0.2963474254217402`,
0.026185617036915437`],"EvaluationTime" -> 2.8370820458389797`*^-5,"TestSize" -> 200,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5055520586410381`,"TrainingSize" -> 200,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.215747627735556`,0.062343694893688455`]},"StandardDeviationHistory" -> {Around[
0.2963474254217402`,0.018516027376356894`]}],Association["MeanCrossEntropy" -> Around[
0.24425687269952429`,0.04073552434477672`],"StandardDeviation" -> Around[0.3029481091947951`,
0.0120531540754785`],"EvaluationTime" -> 2.511886431509579`*^-5,"TestSize" -> 400,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4931151838581205`,"TrainingSize" -> 806,
"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407610.6666666666`,"ExperimentCount" -> 2,
"MeanCrossEntropyHistory" -> {Around[0.2434585779054606`,0.04975873272275445`],Around[
0.24505516749358797`,0.07089225693081318`]},"StandardDeviationHistory" -> {Around[
0.3018452591761167`,0.014748367315817058`],Around[0.30405095921347347`,0.02065460745087785`]}],Association[
"MeanCrossEntropy" -> Around[4.434782507898643`*^13,8.659287116044047`*^12],"StandardDeviation" -> Around[
0.34422399548516264`,0.03238843990109296`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.354666508606692`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75576,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4.434782507898643`*^13,6.123040639996048`*^12]},
"StandardDeviationHistory" -> {Around[0.34422399548516264`,0.022902085486115786`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.34422399548516264`,0.03238843990109296`],
"TrainingMemory" -> 75576,"TrainingTime" -> 0.08793213558397794`],"Index" -> 10],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1000000.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.24903238612930495`,0.06073998575090398`],
"StandardDeviation" -> Around[0.30337597327965576`,0.020529857098590468`],"EvaluationTime" -> 3.1622776601683795`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.48618609043998373`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135800,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.24903238612930495`,0.04294965581363847`]},
"StandardDeviationHistory" -> {Around[0.30337597327965576`,0.014516801171204097`]}],Association[
"MeanCrossEntropy" -> Around[0.24814131360013858`,0.03494147241512783`],"StandardDeviation" -> Around[
0.3035659563553433`,0.010639973862623555`],"EvaluationTime" -> 1.2215516488234317`*^-4,
"TestSize" -> 400,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4920179272594287`,
"TrainingSize" -> 806,"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407610.6666666666`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.24699937509873346`,
0.04921659892664419`],Around[0.24928325210154367`,0.04956182639058635`]},"StandardDeviationHistory" -> {Around[
0.3032267721508669`,0.015013516033579402`],Around[0.30390514055981965`,0.01506571529365706`]}],Association[
"MeanCrossEntropy" -> Around[0.6836681706929596`,0.014256775746603018`],"StandardDeviation" -> Around[
0.3051588205292711`,0.019940583254689087`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.48078577731511496`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75512,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.6836681706929596`,0.010081062808278897`]},
"StandardDeviationHistory" -> {Around[0.3051588205292711`,0.01410012164020557`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 2.5118864315095795`*^-5,
"ModelMemory" -> 17536,"StandardDeviation" -> Around[0.3051588205292711`,0.019940583254689087`],
"TrainingMemory" -> 75512,"TrainingTime" -> 0.08793213558397794`],"Index" -> 11],
Association["Value" -> "LinearRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0.01`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[0.21573646599941593`,0.08815464334798948`],
"StandardDeviation" -> Around[0.2963434843660333`,0.026182158074836166`],"EvaluationTime" -> 2.8370820458389797`*^-5,
"TestSize" -> 200,"ModelMemory" -> 17536,"ModelUtility" -> 0.5055674204482835`,"TrainingSize" -> 200,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 135928,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.21573646599941593`,0.06233474610444493`]},
"StandardDeviationHistory" -> {Around[0.2963434843660333`,0.018513581520814774`]}],Association[
"MeanCrossEntropy" -> Around[0.24425975555882973`,0.04073539059426792`],"StandardDeviation" -> Around[
0.3029488802815528`,0.012053151847316956`],"EvaluationTime" -> 2.511886431509579`*^-5,
"TestSize" -> 400,"ModelMemory" -> 17536.`,"ModelUtility" -> 0.49311266013748645`,
"TrainingSize" -> 806,"TrainingTime" -> 0.008628854898161877`,"TrainingMemory" -> 407632.`,
"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[0.2434582546120504`,0.049758747103273986`],Around[
0.24506125650560906`,0.07089117775540078`]},"StandardDeviationHistory" -> {Around[
0.30184516127093675`,0.014748375630288673`],Around[0.3040525992921689`,0.02065416616349073`]}],Association[
"MeanCrossEntropy" -> Around[444605.8002162325`,86801.01238774635`],"StandardDeviation" -> Around[
0.34415133167665135`,0.032377280852051105`],"EvaluationTime" -> 2.5118864315095795`*^-5,
"TestSize" -> 300,"ModelMemory" -> 17536,"ModelUtility" -> 0.3548800907487779`,"TrainingSize" -> 10,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 75448,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[444605.8002162325`,61377.58447323296`]},"StandardDeviationHistory" -> {Around[
0.34415133167665135`,0.022894194846866694`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.5118864315095795`*^-5,"ModelMemory" -> 17536,"StandardDeviation" -> Around[
0.34415133167665135`,0.032377280852051105`],"TrainingMemory" -> 75448,"TrainingTime" -> 0.08793213558397794`],
"Index" -> 12]],TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[
TypeSystem`Enumeration["LinearRegression"]],TypeSystem`Assoc[TypeSystem`AnyType,TypeSystem`Struct[
{"Value"},{TypeSystem`AnyType}],4]}],TypeSystem`Struct[{"Experiments","PredictedPerformances","Index"},
{TypeSystem`Vector[TypeSystem`Struct[{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Real],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Real],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,TypeSystem`AnyLength],TypeSystem`Vector[
TypeSystem`AnyType,TypeSystem`AnyLength]}],TypeSystem`AnyLength],TypeSystem`Struct[
{"EvaluationTime","ModelMemory","StandardDeviation","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[
Real]}],TypeSystem`Atom[Integer]}],12],Association[]],"MaxTrainingSize" -> 1007,"PreprocessorEvaluationTime" -> 6.3515625`*^-6,
"PreprocessorMemory" -> 171264,"InputDimension" -> 18,"OutputDimension" -> 1,"BaselineLogProbability" -> -1.4189385332046727`,
"VariableBudget" -> True,"CheckpointingInfo" -> Association["Checkpointing" -> False],
"UserStop" -> False,"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[
{Association["TrainingSizes" -> 10,"TimeBudgets" -> 0.13719999999999996`,"ElapsedTimes" -> 0.27713299999999996`,
"ExperimentCounts" -> 12],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.19600000000000006`,
"ElapsedTimes" -> 0.20008599999999999`,"ExperimentCounts" -> 10],Association["TrainingSizes" -> 200,
"TimeBudgets" -> 0.27999999999999997`,"ElapsedTimes" -> 0.295442`,"ExperimentCounts" -> 12],Association[
"TrainingSizes" -> 806,"TimeBudgets" -> 0.4`,"ElapsedTimes" -> 0.416925`,"ExperimentCounts" -> 19]},
TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 8800802888778519852],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 5154301130884246007],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 1158318149837664758],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 4658431380324298604],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 6612385611817534699],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 1283109836901802735],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 6319261172030616397],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 9035757723250717457],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 2088918241571526895],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 5735735062414845938],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 2753064490390060301],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 9135149779559159253],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 4013711609810789428]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 2.082795`,"MaxTrainingMemory" -> 15406840,"DataMemory" -> 2080416,
"FunctionMemory" -> 424824,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,5,36.765613`8.318016790782782},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]]]],StandardForm],"Output",CellLabel -> "Out[121]= ",
ExpressionUUID -> "de724fc8-246a-43bf-8c7f-2695580ffc68"]},Open],ExpressionUUID -> "76a6a293-0f10-4d01-aa2b-d71d1407f0fc"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[",RowBox[{"pESG",","," ","\"Properties\""}],"]"}]],
"Input",CellLabel -> "In[122]:= ",ExpressionUUID -> "7dab9620-34b4-478a-9286-4ec3e43b1453"],Cell[
BoxData[
RowBox[{"{",RowBox[{"\"AcceptanceThreshold\"",",","\"AnomalyDetector\"",",","\"BatchEvaluationSpeed\"",",","\"BatchEvaluationTime\"",",","\"Calibrated\"",",","\"EvaluationTime\"",",","\"ExampleNumber\"",",","\"FeatureNames\"",",","\"FeatureNumber\"",",","\"FeatureTypes\"",",","\"FunctionMemory\"",",","\"FunctionProperties\"",",","\"IndeterminateThreshold\"",",","\"L1Regularization\"",",","\"L2Regularization\"",",","\"LearningCurve\"",",","\"MaxTrainingMemory\"",",","\"MeanCrossEntropy\"",",","\"Method\"",",","\"MethodDescription\"",",","\"MethodOption\"",",","\"MissingSynthesizer\"",",","\"OptimizationMethod\"",",","\"PerformanceGoal\"",",","\"Properties\"",",","\"StandardDeviation\"",",","\"TrainingLabelMean\"",",","\"TrainingTime\"",",","\"UtilityFunction\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[122]= ",ExpressionUUID -> "2c83338a-1952-4f13-b93f-14a3d67955ae"]},
Open],ExpressionUUID -> "53f65355-37c3-481b-b308-00e6726bbbbe"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["2",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","is"," ","the"," ","standard"," ","deviation"," ","of"," ","your"," ","predictor","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "bf07c149-1278-449f-92ca-a5d1ffbefdcd"],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"pStandardDeviation"," ","=",RowBox[{"Information","[",RowBox[{"pESG",","," ","\"StandardDeviation\""}],"]"}]}]],
"Input",CellLabel -> "In[123]:= ",ExpressionUUID -> "e3d01803-bc7f-49ee-bd41-e4138f03a533"],Cell[
BoxData[
InterpretationBox[TemplateBox[{"0.293","0.024"},"Around",SyntaxForm -> PlusMinus],
Around[0.2925269205981635`,0.024305417305198945`]],StandardForm],"Output",CellLabel -> "Out[123]= ",
ExpressionUUID -> "c2a884bd-95a8-4032-847a-b43c35ebc68e"]},Open],ExpressionUUID -> "792232fe-0029-478c-98d9-5cb3e1ac23fb"],Cell[
TextData[
{StyleBox["Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"3",FontWeight -> Bold],StyleBox[RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold]}]],"\n","Create"," ","a"," ","BarChart"," ","of"," ","the"," ","impact"," ","of"," ","features"," ","on"," ","prediction"," ","for"," ","the"," ","company",StyleBox[
RowBox[{" ","\""}]],"1","&","1"," ","DRILLISH",StyleBox[RowBox[{"\""," ","("}]],"first"," ","company"," ","of"," ","the"," ","dataset",StyleBox[
RowBox[{")?"," ",StyleBox["[",FontWeight -> Bold]}]],StyleBox["1",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],"]","\n",StyleBox[StyleBox[
"Hint",FontSlant -> Italic],FontWeight -> Plain],StyleBox[RowBox[{StyleBox[StyleBox[
":",FontSlant -> Italic],FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain]}]],StyleBox[
"You",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["can",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["get",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"an",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["estimation",
FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["for",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["how",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"much",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["each",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["feature",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"impacted",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["the",
FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["predictor's",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["output",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"by",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["computing",
FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["the",FontWeight -> Plain],StyleBox[
RowBox[{StyleBox["\[NonBreakingSpace]",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain]}]],StyleBox[
"SHAP",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["values",FontWeight -> Plain],StyleBox[
".",FontWeight -> Plain]}],"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,
0.792156862745098`,0.9215686274509803`],ExpressionUUID -> "721cb981-a040-4984-9268-b17538a10903"],Cell[
BoxData[
RowBox[{RowBox[{"drillish"," ","="," ",RowBox[{"First","[","dataR","]"}]}],";"}]],
"Input",CellLabel -> "In[124]:= ",ExpressionUUID -> "0351a105-9e6f-44ec-87e7-f3160abe5ef6"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"impacts"," ","="," ",RowBox[{"pESG","[",RowBox[{"drillish",","," ","\"SHAPValues\""}],"]"}]}]],
"Input",CellLabel -> "In[125]:= ",ExpressionUUID -> "8e168d7b-80b1-4b2e-86ad-5b7ff37785b6"],Cell[
BoxData[
RowBox[{"\[LeftAssociation]",RowBox[{RowBox[{"\"mv\"","\[Rule]","0.0013044704692092483`"}],",",RowBox[
{"\"mc\"","\[Rule]","0.003551422620091236`"}],",",RowBox[{"\"tobin\"","\[Rule]","0.023919912736603315`"}],",",RowBox[
{"\"roe\"","\[Rule]","0.00345189862189298`"}],",",RowBox[{"\"oia\"","\[Rule]","0.00039828734165741513`"}],",",RowBox[
{"\"ois\"","\[Rule]","0.0019817997190453196`"}],",",RowBox[{"\"assets\"","\[Rule]","0.00459600258458052`"}],",",RowBox[
{"\"roa\"","\[Rule]","0.007713547984325957`"}],",",RowBox[{"\"sg\"","\[Rule]",RowBox[
{"-","0.0035070825419762195`"}]}],",",RowBox[{"\"lev\"","\[Rule]","0.009403937358203341`"}],",",RowBox[
{"\"div\"","\[Rule]",RowBox[{"-","0.004348195945372128`"}]}],",",RowBox[{"\"ind\"","\[Rule]","0.0034513661148537172`"}],",",RowBox[
{"\"country\"","\[Rule]",RowBox[{"-","0.02925861142023825`"}]}]}],"\[RightAssociation]"}],
StandardForm],"Output",CellLabel -> "Out[125]= ",ExpressionUUID -> "cb3d8066-d9a7-44aa-91bc-9bbb3f919e9a"]},
Open],ExpressionUUID -> "995e0d7a-01aa-47c7-9f6c-3581dfa8f715"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"BarChart","[",RowBox[{RowBox[{"Sort","[","impacts","]"}],","," ",RowBox[
{"ChartLabels"," ","->"," ",RowBox[{"Placed","[",RowBox[{"Automatic",","," ","After"}],"]"}]}],","," ","\n"," ",RowBox[
{"ImageSize"," ","->"," ","Medium"}],","," ",RowBox[{"BarOrigin"," ","->"," ","Left"}],","," ","\n"," ",RowBox[
{"PlotLabel"," ","->"," ","\"Impact of Feature on Prediction\""}]}],"]"}]],"Input",
CellLabel -> "In[126]:= ",ExpressionUUID -> "84de3537-7c2f-42c9-a3ef-8f5714bbc1b6"],Cell[
BoxData[
GraphicsBox[{{Opacity[0],PointBox[{{0.`,0.3023255813953489`},{0.`,13.440071556350624`}}]},{{},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],{{Directive[EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[
0.982864`,0.7431472`,0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[
CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[
0.66`]}],{},{}],RectangleBox[{0.`,0.5599284436493739`},{-0.02925861142023825`,1.4400715563506261`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],-0.02925861142023825`]],
TagBoxNote -> "-0.02925861142023825"],StyleBox[RowBox[{"-","0.02925861142023825`"}],
{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[-0.02925861142023825`,
{}],"Tooltip"]]]},{Directive[EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],
RGBColor[0.982864`,0.7431472`,0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[
{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[
1.5`],Opacity[0.66`]}],{},{}],RectangleBox[{0.`,1.5599284436493739`},{-0.004348195945372128`,2.440071556350626`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],-0.004348195945372128`]],
TagBoxNote -> "-0.004348195945372128"],StyleBox[RowBox[{"-","0.004348195945372128`"}],
{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[-0.004348195945372128`,
{}],"Tooltip"]]]},{Directive[EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],
RGBColor[0.982864`,0.7431472`,0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[
{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[
1.5`],Opacity[0.66`]}],{},{}],RectangleBox[{0.`,2.559928443649374`},{-0.0035070825419762195`,3.440071556350626`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],-0.0035070825419762195`]],
TagBoxNote -> "-0.0035070825419762195"],StyleBox[RowBox[{"-","0.0035070825419762195`"}],
{},StripOnInput -> False]],Function[Annotation[Slot[1],Style[-0.0035070825419762195`,
{}],"Tooltip"]]]},{Directive[EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],
RGBColor[0.982864`,0.7431472`,0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[
{FEPrivate`If[CurrentValue["MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[
1.5`],Opacity[0.66`]}],{},{}],RectangleBox[{0.`,3.559928443649374`},{3.9828734165741513`*^-4,4.440071556350626`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],3.9828734165741513`*^-4]],
TagBoxNote -> "0.00039828734165741513"],StyleBox["0.00039828734165741513`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[3.9828734165741513`*^-4,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,4.559928443649373`},{0.0013044704692092483`,5.440071556350626`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.0013044704692092483`]],
TagBoxNote -> "0.0013044704692092483"],StyleBox["0.0013044704692092483`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.0013044704692092483`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,5.559928443649373`},{0.0019817997190453196`,6.440071556350626`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.0019817997190453196`]],
TagBoxNote -> "0.0019817997190453196"],StyleBox["0.0019817997190453196`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.0019817997190453196`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,6.559928443649373`},{0.0034513661148537172`,7.440071556350626`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.0034513661148537172`]],
TagBoxNote -> "0.0034513661148537172"],StyleBox["0.0034513661148537172`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.0034513661148537172`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,7.559928443649373`},{0.00345189862189298`,8.440071556350626`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.00345189862189298`]],
TagBoxNote -> "0.00345189862189298"],StyleBox["0.00345189862189298`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.00345189862189298`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,8.559928443649373`},{0.003551422620091236`,9.440071556350624`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.003551422620091236`]],
TagBoxNote -> "0.003551422620091236"],StyleBox["0.003551422620091236`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.003551422620091236`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,9.55992844364937`},{0.00459600258458052`,10.440071556350624`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.00459600258458052`]],
TagBoxNote -> "0.00459600258458052"],StyleBox["0.00459600258458052`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.00459600258458052`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,10.55992844364937`},{0.007713547984325957`,11.440071556350624`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.007713547984325957`]],
TagBoxNote -> "0.007713547984325957"],StyleBox["0.007713547984325957`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.007713547984325957`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,11.55992844364937`},{0.009403937358203341`,12.440071556350624`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.009403937358203341`]],
TagBoxNote -> "0.009403937358203341"],StyleBox["0.009403937358203341`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.009403937358203341`,{}],"Tooltip"]]]},{Directive[
EdgeForm[Directive[Thickness[Small],Opacity[0.609`]]],RGBColor[0.982864`,0.7431472`,
0.3262672`]],TagBox[TooltipBox[TagBox[TagBox[DynamicBox[{FEPrivate`If[CurrentValue[
"MouseOver"],EdgeForm[{GrayLevel[0.5`],AbsoluteThickness[1.5`],Opacity[0.66`]}],{},
{}],RectangleBox[{0.`,12.55992844364937`},{0.023919912736603315`,13.440071556350624`},
"RoundingRadius" -> 0]}],"DelayedMouseEffectStyle"],Function[StatusArea[Slot[1],0.023919912736603315`]],
TagBoxNote -> "0.023919912736603315"],StyleBox["0.023919912736603315`",{},StripOnInput -> False]],
Function[Annotation[Slot[1],Style[0.023919912736603315`,{}],"Tooltip"]]]}}},{},{}},{},{InsetBox[
FormBox[StyleBox["\"country\"",{},StripOnInput -> False],TraditionalForm],Offset[
{6,0},{0.`,1.`}],ImageScaled[{0,0.5`}]],InsetBox[FormBox[StyleBox["\"div\"",{},StripOnInput -> False],
TraditionalForm],Offset[{6,0},{0.`,2.`}],ImageScaled[{0,0.5`}]],InsetBox[FormBox[
StyleBox["\"sg\"",{},StripOnInput -> False],TraditionalForm],Offset[{6,0},{0.`,3.`}],
ImageScaled[{0,0.5`}]],InsetBox[FormBox[StyleBox["\"oia\"",{},StripOnInput -> False],
TraditionalForm],Offset[{6,0},{3.9828734165741513`*^-4,4.`}],ImageScaled[{0,0.5`}]],InsetBox[
FormBox[StyleBox["\"mv\"",{},StripOnInput -> False],TraditionalForm],Offset[{6,0},
{0.0013044704692092483`,5.`}],ImageScaled[{0,0.5`}]],InsetBox[FormBox[StyleBox["\"ois\"",
{},StripOnInput -> False],TraditionalForm],Offset[{6,0},{0.0019817997190453196`,6.`}],
ImageScaled[{0,0.5`}]],InsetBox[FormBox[StyleBox["\"ind\"",{},StripOnInput -> False],
TraditionalForm],Offset[{6,0},{0.0034513661148537172`,7.`}],ImageScaled[{0,0.5`}]],InsetBox[
FormBox[StyleBox["\"roe\"",{},StripOnInput -> False],TraditionalForm],Offset[{6,0},
{0.00345189862189298`,8.`}],ImageScaled[{0,0.5`}]],InsetBox[FormBox[StyleBox["\"mc\"",
{},StripOnInput -> False],TraditionalForm],Offset[{6,0},{0.003551422620091236`,8.999999999999998`}],
ImageScaled[{0,0.5`}]],InsetBox[FormBox[StyleBox["\"assets\"",{},StripOnInput -> False],
TraditionalForm],Offset[{6,0},{0.00459600258458052`,9.999999999999996`}],ImageScaled[
{0,0.5`}]],InsetBox[FormBox[StyleBox["\"roa\"",{},StripOnInput -> False],TraditionalForm],
Offset[{6,0},{0.007713547984325957`,10.999999999999996`}],ImageScaled[{0,0.5`}]],InsetBox[
FormBox[StyleBox["\"lev\"",{},StripOnInput -> False],TraditionalForm],Offset[{6,0},
{0.009403937358203341`,11.999999999999996`}],ImageScaled[{0,0.5`}]],InsetBox[FormBox[
StyleBox["\"tobin\"",{},StripOnInput -> False],TraditionalForm],Offset[{6,0},{0.023919912736603315`,12.999999999999996`}],
ImageScaled[{0,0.5`}]]},{},{},{StyleBox[{Antialiasing -> False,{Directive[Thickness[
Tiny]],{LineBox[{{0.`,0.3023255813953489`},{0.`,13.702826475849731`}}]},StyleBox[
{},{"GraphicsLabel"},StripOnInput -> False]},StyleBox[{{Directive[Thickness[Tiny]],LineBox[
{{0.`,0.5599284436493739`},Offset[{-6.`,-0.`},{0.`,0.5599284436493739`}]}],LineBox[
{{0.`,13.440071556350626`},Offset[{-6.`,-0.`},{0.`,13.440071556350626`}]}],{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}}},StyleBox[
{},{"GraphicsLabel"},StripOnInput -> False]},{"GraphicsTicks"},StripOnInput -> False]},
{"GraphicsAxes"},StripOnInput -> False]}},PlotRangePadding -> {{Scaled[0.02`],Scaled[
0.02`]},{Scaled[0.05`],Scaled[0.05`]}},PlotRange -> {{All,All},{All,All}},ImageSize -> Medium,
Ticks -> {Automatic,None},AxesOrigin -> {0.`,0.3023255813953489`},CoordinatesToolOptions -> CompressedData[
"1:eJxTTMoPSmNiYGAoZgESPpnFJQheUGlOajA/kOGSWVyQk1jpVpqXXJKZn5fGCFLBASTgIqgmwOU9U1LzSjJLKhHyAYlFUHkQLzgnvyQTxAMT5OgDKUBzsTCQ4ZxfkJmaEpaYU5o6WF0NAFk5TEk="],
GridLines -> {None,None},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],AspectRatio -> NCache[
Power[GoldenRatio,-1],0.6180339887498948`],AxesLabel -> {None,None},PlotLabel -> FormBox[
"\"Impact of Feature on Prediction\"",TraditionalForm],FrameLabel -> {{None,None},{None,None}},
Axes -> {True,False},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},
DisplayFunction -> Identity],StandardForm],"Output",CellLabel -> "Out[126]= ",ExpressionUUID -> "b6cc0c18-923c-4c30-a930-c7b8b2097732"]},
Open],ExpressionUUID -> "8e8b1949-721a-42eb-9735-659eb55b93dd"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["4",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","are"," ","the"," ","L1"," ","and"," ","L2"," ","regularization"," ","coefficients"," ","of"," ","your"," ","predictor","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "d4a270fa-0766-40d6-8969-1e8278e01240"],Cell[
CellGroupData[{Cell[
BoxData[
{RowBox[{"penaltyL1"," ","="," ",RowBox[{"Information","[",RowBox[{"pESG",","," ","\"L1Regularization\""}],"]"}]}],"\n",RowBox[
{"penaltyL2"," ","="," ",RowBox[{"Information","[",RowBox[{"pESG",","," ","\"L2Regularization\""}],"]"}]}]}],
"Input",CellLabel -> "In[127]:= ",ExpressionUUID -> "1abb904a-064c-410b-9222-ddaf65255d2c"],Cell[
BoxData[
"0",StandardForm],"Output",CellLabel -> "Out[127]= ",ExpressionUUID -> "cf53f048-97f7-4292-adc6-1f6dae867ecc"],Cell[
BoxData[
"100.`",StandardForm],"Output",CellLabel -> "Out[128]= ",ExpressionUUID -> "1c7c6bc1-7443-4aec-ae9e-de274fc44012"]},
Open],ExpressionUUID -> "d4c954dc-d8e4-4cd2-a0be-e7e70f52b4ed"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["5",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","Build"," ","another"," ","linear"," ","regression"," ","model"," ","for",StyleBox[
RowBox[{" ","\""}]],"ESG"," ","controversy"," ","score",StyleBox[RowBox[{"\""," "}]],"using"," ","the"," ","same"," ","attributes",StyleBox[
RowBox[{","," "}]],"but"," ","with"," ","the"," ","L1"," ","regularization"," ","coefficient"," ","equal"," ","to"," ","10"," ","and"," ","the"," ","L2"," ","regularization"," ","coefficient"," ","equal"," ","to"," ","0",StyleBox[
RowBox[{"."," ",StyleBox["[",FontWeight -> Bold]}]],StyleBox["1",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],
"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,0.792156862745098`,
0.9215686274509803`],ExpressionUUID -> "0cdd4793-646b-42e7-b984-63f0fceda6fc"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"pESGL1"," ","="," ",RowBox[{"Predict","[",RowBox[{RowBox[
{"dataR"," ","\[Rule]"," ","\"ESG controversy score\""}],","," ",RowBox[{"Method"," ","\[Rule]"," ",RowBox[
{"{",RowBox[{"\"LinearRegression\"",",","\n",RowBox[{"\"L1Regularization\""," ","\[Rule]","10"}],","," ","\n",RowBox[
{"\"L2Regularization\""," ","\[Rule]"," ","0"}]}],"}"}]}]}],"]"}]}]],"Input",CellLabel -> "In[129]:= ",
ExpressionUUID -> "cceb7f1d-1e1a-4ae3-82a0-b1b133315fd6"],Cell[
BoxData[InterpretationBox[
RowBox[{TagBox["PredictorFunction","SummaryHead"],"[",DynamicModuleBox[{Set[Typeset`open$$,
False],Set[Typeset`embedState$$,"Ready"]},TemplateBox[{PaneSelectorBox[{False -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxOpener"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{},{{},{PointSize[0.125`],GrayLevel[0.55`],PointBox[
{{-1,1.5`},{0,2.3`},{1,0.8`},{2,2},{3,1.3`},{4,4.`}}]},{GrayLevel[0.7`],AbsoluteThickness[
1.5`],BSplineCurveBox[{{-1,2},{0,2},{1,1},{2,1},{4,2},{5,4}}]}},{}},Axes -> {False,False},
AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},
FrameStyle -> Directive[Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},
GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},
PlotRange -> {All,All},PlotRangeClipping -> True,PlotRangePadding -> {{1,1},{1,1}},
Ticks -> {None,None},Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[
3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],
-1]]]}],Frame -> True,FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[
Tiny],RGBColor[0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[
{{RowBox[{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TagBox[TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"\"LinearRegression\"","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{},{{},{PointSize[0.125`],GrayLevel[0.55`],PointBox[
{{-1,1.5`},{0,2.3`},{1,0.8`},{2,2},{3,1.3`},{4,4.`}}]},{GrayLevel[0.7`],AbsoluteThickness[
1.5`],BSplineCurveBox[{{-1,2},{0,2},{1,1},{2,1},{4,2},{5,4}}]}},{}},Axes -> {False,False},
AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},
FrameStyle -> Directive[Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},
GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},
PlotRange -> {All,All},PlotRangeClipping -> True,PlotRangePadding -> {{1,1},{1,1}},
Ticks -> {None,None},Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[
3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],
-1]]]}],Frame -> True,FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[
Tiny],RGBColor[0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[
{{RowBox[{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TagBox[TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"\"LinearRegression\"","SummaryItem"]}]},{RowBox[{TagBox["\"Number of training examples: \"",
"SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["1007","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],RuleDelayed[DynamicModuleValues,
{}],ExpressionUUID -> "2600e3b5-959a-470f-be5c-53bb96d6fd3e"],"]"}],PredictorFunction[
Association["ExampleNumber" -> 1007,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 1007,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 8796982626604635691,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 3048770112971283653,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 7995756787427592876]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-1.8557395047893887`*^-4,0.9883744206846383`,0.14829555426122099`,0.02297298334490654`,-0.021240101047951685`,0.004441735061481938`,0.00640547147448637`,-0.006434810146863741`,0.0064104637159583516`,0.001003717899411205`,1.5924695471878101`*^-4,-7.58035068259314`*^-4,7.946700282965741`*^-4},{-7.67159351371406`*^-6,0.012162222702450693`,0.013071097850151533`,-0.6552865469461218`,-0.051271821391373144`,-0.02940183103273892`,-1.427671272302388`*^-4,-0.004194114545300663`,-0.00935486405686776`,-0.3964797005030117`,-0.0429879579895007`,-0.09689298636514285`,0.6310705253971389`},{-4.698605689082378`*^-6,0.01183612382180464`,0.012042627514490268`,-0.5912666816641119`,-0.05005934413846577`,-0.03032686229504157`,-0.001449638925331002`,-0.004277555623736224`,0.006496566933392749`,-0.23938095871132964`,-0.0351564504758755`,0.0468840264502437`,-0.7654364769581903`},{1.9731383095129947`*^-5,-0.007258289166954043`,0.01832837907140844`,0.016732367019794518`,0.013341468643799594`,-0.5325748911615641`,-0.08163896602934263`,-0.41484258622494136`,0.6812655716589838`,0.020775113014791874`,0.14367265845555038`,-0.22679344484788203`,-0.01125299070618905`},{2.816097091681909`*^-6,0.003705380972339814`,0.0027977750705052424`,8.372938794488826`*^-4,0.052567711413827656`,-0.33595991401233155`,-0.013875552209488466`,0.04704523689116493`,-0.22468708229570364`,0.1601050998862639`,-0.7805989777610134`,-0.4419544285487304`,-0.03410453360315299`},{6.2371199040981594`*^-6,0.001809779857626149`,0.025211033649630153`,0.0073836227167722954`,0.07486633096612477`,-0.5397199938475072`,-0.025429202973445964`,0.07811979985823411`,-0.06796182044502787`,-0.030122323726854153`,-0.2015710985721824`,0.8021254435889257`,0.0780533492797489`},{1.0970570589503664`*^-6,0.0019240633790038324`,0.0046930403696330775`,0.0020804530237118414`,0.005617498677537646`,-0.06124132808561232`,0.05506538358045386`,0.8771327267262345`,0.4648183628964002`,-0.004326849730147628`,-0.0062900090134989034`,-0.0875307220538463`,-0.004224702964404554`},{-1.0661791342658116`*^-5,0.008208330598447765`,0.005639468077853123`,-0.46246969365344437`,-0.02728900742220981`,0.027464329023041054`,0.003520727028383058`,0.007883238512992169`,0.0157907812467474`,0.8707098833000042`,0.11226057093612901`,0.07835143649620191`,0.08557247657600799`},{9.316018827872233`*^-6,0.0038909620210056954`,0.026489073778518973`,0.0062489223166789865`,0.08256510491176064`,-0.5405500714969758`,0.07983342503774747`,0.2004081440760438`,-0.5075349440509056`,-0.012785239958328264`,0.5577512059425759`,-0.2893931076907711`,-0.033256633254031887`},{-3.245216066552585`*^-6,-0.008129426169464335`,0.002146209997489204`,0.0026577586661059352`,-0.01727401450937664`,-0.017081263030592465`,0.9913730523313671`,-0.09597861876649479`,0.0654696268057684`,0.0011559452411665741`,-0.04941359242917056`,0.023776591804597392`,0.0022404396736638394`},{2.2466343005350333`*^-4,0.14817838201880595`,-0.9876305352635909`,-0.012559890797028572`,-0.023362224901808403`,-0.04191048960293024`,0.002979189935418778`,0.0033571820668867143`,-0.0011378590681853486`,-0.0030030639780491844`,0.009640382150114965`,0.006733809240009`,5.180541807677981`*^-4},{2.7102262157216494`*^-5,0.025478264311716455`,-0.023215403672903107`,-0.07780677421321192`,0.9886507802228061`,0.10791619719542726`,0.014331077795648607`,-0.02649189407698267`,0.04917894333149045`,-0.014098014989317273`,0.006744004277503196`,-0.009446462468719045`,-0.004743142039059076`},{0.9999999568124154`,1.4972895524847864`*^-4,2.494787191480495`*^-4,-3.972737188857026`*^-6,-2.8116771505403864`*^-5,2.7108379599476546`*^-5,4.382209705570634`*^-6,3.226346005619551`*^-6,-7.715443852626172`*^-6,5.814659115834973`*^-6,-6.34601359827671`*^-6,2.500601350876403`*^-6,2.469795989612057`*^-6}},
"Precisions" -> {2.8658986648380616`*^-4,18.66023183054173`,25.461324072156554`,194.38872339006073`,273.44358621630687`,313.5035116384137`,1006.6961460309421`,1343.315859900595`,2163.0557354715334`,2541.739278883981`,4612.073898855507`,7534.556958635849`,25482.514512008882`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499277`,0.009146984843098319`,0.008662863386295936`,0.03201969057497516`,0.4760999158331675`,0.30155210090069506`,0.2487729478291958`,0.006042477192651441`,0.3815092675491559`,0.0015480930516385306`,0.27875878701886797`,0.06452104640019861`,113.23634558093346`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5482887578412076456]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3076352913612197707]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3076352913612197707]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.102786`,"MaxTrainingMemory" -> 730536,"DataMemory" -> 353280,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,6,16.979026`7.982487758162149},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8756468152076703`,0.8756468152076703`,0.9873149806807656`,1.0095993886038757`,1.1373304036178937`,1.1401092543508784`,1.1604642837424621`,1.1759488306591859`,1.1868678088071614`,1.251697360510495`,1.3697866421685065`},
"LeftBoundary" -> 0.9873149806807656`,"LeftScale" -> 0.05583408273654766`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-14.683195498853564`,0.5786018378702206`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 7572396328986188030]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1500382612011203618]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["Standardize",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Mean" -> {0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 3631862599087118667]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{0.03972011059522629`,-0.15578825771808624`,-0.3032674193382263`,0.1697862148284912`,0.06928092241287231`,-0.12224914133548737`},{-0.3037623167037964`,0.2442009449005127`,-0.41829925775527954`,0.5183126926422119`,0.7185214161872864`,0.034876640886068344`},{1.11789870262146`,0.06451744586229324`,0.2761942148208618`,-0.21557849645614624`,-0.347463995218277`,-0.22760500013828278`},{-0.2731706202030182`,-0.8212507963180542`,1.0276328325271606`,0.11630996316671371`,-0.7739960551261902`,-0.5578123927116394`},{-0.2470545768737793`,-0.39912769198417664`,-0.20223714411258698`,-0.6258736848831177`,0.06271404772996902`,0.822462797164917`},{0.7651844024658203`,-0.607970654964447`,-0.1983891725540161`,0.09799265116453171`,0.0658055767416954`,0.3305623531341553`},{-0.3588855564594269`,0.15606559813022614`,0.21148431301116943`,-0.1649528592824936`,-0.32789114117622375`,0.5183995366096497`},{0.027751944959163666`,-0.1765281856060028`,0.2528044283390045`,0.29958608746528625`,0.2814983129501343`,-0.27091071009635925`},{0.4334915578365326`,0.21868975460529327`,0.3313189148902893`,0.15218040347099304`,0.6548845767974854`,0.02975352294743061`},{0.05514517053961754`,0.8787866234779358`,0.18280209600925446`,-0.6141870021820068`,0.5653268098831177`,0.2905510663986206`},{-0.23993176221847534`,-0.017175914719700813`,0.10568251460790634`,-0.24191078543663025`,-0.6953346133232117`,-0.2047688215970993`},{-0.7110679149627686`,-0.6357394456863403`,0.46429187059402466`,-0.173386812210083`,-0.4404087960720062`,0.1353435516357422`},{0.019231244921684265`,0.03258339688181877`,0.11384154111146927`,-0.20764970779418945`,-0.9780294895172119`,-0.0391814224421978`},{0.5275387763977051`,0.11234533041715622`,-0.7592102885246277`,0.6195807456970215`,-0.6660134196281433`,4.3285827268846333`*^-4},{-0.08919527381658554`,0.505937933921814`,-0.26045292615890503`,0.4190792739391327`,0.6030683517456055`,-0.24370768666267395`},{-0.361797958612442`,-0.11218204349279404`,-0.4293869137763977`,0.48013418912887573`,0.5854218602180481`,0.8115440011024475`},{-0.38054990768432617`,0.2130960375070572`,-0.39035171270370483`,-0.29974624514579773`,-0.4751039147377014`,0.1737474501132965`},{0.13729500770568848`,0.4861004650592804`,-0.14435075223445892`,-0.026394639164209366`,0.7842423319816589`,0.13296456634998322`},{0.8097424507141113`,-0.18874762952327728`,0.19114966690540314`,-0.6109498143196106`,-0.2629683315753937`,-0.27042651176452637`},{-0.9196298718452454`,-0.39173606038093567`,0.17258886992931366`,-0.6131251454353333`,0.5276080369949341`,0.75865638256073`}}]},
"Version" -> {12.3`,1},"ID" -> 7898488494113727228]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 9129657201508916728]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Numerical"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 3605005846534147222]],MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.6880768016911611`},"StandardDeviation" -> {0.3037042673953065`},"Output" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3995372887227076068]],MachineLearning`MLProcessor["FromVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 1260058274441559957]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Numerical","Weight" -> 1],
"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]]},
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"ProbabilityPostprocessor" -> Identity,"InverseProcessorFunction" -> Function[Plus[
0.6880768016911611`,Times[0.3037042673953065`,Slot[1]]]],"ProcessorFunction" -> Function[
Plus[-2.2656145321644394`,Times[3.292676815431057`,Slot[1]]]],"Name" -> "value","Quantiles" -> {-2.2656145321644394`,1.0270622832666176`},
"Mean" -> 0.6880768016911618`],"LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit",
Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",Association[
"Index" -> "ESG controversy score","Order" -> {"ESG controversy score","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> Function[DiracDelta[
Plus[Slot[2],Times[-1,Slot[1]]]]],"Threshold" -> 0,"PerformanceGoal" -> Automatic,
"BatchProcessing" -> Automatic,"Model" -> Association["MeanFunction" -> LinearLayer[
Association["Type" -> "Linear","Arrays" -> Association["Weights" -> RawArray["Real32",
{{0.`,0.030264198780059814`,0.`,0.`,0.`,-0.07952575385570526`,-0.13703183829784393`,0.`,0.01059345155954361`,0.`,0.`,0.010121466591954231`,-0.18655343353748322`,0.`,0.`,0.`,0.`,0.`}}],
"Biases" -> RawArray["Real32",{0.`}]],"Parameters" -> Association["OutputDimensions" -> {1},
"$OutputSize" -> 1,"$InputSize" -> 18,"$InputDimensions" -> {18}],"Inputs" -> Association[
"Input" -> NeuralNetworks`TensorT[{18},NeuralNetworks`AtomT]],"Outputs" -> Association[
"Output" -> NeuralNetworks`TensorT[{1},NeuralNetworks`RealT]]],Association["Version" -> "12.3.3",
"Unstable" -> False]],"DistributionData" -> {NormalDistribution,1.0014897412879906`},
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Processors" -> {MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {0.08286256303646829`,0.26796160294993626`,9.024856717412577`*^-4,-0.2512974054242871`,0.19234573830583115`,0.23715457103857074`,-0.03615462530551897`,-0.03745311371801651`,0.06560238993583603`,0.0773965184471718`,0.03687406881267707`,-0.019601496349158254`,-0.026096361322543078`,0.0459982984604871`,0.12866969499486078`,-0.0013001578117068408`,-0.01654195815131514`,0.01076511900521683`},
"StandardDeviation" -> {0.41615510263813754`,0.4915152060913413`,0.3043141372319548`,0.43671635880774573`,0.48330144729795976`,0.33941103251683585`,0.40575239814703895`,0.4417894399742324`,1.9732755083004943`,1.5891567382162501`,1.5865770820255345`,0.21094506483049452`,0.45179394864240013`,1.3537277114640738`,2.2388032586723954`,1.004199092456369`,0.903122424096663`,1.0040533130873166`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 2114874884148887883]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LinearRegression","PostProcessor" -> MachineLearning`MLProcessor[
"Identity"],"Options" -> Association["L1Regularization" -> Association["Value" -> 10,
"Options" -> Association[]],"L2Regularization" -> Association["Value" -> 0,"Options" -> Association[]],
"OptimizationMethod" -> Association["Value" -> "OrthantWiseQuasiNewton","Options" -> Association[]],
MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"PanelCell" -> None,"TrainingFunction" -> Predict,"EMIterations" -> Missing["KeyAbsent",
"EMIterations"],"ProcessorEntropyShift" -> -1.1917008556781277`,"PreprocessingTime" -> 0.48262`6.135150308809439,
"LossName" -> "StandardDeviation","BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[
0.20569712941819263`,0.040896832140841256`],"StandardDeviation" -> Around[0.29521007243125785`,
0.012895586494751948`],"EvaluationTime" -> 2.8281539204332333`*^-5,"TestSize" -> 807,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5182166435911073`,"TrainingSize" -> 200,
"TrainingTime" -> 0.15848931924611134`,"TrainingMemory" -> 175872,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20569712941819263`,0.0289184273358368`]},"StandardDeviationHistory" -> {Around[
0.29521007243125785`,0.009118556657816763`]},"Configuration" -> {"LinearRegression","L1Regularization" -> 10,"L2Regularization" -> 0,"OptimizationMethod" -> Automatic,MaxIterations -> 30}],
TypeSystem`Struct[{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory","Configuration"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}]}],
Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "LinearRegression",
"Options" -> Association["L1Regularization" -> Association["Value" -> 10],"L2Regularization" -> Association[
"Value" -> 0],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
0.6917800275472993`,0.02237804536842416`],"StandardDeviation" -> Around[0.3037577704825608`,
0.030176472447320454`],"EvaluationTime" -> 3.9810717055349695`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4786979089851593`,"TrainingSize" -> 10,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 97128,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.6917800275472993`,0.015823667629712934`]},"StandardDeviationHistory" -> {Around[
0.3037577704825608`,0.021337988299789303`]}],Association["MeanCrossEntropy" -> Around[
0.2969207862968857`,0.02437609249119488`],"StandardDeviation" -> Around[0.31506641791793843`,
0.010078369168632983`],"EvaluationTime" -> 2.8056092682624725`*^-5,"TestSize" -> 967,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4554417581036989`,"TrainingSize" -> 40,
"TrainingTime" -> 0.12589254117941673`,"TrainingMemory" -> 118872,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2969207862968857`,0.01723650029935438`]},"StandardDeviationHistory" -> {Around[
0.31506641791793843`,0.0071264831824418085`]}],Association["MeanCrossEntropy" -> Around[
0.20569712941819263`,0.040896832140841256`],"StandardDeviation" -> Around[0.29521007243125785`,
0.012895586494751948`],"EvaluationTime" -> 2.8281539204332333`*^-5,"TestSize" -> 807,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5182166435911073`,"TrainingSize" -> 200,
"TrainingTime" -> 0.15848931924611134`,"TrainingMemory" -> 175872,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20569712941819263`,0.0289184273358368`]},"StandardDeviationHistory" -> {Around[
0.29521007243125785`,0.009118556657816763`]}],Association["MeanCrossEntropy" -> Around[
0.24695598953501163`,0.027686665156477594`],"StandardDeviation" -> Around[0.3059339837926671`,
0.008398940651408672`],"EvaluationTime" -> 3.4505247515321894`*^-5,"TestSize" -> 804,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4857574477121127`,"TrainingSize" -> 806,
"TrainingTime" -> 0.11035701647176671`,"TrainingMemory" -> 408504.`,"ExperimentCount" -> 4,
"MeanCrossEntropyHistory" -> {Around[0.2374661531228372`,0.04882677445797389`],Around[
0.24424309289392648`,0.0625911417543991`],Around[0.26736276708018597`,0.056941882858536234`],Around[
0.2387519450430968`,0.049422782649487844`]},"StandardDeviationHistory" -> {Around[
0.3021305700796226`,0.01484114218176724`],Around[0.30667514255061`,0.018923388028067114`],Around[
0.31236543128617483`,0.016705195645119936`],Around[0.30256479125426117`,0.01491919101993424`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 3.4505247515321894`*^-5,
"ModelMemory" -> 17536.`,"StandardDeviation" -> Around[0.3059339837926671`,0.008398940651408672`],
"TrainingMemory" -> 408504.`,"TrainingTime" -> 0.14787781090207083`],"Index" -> 1]],
TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[String],TypeSystem`Assoc[
TypeSystem`AnyType,TypeSystem`Struct[{"Value"},{TypeSystem`AnyType}],4]}],TypeSystem`Struct[
{"Experiments","PredictedPerformances","Index"},{TypeSystem`Vector[TypeSystem`Struct[
{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Real],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Real],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,TypeSystem`AnyLength],TypeSystem`Vector[
TypeSystem`AnyType,TypeSystem`AnyLength]}],4],TypeSystem`Struct[{"EvaluationTime","ModelMemory","StandardDeviation","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[
Real]}],TypeSystem`Atom[Integer]}],1],Association[]],"MaxTrainingSize" -> 1007,"PreprocessorEvaluationTime" -> 6.484375`*^-6,
"PreprocessorMemory" -> 171264,"InputDimension" -> 18,"OutputDimension" -> 1,"BaselineLogProbability" -> -1.4189385332046727`,
"VariableBudget" -> True,"CheckpointingInfo" -> Association["Checkpointing" -> False],
"UserStop" -> False,"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[
{Association["TrainingSizes" -> 10,"TimeBudgets" -> 0.004084114478597486`,"ElapsedTimes" -> 0.017301`,
"ExperimentCounts" -> 1],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.020420572392987443`,
"ElapsedTimes" -> 0.169203`,"ExperimentCounts" -> 1],Association["TrainingSizes" -> 200,
"TimeBudgets" -> 0.10210286196493717`,"ElapsedTimes" -> 0.177091`,"ExperimentCounts" -> 1],Association[
"TrainingSizes" -> 806,"TimeBudgets" -> 0.5105143098246858`,"ElapsedTimes" -> 0.47929299999999997`,
"ExperimentCounts" -> 4]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 4892019739639286350],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 8743763137975832326],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 638158737405072954],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 3739054068340455789],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 1643184809429947270],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 6068938058943592058],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 3665674168742687010],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 4485255440931136732],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 1616026996013921204],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 3711090835200864946],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 1168254737395040342],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 1103372986321166989],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 3803996201392471741]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 1.346995`,"MaxTrainingMemory" -> 973576,"DataMemory" -> 2080416,
"FunctionMemory" -> 279040,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,6,18.118084`8.010687253075533},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]],Selectable -> False,Editable -> False,
SelectWithContents -> True],StandardForm],"Output",CellLabel -> "Out[129]= ",ExpressionUUID -> "ac3baa27-78fa-4b4d-8b3d-57cb22cbea7d"]},
Open],ExpressionUUID -> "6f828cc0-780a-4d13-abc3-d040581d3ba2"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[","pESGL1","]"}]],"Input",CellLabel -> "In[130]:= ",
ExpressionUUID -> "bd27fb73-c82c-4e3c-abce-865e79f6e0bf"],Cell[
BoxData[InterpretationBox[
TagBox[StyleBox[FrameBox[GridBox[{{ItemBox[FrameBox[StyleBox["\"Predictor information\"",
12,"SuggestionsBarText",StripOnInput -> False],FrameMargins -> {{10,5},{-4,2}},FrameStyle -> None,
StripOnInput -> False],ItemSize -> {Automatic,1},Alignment -> {Left,Bottom},FrameStyle -> Opacity[
0.1`],Background -> RGBColor[0.96`,0.96`,0.96`],Frame -> {{False,False},{True,False}},
StripOnInput -> False]},{ItemBox[TagBox[FrameBox[TagBox[GridBox[{{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Data type\>",ExpressionUUID -> "0954865d-ff17-4f4f-b8d0-6aebf36db130"],
TextCell["Data type"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[
TooltipBox[TemplateBox[{InterpretationBox[Cell[
"\<Mixed\>",ExpressionUUID -> "abd90a91-f5d8-4d59-b179-09471561a6b0"],
TextCell["Mixed"]],StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},"RowDefault"],
GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Standard deviation\>",ExpressionUUID -> "e1846256-a300-4281-802d-9bf22f10d27d"],
TextCell["Standard deviation"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[
TooltipBox[TemplateBox[{"0.2952100724312578528`3.",StyleBox[TemplateBox[{"\" \[PlusMinus] \"","0.0128955864947519483`2."},
"RowDefault"],{10,Opacity[0.5`]},StripOnInput -> False]},"RowDefault"],TemplateBox[
{"\"95% confidence interval: [\"","0.2694188994417539562`3.","\", \"","0.3210012454207617494`3.","\"]\""},
"RowDefault"],TooltipStyle -> {}],Function[Annotation[Slot[1],Row[{"95% confidence interval: [",0.2694188994417539562`3.,", ",0.3210012454207617494`3.,"]"}],
"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Method\>",ExpressionUUID -> "35ce0e64-f898-42df-8611-e1343c6109dd"],TextCell[
"Method"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[TooltipBox[
InterpretationBox[Cell[
"\<LinearRegression\>",ExpressionUUID -> "64ba49b4-7bd6-4f99-bb4a-6812fe61350e"],
TextCell["LinearRegression"]],StyleBox[TagBox[GridBox[{{"\"L1Regularization\"","10"},{"\"L2Regularization\"","0"},{"\"OptimizationMethod\"","\"OrthantWiseQuasiNewton\""}},
GridBoxAlignment -> {"Columns" -> {{Left}}},AutoDelete -> False,GridBoxBackground -> {"Columns" -> {{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},"Rows" -> {{None}}},GridBoxFrame -> {"Columns" -> {{True}},"Rows" -> {{True}}},
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},GridBoxSpacings -> {"Columns" -> {{1}},"Rows" -> {{1}}},
FrameStyle -> GrayLevel[0.84`]],"Grid"],FontFamily -> "Verdana",StripOnInput -> False]],
Function[Annotation[Slot[1],Style[Grid[{{"L1Regularization",10},{"L2Regularization",0},{"OptimizationMethod","OrthantWiseQuasiNewton"}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"],"Tooltip"]]]},{TemplateBox[
{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Single evaluation time\>",
ExpressionUUID -> "981582ce-8765-4b49-a326-978f573968ca"],TextCell["Single evaluation time"]],
GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{"14.`",RowBox[
{"\"ms\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"example\""}],"milliseconds per example",FractionBox[
"\"Milliseconds\"","\"Examples\""]},"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Batch evaluation speed\>",ExpressionUUID -> "1e6ce0e2-4b3a-468d-9a19-ad1875461948"],
TextCell["Batch evaluation speed"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"6.84`",RowBox[{"\"examples\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"ms\""}],"examples per millisecond",FractionBox[
"\"Examples\"","\"Milliseconds\""]},"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[TagBox[TooltipBox[InterpretationBox[Cell[
"\<Loss\>",ExpressionUUID -> "2244801d-eea9-4c62-a768-ffef75aceb00"],
TextCell["Loss"]],"\"Mean cross entropy\"",LabelStyle -> "TextStyling"],Function[
Annotation[Slot[1],"Mean cross entropy","Tooltip"]]],GrayLevel[0.4`],StripOnInput -> False]},
"RowDefault"],TagBox[TooltipBox[TemplateBox[{"0.2056971294181926257`3.",StyleBox[
TemplateBox[{"\" \[PlusMinus] \"","0.0408968321408412563`2."},"RowDefault"],{10,Opacity[
0.5`]},StripOnInput -> False]},"RowDefault"],TemplateBox[{"\"95% confidence interval: [\"","0.1239034651365101131`3.","\", \"","0.2874907936998751246`3.","\"]\""},
"RowDefault"],TooltipStyle -> {}],Function[Annotation[Slot[1],Row[{"95% confidence interval: [",0.1239034651365101131`3.,", ",0.2874907936998751246`3.,"]"}],
"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Model memory\>",ExpressionUUID -> "5538e5e2-cbc4-492c-8b41-f6fcb7f47295"],
TextCell["Model memory"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"281.`","\"kB\"","kilobytes","\"Kilobytes\""},"Quantity",SyntaxForm -> Mod]},{TemplateBox[
{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Training examples used\>",
ExpressionUUID -> "4317563f-b268-4f03-b447-a4efac85f8cb"],TextCell["Training examples used"]],
GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{"1007","\"examples\"","examples","\"Examples\""},
"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[
InterpretationBox[Cell[
"\<Training time\>",ExpressionUUID -> "83aa8395-636c-4579-a3ca-e1ff32d271f2"],
TextCell["Training time"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"1.34`","\"s\"","seconds","\"Seconds\""},"Quantity",SyntaxForm -> Mod]},{ItemBox[
DynamicModuleBox[{Set[MachineLearning`file12Panel`PackagePrivate`pos$$,1]},DynamicBox[
ToBoxes[Show[Part[{Graphics[{{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[PointSize[
0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.302585092994046`,-1.1915247028189973`},{3.6888794541139363`,-1.1549718118492156`},{5.298317366548036`,-1.2200680661358245`},{6.692083742506628`,-1.1843859395444636`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,-1.1915247028189973`}},{{3.6888794541139363`,-1.1549718118492156`}},{{5.298317366548036`,-1.2200680661358245`}},{{6.692083742506628`,-1.1843859395444636`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,-1.2961564507044159`},{2.302585092994046`,-1.0968111828437923`},{2.302585092994046`,-1.0968111828437923`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,-1.1874826875709619`},{3.6888794541139363`,-1.123484697129583`},{3.6888794541139363`,-1.123484697129583`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,-1.264733631059381`},{5.298317366548036`,-1.1773125063751615`},{5.298317366548036`,-1.1773125063751615`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,-1.212223268861937`},{6.692083742506628`,-1.1573025858318162`},{6.692083742506628`,-1.1573025858318162`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,-1.2236845247073027`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{-1.2236845247073027`,-1.1549718118492156`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}],Graphics[{{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.302585092994046`,0.6917800275472993`},{3.6888794541139363`,0.2969207862968857`},{5.298317366548036`,0.20569712941819263`},{6.692083742506628`,0.24695598953501163`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,0.6917800275472993`}},{{3.6888794541139363`,0.2969207862968857`}},{{5.298317366548036`,0.20569712941819263`}},{{6.692083742506628`,0.24695598953501163`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,0.6694019821788751`},{2.302585092994046`,0.7141580729157234`},{2.302585092994046`,0.7141580729157234`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,0.2725446938056908`},{3.6888794541139363`,0.32129687878808055`},{3.6888794541139363`,0.32129687878808055`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,0.16480029727735138`},{5.298317366548036`,0.24659396155903388`},{5.298317366548036`,0.24659396155903388`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,0.21926932437853403`},{6.692083742506628`,0.27464265469148924`},{6.692083742506628`,0.27464265469148924`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,0.6917800275472993`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}],Graphics[{{{},{{{},{},Tooltip[{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6917800275472993`},{3.6888794541139363`,0.2969207862968857`},{5.298317366548036`,0.20569712941819263`},{6.692083742506628`,0.24695598953501163`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",10},{"L2Regularization",0},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]},{Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.6917800275472993`}},{{3.6888794541139363`,0.2969207862968857`}},{{5.298317366548036`,0.20569712941819263`}},{{6.692083742506628`,0.24695598953501163`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",10},{"L2Regularization",0},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,0.6917800275472993`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}]},MachineLearning`file12Panel`PackagePrivate`pos$$],
PlotLabel -> Grid[{{Button[Deploy[MouseAppearance[Mouseover[Graphics[{GrayLevel[0.25`],Line[
{{0,0.8`},{-1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},
BaselinePosition -> Scaled[0.1`]],Graphics[{RGBColor[0.27450980392156865`,0.5372549019607843`,
0.792156862745098`],Line[{{0,0.8`},{-1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},
ImagePadding -> {{1,1},{1,1}},BaselinePosition -> Scaled[0.1`]]],"LinkHand"]],Set[
MachineLearning`file12Panel`PackagePrivate`pos$$,Max[Plus[MachineLearning`file12Panel`PackagePrivate`pos$$,
-1],1]],Appearance -> "Frameless"],Part[{"Standard deviation",Tooltip["Learning curve",
"mean cross entropy for best algorithm at each training size"],Tooltip["Learning curves for all algorithms",
"mean cross entropy at each training size"]},MachineLearning`file12Panel`PackagePrivate`pos$$],Button[
Deploy[MouseAppearance[Mouseover[Graphics[{GrayLevel[0.25`],Line[{{0,0.8`},{1,0},{0,-0.8`}}]},
ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},BaselinePosition -> Scaled[
0.1`]],Graphics[{RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`],Line[
{{0,0.8`},{1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},
BaselinePosition -> Scaled[0.1`]]],"LinkHand"]],Set[MachineLearning`file12Panel`PackagePrivate`pos$$,
Min[Plus[MachineLearning`file12Panel`PackagePrivate`pos$$,1],Length[{Graphics[{{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,-1.1915247028189973`},{3.6888794541139363`,-1.1549718118492156`},{5.298317366548036`,-1.2200680661358245`},{6.692083742506628`,-1.1843859395444636`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,-1.1915247028189973`}},{{3.6888794541139363`,-1.1549718118492156`}},{{5.298317366548036`,-1.2200680661358245`}},{{6.692083742506628`,-1.1843859395444636`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,-1.2961564507044159`},{2.302585092994046`,-1.0968111828437923`},{2.302585092994046`,-1.0968111828437923`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,-1.1874826875709619`},{3.6888794541139363`,-1.123484697129583`},{3.6888794541139363`,-1.123484697129583`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,-1.264733631059381`},{5.298317366548036`,-1.1773125063751615`},{5.298317366548036`,-1.1773125063751615`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,-1.212223268861937`},{6.692083742506628`,-1.1573025858318162`},{6.692083742506628`,-1.1573025858318162`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,-1.2236845247073027`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{-1.2236845247073027`,-1.1549718118492156`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}],Graphics[{{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.302585092994046`,0.6917800275472993`},{3.6888794541139363`,0.2969207862968857`},{5.298317366548036`,0.20569712941819263`},{6.692083742506628`,0.24695598953501163`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.302585092994046`,0.6917800275472993`}},{{3.6888794541139363`,0.2969207862968857`}},{{5.298317366548036`,0.20569712941819263`}},{{6.692083742506628`,0.24695598953501163`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.302585092994046`,0.6694019821788751`},{2.302585092994046`,0.7141580729157234`},{2.302585092994046`,0.7141580729157234`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,0.2725446938056908`},{3.6888794541139363`,0.32129687878808055`},{3.6888794541139363`,0.32129687878808055`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.298317366548036`,0.16480029727735138`},{5.298317366548036`,0.24659396155903388`},{5.298317366548036`,0.24659396155903388`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.692083742506628`,0.21926932437853403`},{6.692083742506628`,0.27464265469148924`},{6.692083742506628`,0.27464265469148924`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,0.6917800275472993`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}],Graphics[{{{},{{{},{},Tooltip[{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],Line[{{2.302585092994046`,0.6917800275472993`},{3.6888794541139363`,0.2969207862968857`},{5.298317366548036`,0.20569712941819263`},{6.692083742506628`,0.24695598953501163`}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",10},{"L2Regularization",0},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]},{Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.302585092994046`,0.6917800275472993`}},{{3.6888794541139363`,0.2969207862968857`}},{{5.298317366548036`,0.20569712941819263`}},{{6.692083742506628`,0.24695598953501163`}}}]},
Column[{Style["LinearRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",10},{"L2Regularization",0},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.5490935202292686`,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.5490935202292686`,Log[
1007]},{0,0.6917800275472993`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Automatic}}]}]]],Appearance -> "Frameless"]}},
Alignment -> {Center,Baseline},ItemSize -> {{3,20,3},{2}}]],StandardForm]],RuleDelayed[
DynamicModuleValues,{}],ExpressionUUID -> "67325e4e-e62c-42fc-95e7-4694fcac03a2"],
Alignment -> Center,StripOnInput -> False],"\[SpanFromLeft]"}},AutoDelete -> False,
GridBoxDividers -> {"Columns" -> {False,{Opacity[0.15`]},False}},GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
ColumnWidths -> {Automatic,Automatic},ColumnsEqual -> False,ColumnAlignments -> {Right,Left},
ColumnSpacings -> {1.6`,2.5`},RowSpacings -> 2],"Grid"],FrameMargins -> {{10,10},{10,5}},
FrameStyle -> None,StripOnInput -> False],Deploy,DefaultBaseStyle -> "Deploy"],BaseStyle -> {FontWeight -> "Light",FontSize -> 11,FontFamily -> "Roboto",NumberMarks -> False,Deployed -> False},
Alignment -> Center,StripOnInput -> False]}},GridBoxAlignment -> {"Columns" -> {{Left}}},
DefaultBaseStyle -> "Column",GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
ColumnWidths -> Automatic,ColumnAlignments -> Left,RowLines -> False,RowSpacings -> {2,1}],
Background -> GrayLevel[1],FrameMargins -> {{0,0},{0,0}},FrameStyle -> GrayLevel[
0.85`],RoundingRadius -> 5,StripOnInput -> False],LineBreakWithin -> False,StripOnInput -> False],
Deploy,DefaultBaseStyle -> "Deploy"],MachineLearning`MLInformationObject[PredictorFunction[
Association["ExampleNumber" -> 1007,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 1007,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 8796982626604635691,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 3048770112971283653,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 7995756787427592876]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-1.8557395047893887`*^-4,0.9883744206846383`,0.14829555426122099`,0.02297298334490654`,-0.021240101047951685`,0.004441735061481938`,0.00640547147448637`,-0.006434810146863741`,0.0064104637159583516`,0.001003717899411205`,1.5924695471878101`*^-4,-7.58035068259314`*^-4,7.946700282965741`*^-4},{-7.67159351371406`*^-6,0.012162222702450693`,0.013071097850151533`,-0.6552865469461218`,-0.051271821391373144`,-0.02940183103273892`,-1.427671272302388`*^-4,-0.004194114545300663`,-0.00935486405686776`,-0.3964797005030117`,-0.0429879579895007`,-0.09689298636514285`,0.6310705253971389`},{-4.698605689082378`*^-6,0.01183612382180464`,0.012042627514490268`,-0.5912666816641119`,-0.05005934413846577`,-0.03032686229504157`,-0.001449638925331002`,-0.004277555623736224`,0.006496566933392749`,-0.23938095871132964`,-0.0351564504758755`,0.0468840264502437`,-0.7654364769581903`},{1.9731383095129947`*^-5,-0.007258289166954043`,0.01832837907140844`,0.016732367019794518`,0.013341468643799594`,-0.5325748911615641`,-0.08163896602934263`,-0.41484258622494136`,0.6812655716589838`,0.020775113014791874`,0.14367265845555038`,-0.22679344484788203`,-0.01125299070618905`},{2.816097091681909`*^-6,0.003705380972339814`,0.0027977750705052424`,8.372938794488826`*^-4,0.052567711413827656`,-0.33595991401233155`,-0.013875552209488466`,0.04704523689116493`,-0.22468708229570364`,0.1601050998862639`,-0.7805989777610134`,-0.4419544285487304`,-0.03410453360315299`},{6.2371199040981594`*^-6,0.001809779857626149`,0.025211033649630153`,0.0073836227167722954`,0.07486633096612477`,-0.5397199938475072`,-0.025429202973445964`,0.07811979985823411`,-0.06796182044502787`,-0.030122323726854153`,-0.2015710985721824`,0.8021254435889257`,0.0780533492797489`},{1.0970570589503664`*^-6,0.0019240633790038324`,0.0046930403696330775`,0.0020804530237118414`,0.005617498677537646`,-0.06124132808561232`,0.05506538358045386`,0.8771327267262345`,0.4648183628964002`,-0.004326849730147628`,-0.0062900090134989034`,-0.0875307220538463`,-0.004224702964404554`},{-1.0661791342658116`*^-5,0.008208330598447765`,0.005639468077853123`,-0.46246969365344437`,-0.02728900742220981`,0.027464329023041054`,0.003520727028383058`,0.007883238512992169`,0.0157907812467474`,0.8707098833000042`,0.11226057093612901`,0.07835143649620191`,0.08557247657600799`},{9.316018827872233`*^-6,0.0038909620210056954`,0.026489073778518973`,0.0062489223166789865`,0.08256510491176064`,-0.5405500714969758`,0.07983342503774747`,0.2004081440760438`,-0.5075349440509056`,-0.012785239958328264`,0.5577512059425759`,-0.2893931076907711`,-0.033256633254031887`},{-3.245216066552585`*^-6,-0.008129426169464335`,0.002146209997489204`,0.0026577586661059352`,-0.01727401450937664`,-0.017081263030592465`,0.9913730523313671`,-0.09597861876649479`,0.0654696268057684`,0.0011559452411665741`,-0.04941359242917056`,0.023776591804597392`,0.0022404396736638394`},{2.2466343005350333`*^-4,0.14817838201880595`,-0.9876305352635909`,-0.012559890797028572`,-0.023362224901808403`,-0.04191048960293024`,0.002979189935418778`,0.0033571820668867143`,-0.0011378590681853486`,-0.0030030639780491844`,0.009640382150114965`,0.006733809240009`,5.180541807677981`*^-4},{2.7102262157216494`*^-5,0.025478264311716455`,-0.023215403672903107`,-0.07780677421321192`,0.9886507802228061`,0.10791619719542726`,0.014331077795648607`,-0.02649189407698267`,0.04917894333149045`,-0.014098014989317273`,0.006744004277503196`,-0.009446462468719045`,-0.004743142039059076`},{0.9999999568124154`,1.4972895524847864`*^-4,2.494787191480495`*^-4,-3.972737188857026`*^-6,-2.8116771505403864`*^-5,2.7108379599476546`*^-5,4.382209705570634`*^-6,3.226346005619551`*^-6,-7.715443852626172`*^-6,5.814659115834973`*^-6,-6.34601359827671`*^-6,2.500601350876403`*^-6,2.469795989612057`*^-6}},
"Precisions" -> {2.8658986648380616`*^-4,18.66023183054173`,25.461324072156554`,194.38872339006073`,273.44358621630687`,313.5035116384137`,1006.6961460309421`,1343.315859900595`,2163.0557354715334`,2541.739278883981`,4612.073898855507`,7534.556958635849`,25482.514512008882`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499277`,0.009146984843098319`,0.008662863386295936`,0.03201969057497516`,0.4760999158331675`,0.30155210090069506`,0.2487729478291958`,0.006042477192651441`,0.3815092675491559`,0.0015480930516385306`,0.27875878701886797`,0.06452104640019861`,113.23634558093346`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5482887578412076456]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3076352913612197707]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026010596878499288`,0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.23095351246514031`,0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 3076352913612197707]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.102786`,"MaxTrainingMemory" -> 730536,"DataMemory" -> 353280,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,6,16.979026`7.982487758162149},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8756468152076703`,0.8756468152076703`,0.9873149806807656`,1.0095993886038757`,1.1373304036178937`,1.1401092543508784`,1.1604642837424621`,1.1759488306591859`,1.1868678088071614`,1.251697360510495`,1.3697866421685065`},
"LeftBoundary" -> 0.9873149806807656`,"LeftScale" -> 0.05583408273654766`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-14.683195498853564`,0.5786018378702206`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 7572396328986188030]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1500382612011203618]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["Standardize",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Mean" -> {0.009146984843098317`,0.008662863386295919`,0.032019690574975154`,0.47609991583316746`,0.3015521009006951`,0.24877294782919573`,0.006042477192651441`,0.3815092675491558`,0.001548093051638529`,0.2787587870188679`,0.06452104640019861`,113.23634558093346`},
"StandardDeviation" -> {0.048118256149485394`,0.043242913027687915`,0.03584653257871526`,0.023760368146292118`,0.03282288415129059`,0.026264653920292903`,0.03758894902308183`,0.03492595907759906`,0.0314888084402728`,0.1991754932254256`,0.060854557727009595`,59.070352999851366`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 3631862599087118667]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{0.03972011059522629`,-0.15578825771808624`,-0.3032674193382263`,0.1697862148284912`,0.06928092241287231`,-0.12224914133548737`},{-0.3037623167037964`,0.2442009449005127`,-0.41829925775527954`,0.5183126926422119`,0.7185214161872864`,0.034876640886068344`},{1.11789870262146`,0.06451744586229324`,0.2761942148208618`,-0.21557849645614624`,-0.347463995218277`,-0.22760500013828278`},{-0.2731706202030182`,-0.8212507963180542`,1.0276328325271606`,0.11630996316671371`,-0.7739960551261902`,-0.5578123927116394`},{-0.2470545768737793`,-0.39912769198417664`,-0.20223714411258698`,-0.6258736848831177`,0.06271404772996902`,0.822462797164917`},{0.7651844024658203`,-0.607970654964447`,-0.1983891725540161`,0.09799265116453171`,0.0658055767416954`,0.3305623531341553`},{-0.3588855564594269`,0.15606559813022614`,0.21148431301116943`,-0.1649528592824936`,-0.32789114117622375`,0.5183995366096497`},{0.027751944959163666`,-0.1765281856060028`,0.2528044283390045`,0.29958608746528625`,0.2814983129501343`,-0.27091071009635925`},{0.4334915578365326`,0.21868975460529327`,0.3313189148902893`,0.15218040347099304`,0.6548845767974854`,0.02975352294743061`},{0.05514517053961754`,0.8787866234779358`,0.18280209600925446`,-0.6141870021820068`,0.5653268098831177`,0.2905510663986206`},{-0.23993176221847534`,-0.017175914719700813`,0.10568251460790634`,-0.24191078543663025`,-0.6953346133232117`,-0.2047688215970993`},{-0.7110679149627686`,-0.6357394456863403`,0.46429187059402466`,-0.173386812210083`,-0.4404087960720062`,0.1353435516357422`},{0.019231244921684265`,0.03258339688181877`,0.11384154111146927`,-0.20764970779418945`,-0.9780294895172119`,-0.0391814224421978`},{0.5275387763977051`,0.11234533041715622`,-0.7592102885246277`,0.6195807456970215`,-0.6660134196281433`,4.3285827268846333`*^-4},{-0.08919527381658554`,0.505937933921814`,-0.26045292615890503`,0.4190792739391327`,0.6030683517456055`,-0.24370768666267395`},{-0.361797958612442`,-0.11218204349279404`,-0.4293869137763977`,0.48013418912887573`,0.5854218602180481`,0.8115440011024475`},{-0.38054990768432617`,0.2130960375070572`,-0.39035171270370483`,-0.29974624514579773`,-0.4751039147377014`,0.1737474501132965`},{0.13729500770568848`,0.4861004650592804`,-0.14435075223445892`,-0.026394639164209366`,0.7842423319816589`,0.13296456634998322`},{0.8097424507141113`,-0.18874762952327728`,0.19114966690540314`,-0.6109498143196106`,-0.2629683315753937`,-0.27042651176452637`},{-0.9196298718452454`,-0.39173606038093567`,0.17258886992931366`,-0.6131251454353333`,0.5276080369949341`,0.75865638256073`}}]},
"Version" -> {12.3`,1},"ID" -> 7898488494113727228]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 9129657201508916728]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Numerical"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 3605005846534147222]],MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.6880768016911611`},"StandardDeviation" -> {0.3037042673953065`},"Output" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3995372887227076068]],MachineLearning`MLProcessor["FromVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 1260058274441559957]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Numerical","Weight" -> 1],
"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]]},
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"ProbabilityPostprocessor" -> Identity,"InverseProcessorFunction" -> Function[Plus[
0.6880768016911611`,Times[0.3037042673953065`,Slot[1]]]],"ProcessorFunction" -> Function[
Plus[-2.2656145321644394`,Times[3.292676815431057`,Slot[1]]]],"Name" -> "value","Quantiles" -> {-2.2656145321644394`,1.0270622832666176`},
"Mean" -> 0.6880768016911618`],"LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit",
Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",Association[
"Index" -> "ESG controversy score","Order" -> {"ESG controversy score","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> Function[DiracDelta[
Plus[Slot[2],Times[-1,Slot[1]]]]],"Threshold" -> 0,"PerformanceGoal" -> Automatic,
"BatchProcessing" -> Automatic,"Model" -> Association["MeanFunction" -> LinearLayer[
Association["Type" -> "Linear","Arrays" -> Association["Weights" -> RawArray["Real32",
{{0.`,0.030264198780059814`,0.`,0.`,0.`,-0.07952575385570526`,-0.13703183829784393`,0.`,0.01059345155954361`,0.`,0.`,0.010121466591954231`,-0.18655343353748322`,0.`,0.`,0.`,0.`,0.`}}],
"Biases" -> RawArray["Real32",{0.`}]],"Parameters" -> Association["OutputDimensions" -> {1},
"$OutputSize" -> 1,"$InputSize" -> 18,"$InputDimensions" -> {18}],"Inputs" -> Association[
"Input" -> NeuralNetworks`TensorT[{18},NeuralNetworks`AtomT]],"Outputs" -> Association[
"Output" -> NeuralNetworks`TensorT[{1},NeuralNetworks`RealT]]],Association["Version" -> "12.3.3",
"Unstable" -> False]],"DistributionData" -> {NormalDistribution,1.0014897412879906`},
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Processors" -> {MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {0.08286256303646829`,0.26796160294993626`,9.024856717412577`*^-4,-0.2512974054242871`,0.19234573830583115`,0.23715457103857074`,-0.03615462530551897`,-0.03745311371801651`,0.06560238993583603`,0.0773965184471718`,0.03687406881267707`,-0.019601496349158254`,-0.026096361322543078`,0.0459982984604871`,0.12866969499486078`,-0.0013001578117068408`,-0.01654195815131514`,0.01076511900521683`},
"StandardDeviation" -> {0.41615510263813754`,0.4915152060913413`,0.3043141372319548`,0.43671635880774573`,0.48330144729795976`,0.33941103251683585`,0.40575239814703895`,0.4417894399742324`,1.9732755083004943`,1.5891567382162501`,1.5865770820255345`,0.21094506483049452`,0.45179394864240013`,1.3537277114640738`,2.2388032586723954`,1.004199092456369`,0.903122424096663`,1.0040533130873166`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 2114874884148887883]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LinearRegression","PostProcessor" -> MachineLearning`MLProcessor[
"Identity"],"Options" -> Association["L1Regularization" -> Association["Value" -> 10,
"Options" -> Association[]],"L2Regularization" -> Association["Value" -> 0,"Options" -> Association[]],
"OptimizationMethod" -> Association["Value" -> "OrthantWiseQuasiNewton","Options" -> Association[]],
MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"PanelCell" -> None,"TrainingFunction" -> Predict,"EMIterations" -> Missing["KeyAbsent",
"EMIterations"],"ProcessorEntropyShift" -> -1.1917008556781277`,"PreprocessingTime" -> 0.48262`6.135150308809439,
"LossName" -> "StandardDeviation","BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[
0.20569712941819263`,0.040896832140841256`],"StandardDeviation" -> Around[0.29521007243125785`,
0.012895586494751948`],"EvaluationTime" -> 2.8281539204332333`*^-5,"TestSize" -> 807,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5182166435911073`,"TrainingSize" -> 200,
"TrainingTime" -> 0.15848931924611134`,"TrainingMemory" -> 175872,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20569712941819263`,0.0289184273358368`]},"StandardDeviationHistory" -> {Around[
0.29521007243125785`,0.009118556657816763`]},"Configuration" -> {"LinearRegression","L1Regularization" -> 10,"L2Regularization" -> 0,"OptimizationMethod" -> Automatic,MaxIterations -> 30}],
TypeSystem`Struct[{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory","Configuration"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}]}],
Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "LinearRegression",
"Options" -> Association["L1Regularization" -> Association["Value" -> 10],"L2Regularization" -> Association[
"Value" -> 0],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
0.6917800275472993`,0.02237804536842416`],"StandardDeviation" -> Around[0.3037577704825608`,
0.030176472447320454`],"EvaluationTime" -> 3.9810717055349695`*^-5,"TestSize" -> 100,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4786979089851593`,"TrainingSize" -> 10,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 97128,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
0.6917800275472993`,0.015823667629712934`]},"StandardDeviationHistory" -> {Around[
0.3037577704825608`,0.021337988299789303`]}],Association["MeanCrossEntropy" -> Around[
0.2969207862968857`,0.02437609249119488`],"StandardDeviation" -> Around[0.31506641791793843`,
0.010078369168632983`],"EvaluationTime" -> 2.8056092682624725`*^-5,"TestSize" -> 967,
"ModelMemory" -> 17536,"ModelUtility" -> 0.4554417581036989`,"TrainingSize" -> 40,
"TrainingTime" -> 0.12589254117941673`,"TrainingMemory" -> 118872,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.2969207862968857`,0.01723650029935438`]},"StandardDeviationHistory" -> {Around[
0.31506641791793843`,0.0071264831824418085`]}],Association["MeanCrossEntropy" -> Around[
0.20569712941819263`,0.040896832140841256`],"StandardDeviation" -> Around[0.29521007243125785`,
0.012895586494751948`],"EvaluationTime" -> 2.8281539204332333`*^-5,"TestSize" -> 807,
"ModelMemory" -> 17536,"ModelUtility" -> 0.5182166435911073`,"TrainingSize" -> 200,
"TrainingTime" -> 0.15848931924611134`,"TrainingMemory" -> 175872,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[0.20569712941819263`,0.0289184273358368`]},"StandardDeviationHistory" -> {Around[
0.29521007243125785`,0.009118556657816763`]}],Association["MeanCrossEntropy" -> Around[
0.24695598953501163`,0.027686665156477594`],"StandardDeviation" -> Around[0.3059339837926671`,
0.008398940651408672`],"EvaluationTime" -> 3.4505247515321894`*^-5,"TestSize" -> 804,
"ModelMemory" -> 17536.`,"ModelUtility" -> 0.4857574477121127`,"TrainingSize" -> 806,
"TrainingTime" -> 0.11035701647176671`,"TrainingMemory" -> 408504.`,"ExperimentCount" -> 4,
"MeanCrossEntropyHistory" -> {Around[0.2374661531228372`,0.04882677445797389`],Around[
0.24424309289392648`,0.0625911417543991`],Around[0.26736276708018597`,0.056941882858536234`],Around[
0.2387519450430968`,0.049422782649487844`]},"StandardDeviationHistory" -> {Around[
0.3021305700796226`,0.01484114218176724`],Around[0.30667514255061`,0.018923388028067114`],Around[
0.31236543128617483`,0.016705195645119936`],Around[0.30256479125426117`,0.01491919101993424`]}]},
"PredictedPerformances" -> Association["EvaluationTime" -> 3.4505247515321894`*^-5,
"ModelMemory" -> 17536.`,"StandardDeviation" -> Around[0.3059339837926671`,0.008398940651408672`],
"TrainingMemory" -> 408504.`,"TrainingTime" -> 0.14787781090207083`],"Index" -> 1]],
TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[String],TypeSystem`Assoc[
TypeSystem`AnyType,TypeSystem`Struct[{"Value"},{TypeSystem`AnyType}],4]}],TypeSystem`Struct[
{"Experiments","PredictedPerformances","Index"},{TypeSystem`Vector[TypeSystem`Struct[
{"MeanCrossEntropy","StandardDeviation","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","StandardDeviationHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Real],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Real],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,TypeSystem`AnyLength],TypeSystem`Vector[
TypeSystem`AnyType,TypeSystem`AnyLength]}],4],TypeSystem`Struct[{"EvaluationTime","ModelMemory","StandardDeviation","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[
Real]}],TypeSystem`Atom[Integer]}],1],Association[]],"MaxTrainingSize" -> 1007,"PreprocessorEvaluationTime" -> 6.484375`*^-6,
"PreprocessorMemory" -> 171264,"InputDimension" -> 18,"OutputDimension" -> 1,"BaselineLogProbability" -> -1.4189385332046727`,
"VariableBudget" -> True,"CheckpointingInfo" -> Association["Checkpointing" -> False],
"UserStop" -> False,"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[
{Association["TrainingSizes" -> 10,"TimeBudgets" -> 0.004084114478597486`,"ElapsedTimes" -> 0.017301`,
"ExperimentCounts" -> 1],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.020420572392987443`,
"ElapsedTimes" -> 0.169203`,"ExperimentCounts" -> 1],Association["TrainingSizes" -> 200,
"TimeBudgets" -> 0.10210286196493717`,"ElapsedTimes" -> 0.177091`,"ExperimentCounts" -> 1],Association[
"TrainingSizes" -> 806,"TimeBudgets" -> 0.5105143098246858`,"ElapsedTimes" -> 0.47929299999999997`,
"ExperimentCounts" -> 4]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 4892019739639286350],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 8743763137975832326],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 638158737405072954],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 3739054068340455789],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 1643184809429947270],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 6068938058943592058],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 3665674168742687010],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 4485255440931136732],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 1616026996013921204],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 3711090835200864946],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 1168254737395040342],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 1103372986321166989],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 3803996201392471741]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 1.346995`,"MaxTrainingMemory" -> 973576,"DataMemory" -> 2080416,
"FunctionMemory" -> 279040,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,6,18.118084`8.010687253075533},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]]]],StandardForm],"Output",CellLabel -> "Out[130]= ",
ExpressionUUID -> "e9ce5d4f-7026-4e3c-a2e8-23a983b09abf"]},Open],ExpressionUUID -> "bf20a41f-d7da-40d3-a0be-c75e98a950f6"],Cell[
TextData[
{StyleBox["Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"6",FontWeight -> Bold],StyleBox[RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold]}]],"\n","What"," ","is"," ","the"," ","standard"," ","deviation"," ","of"," ","your"," ","new"," ","predictor",StyleBox[
RowBox[{" ","?"," ",StyleBox["[",FontWeight -> Bold]}]],StyleBox["1",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],
"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,0.792156862745098`,
0.9215686274509803`],ExpressionUUID -> "159015d4-3fb0-4c38-83f0-e9d5f77f5fd6"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"pStandardDeviation"," ","=",RowBox[{"Information","[",RowBox[
{"pESGL1",","," ","\"StandardDeviation\""}],"]"}]}]],"Input",CellLabel -> "In[133]:= ",
ExpressionUUID -> "55830cb7-8696-4ab9-8d5d-97cd846d9e0c"],Cell[
BoxData[InterpretationBox[
TemplateBox[{"0.295","0.013"},"Around",SyntaxForm -> PlusMinus],Around[0.29521007243125785`,
0.012895586494751948`]],StandardForm],"Output",CellLabel -> "Out[133]= ",ExpressionUUID -> "7f35635f-8cdb-4fec-bfab-ab01c852b7c7"]},
Open],ExpressionUUID -> "4a23e2c8-7637-43b6-bd5e-b2a7018d8c5e"]},Open],ExpressionUUID -> "7c8e0bc5-29e3-47cf-bf88-bbf06face649"],Cell[
CellGroupData[
{Cell[
TextData[{"Numerical"," ","Classification",StyleBox[RowBox[{":"," "}]],"ESG"," ","label"}],
"Section",ExpressionUUID -> "6ac57c7b-c958-42b1-afce-cdf310e03f03"],Cell[
TextData[
{"The",StyleBox[RowBox[{" ","\""}]],"ESG"," ","Label",StyleBox[RowBox[{"\""," "}]],"column"," ","labels"," ","the"," ","companies"," ","according"," ","to"," ","their",StyleBox[
RowBox[{" ","\""}]],"ESG"," ","controversy"," ","score",StyleBox[RowBox[{"\","," "}]],"from"," ","1",StyleBox[
RowBox[{" ","("}]],"very"," ","poor"," ","performance",StyleBox[RowBox[{")"," "}]],"to"," ","5",StyleBox[
RowBox[{" ","("}]],"very"," ","good"," ","performance",StyleBox[RowBox[{")."," "}]],"\n","We"," ","will"," ","try"," ","to"," ","find"," ","the"," ","ESG"," ","label"," ","of"," ","a"," ","company"," ","based"," ","on"," ","its"," ","feature",StyleBox[
RowBox[{" ","("}]],"e",".","g",StyleBox[RowBox[{".,"," "}]],"financial"," ","data",StyleBox[
RowBox[{","," "}]],"location",StyleBox[RowBox[{","," "}]],"industry",StyleBox[RowBox[
{"...)"," "}]]}],"Text",CellFrame -> 2,FontSlant -> Plain,Background -> RGBColor[
0.8941176470588236`,0.8941176470588236`,0.8941176470588236`],ExpressionUUID -> "c3cd6815-0ab7-47ed-9054-b4edaa3ad83b"],Cell[
CellGroupData[
{Cell[
TextData[{"Logistic"," ","regression"}],"Subsection",ExpressionUUID -> "87ee3b0c-1138-4594-8e7e-bf54b8a019dc"],Cell[
TextData[
{StyleBox["Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"7",FontWeight -> Bold],StyleBox[RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold]}]],"\n","Build"," ","a"," ","logistic"," ","regression"," ","model"," ","for",StyleBox[
RowBox[{" ","\""}]],"ESG"," ","Label",StyleBox[RowBox[{"\""," "}]],"using"," ","the"," ","following"," ","attributes",":","\n","\"","mv",StyleBox[
RowBox[{"\","," ","\""}]],"mc",StyleBox[RowBox[{"\","," ","\""}]],"tobin",StyleBox[
RowBox[{"\","," ","\""}]],"roe",StyleBox[RowBox[{"\","," ","\""}]],"oia",StyleBox[
RowBox[{"\","," ","\""}]],"ois",StyleBox[RowBox[{"\","," ","\""}]],"assets",StyleBox[
RowBox[{"\","," ","\""}]],"roa",StyleBox[RowBox[{"\","," ","\""}]],"sg",StyleBox[
RowBox[{"\","," ","\""}]],"lev",StyleBox[RowBox[{"\","," ","\""}]],"div",StyleBox[
RowBox[{"\","," ","\""}]],"ind",StyleBox[RowBox[{"\","," ","\""}]],"country","\"","\n","1",StyleBox[
RowBox[{")"," "}]],"Split"," ","your"," ","dataset"," ","into"," ","80",StyleBox[
RowBox[{"%"," "}]],"training"," ","and"," ","20",StyleBox[RowBox[{"%"," "}]],"test",StyleBox[
RowBox[{"."," "}]],"Randomize"," ","your"," ","dataset",StyleBox[RowBox[{"."," "}]],"\n","2",StyleBox[
RowBox[{")"," "}]],"Build"," ","your"," ","classifier",StyleBox[RowBox[{"."," ",StyleBox[
"[",FontWeight -> Bold]}]],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "e042cb9c-81b5-4209-81a4-dec1ebc0f5f4"],Cell[
BoxData[RowBox[{RowBox[
{"classifyKeys"," ","="," ",RowBox[{"{"," ",RowBox[{"\"ESG Label\"",","," ","\"mv\"",","," ","\"mc\"",","," ","\"tobin\"",","," ","\"roe\"",","," ","\"oia\"",","," ","\"ois\"",","," ","\"assets\"",","," ","\"roa\"",","," ","\"sg\"",","," ","\"lev\"",","," ","\"div\"",","," ","\"ind\"",","," ","\"country\""}],"}"}]}],";"}]],
"Input",CellLabel -> "In[134]:= ",ExpressionUUID -> "6c8077c7-7c23-4879-8447-a2c75ad6e75d"],Cell[
BoxData[
RowBox[{RowBox[{"dataC"," ","="," ",RowBox[{"dataset","[",RowBox[{"All",","," ","classifyKeys"}],"]"}]}],";"}]],
"Input",CellLabel -> "In[135]:= ",ExpressionUUID -> "a57e5beb-9c26-4fba-85ed-1ae5fe9ccd14"],Cell[
BoxData[
RowBox[{RowBox[{RowBox[{"{",RowBox[{"nobs",",","ncol"}],"}"}],"=",RowBox[{"Dimensions","[","dataC","]"}]}],";"}]],
"Input",CellLabel -> "In[136]:= ",ExpressionUUID -> "18e46777-340d-46fd-924d-8016c595e6c4"],Cell[
BoxData[
RowBox[{RowBox[{RowBox[{"{",RowBox[{"trainingset",",","testset"}],"}"}],"=",RowBox[
{"TakeDrop","[",RowBox[{"dataC",",",RowBox[{"Floor","[",RowBox[{"nobs","*","0.8"}],"]"}]}],"]"}]}],";"}]],
"Input",CellLabel -> "In[137]:= ",ExpressionUUID -> "422f924b-f231-4154-9a84-b73ca76b368a"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cESG"," ","="," ",RowBox[{"Classify","[",RowBox[{RowBox[{"trainingset","\[Rule]"," ","\"ESG Label\""}],","," ",RowBox[
{"Method"," ","\[Rule]"," ","\"LogisticRegression\""}]}],"]"}]}]],"Input",CellLabel -> "In[138]:= ",
ExpressionUUID -> "2c552d2d-79c2-4421-bf33-6b5e01c0487a"],Cell[
BoxData[InterpretationBox[
RowBox[{TagBox["ClassifierFunction","SummaryHead"],"[",DynamicModuleBox[{Set[Typeset`open$$,
False],Set[Typeset`embedState$$,"Ready"]},TemplateBox[{PaneSelectorBox[{False -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxOpener"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[
{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TemplateBox[{",","\",\"","1","2","3","4","5"},"RowWithSeparators"],"SummaryItem"]}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},
BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[
{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TemplateBox[{",","\",\"","1","2","3","4","5"},"RowWithSeparators"],"SummaryItem"]}]},{RowBox[
{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["\"LogisticRegression\"",
"SummaryItem"]}]},{RowBox[{TagBox["\"Number of training examples: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"805","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],RuleDelayed[DynamicModuleValues,
{}],ExpressionUUID -> "a9ce1e47-f623-4214-80ca-4a25afbefaf7"],"]"}],ClassifierFunction[
Association["ExampleNumber" -> 805,"ClassNumber" -> 5,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 805,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 3346332041650992150,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 2555202630280471291,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 563830308113956072]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-2.1993376515110224`*^-4,0.9994632555953235`,0.0098512996093574`,0.0186792213802998`,0.019803452977484797`,-0.007019674434048915`,-0.009388351607216862`,-0.008984681867241554`,0.0035959655187020414`,9.69829299257879`*^-4,9.372657206434265`*^-4,-1.6938162353166193`*^-4,-0.0014470664717340812`},{-9.44052333395085`*^-6,0.01215649900875883`,0.01592374836784797`,-0.6592976146254711`,0.010540024763610644`,-0.03300566346257224`,-3.9604027107958343`*^-4,-0.017573384374654766`,-0.40460185020620076`,-0.08172864819223333`,0.030205233742012717`,-0.06137061865627779`,-0.6231812932812053`},{-7.563479222902561`*^-6,0.01237849154433496`,0.014763847869681629`,-0.59555236990131`,0.00974457300873843`,-0.036638832166690054`,-1.5427483179772844`*^-4,-0.00751020050920883`,-0.21902330797796327`,0.004035759740085371`,-0.007237954530394087`,0.03580471499344582`,0.7707986289278063`},{2.5516372102488407`*^-5,-0.0051444594967748735`,0.023325888464319572`,0.015702331498939095`,-0.27775497771191776`,-0.47015504123466123`,0.06324105329518447`,-0.7959747609581133`,0.055022834184087134`,0.025619381589764924`,0.015515502003880492`,-0.24360172448817136`,0.012150567113948145`},{4.508751240269394`*^-6,0.005249278472649762`,0.0021683565511631704`,0.0013418261667240458`,-0.21895454313857773`,-0.2761950777200422`,0.011051464078199678`,0.27419345321879696`,0.1376300150943208`,-0.8655809486443817`,0.05714827117219156`,-0.16422845840708833`,0.04502925786374607`},{1.2144787126430366`*^-5,0.005531810865719849`,0.028172475174952142`,0.007593066934605304`,-0.3321913570739404`,-0.43181072659953984`,0.023421424755792987`,0.1756684015852696`,-0.056177320176594596`,0.1152425745007101`,-0.5278669328638245`,0.6101714185354156`,-0.05923768256416605`},{2.2718390879647273`*^-6,0.0027493612833127522`,7.40148279402595`*^-4,-8.895011717978825`*^-4,-0.030412776662692657`,-0.029054894831490527`,-0.01711041138719006`,0.23252248527256272`,-0.017701724825533196`,0.1784183654235646`,-0.650030059057471`,-0.6990987515948798`,0.020926045980949107`},{-1.0375018281955322`*^-5,0.005058046909066427`,0.007980926030409712`,-0.45620203347888494`,0.016601918506654233`,0.01897627705097592`,-0.002947097128729851`,0.023266338772977704`,0.8730433718650656`,0.11976835937940561`,-0.03141049699255086`,0.04138469661369448`,-0.10656544154633696`},{1.963859852852306`*^-5,0.005656167172470062`,0.026374189527229776`,0.008269021653117877`,-0.3283924396740975`,-0.4136004664658877`,-0.06706774999393672`,0.4423405183791549`,-0.02165657089719686`,0.4270639657127903`,0.5404288026442414`,-0.21264204350172716`,0.001143653964753919`},{-3.862673936838115`*^-6,-0.010474951399302644`,0.004431479902646225`,0.0030127644004194994`,0.011196117594620452`,-0.026503589199492035`,-0.9949917258463197`,-0.07591416630011935`,0.0033307963032634625`,-0.03748591166168809`,-0.035982945054469896`,0.0234769238558354`,-2.1473664540046765`*^-4},{2.6339682495214836`*^-4,0.009904579568116956`,-0.9983184839336344`,-0.021019185441526395`,-0.0033738918121616114`,-0.05089558131387299`,-0.003632063178140594`,-1.98958907587299`*^-4,-0.002900135045946418`,0.012968518000441532`,-6.465848877120257`*^-4,0.005253939410644457`,-7.989999634730664`*^-4},{6.349301682747238`*^-6,0.0203608529523548`,-0.025876315193192435`,-0.036725360975635196`,-0.8091865451975263`,0.5815208727838391`,-0.020500934707983615`,-0.06245500951749808`,-0.013460515470216237`,-0.0010187371129548276`,2.115323763367767`*^-4,-0.00908449380416889`,0.005656569154355383`},{0.9999999403661488`,2.1722111434573294`*^-4,2.6418002788836516`*^-4,-6.231575248894953`*^-6,2.9397754465239527`*^-5,3.4350155190844186`*^-5,-5.448755839887982`*^-6,5.923829357065471`*^-6,4.357960163565671`*^-6,-9.782230949930894`*^-6,-3.238599982127123`*^-6,4.158172005116309`*^-6,-1.1670414848171227`*^-6}},
"Precisions" -> {2.851721770917354`*^-4,19.79369145023952`,25.320982128871325`,159.6185227654652`,256.4150911586925`,266.34257004620525`,807.3118434887785`,1628.5554109927136`,2313.1667073698777`,4484.201341904336`,6522.188725055776`,10991.04210735666`,22251.060053402027`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202485`,0.00976389468447205`,0.009359042981366458`,0.03264904022111801`,0.4762135888360247`,0.3022523669180126`,0.24808463417018625`,0.006140410412422362`,0.3815488083018635`,0.0018034680944099377`,0.2762726799950311`,0.06421183714658385`,112.73788819875777`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5339254760969378154]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.099952`,"MaxTrainingMemory" -> 603008,"DataMemory" -> 295936,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,11,45.275086`8.408434260815067},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8326263087375192`,0.8326263087375192`,0.8378634990798789`,0.8655419423233055`,1.0769079118696687`,1.0950673301494556`,1.110806450588314`,1.2037528327847722`,1.2053912950642527`,1.215814799966776`,1.2303422028665685`},
"LeftBoundary" -> 0.8378634990798789`,"LeftScale" -> 0.0026185951711798494`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-13.876348945459664`,0.6678159791416194`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 733552121303723708]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 2208897782306635739]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["LogRescaleNumericalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Indices" -> {1,2,4,6,7,9},"Centers" -> {3.58101`*^-4,3.2167350000000003`*^-4,0.474829433`,0.246863938`,7.865`*^-5,4.59139`*^-4},
"Cutoffs" -> {0.002081417000000222`,0.001259692500000222`,0.004296135000000201`,0.002232655000000222`,3.7080600000022204`*^-4,7.412800000022206`*^-5},
"Version" -> {12.3`,1},"ID" -> 4326383119856038640,"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]]]],MachineLearning`MLProcessor["Standardize",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Mean" -> {0.8215756881588108`,1.0300586351574321`,0.03264904022111799`,0.19323428704308138`,0.3022523669180126`,0.2782388700017806`,1.1757159882266064`,0.38154880830186316`,0.28314243881047935`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.9568468564147751`,1.1128305729696095`,0.03947591013111705`,0.7300190480810053`,0.03556566901688484`,0.7025480434502485`,1.3577239538966965`,0.036182945585849016`,0.8069321486662895`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 3978130136838437204]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{-0.297664612531662`,-0.15135522186756134`,0.055695172399282455`,0.3686859607696533`,0.13803435862064362`,0.8453794717788696`},{-0.12085814774036407`,-0.3311799168586731`,0.13494490087032318`,-0.2784625291824341`,-0.07486412674188614`,-0.008707592263817787`},{0.850235641002655`,0.02360658533871174`,-0.27705198526382446`,-0.38314196467399597`,-0.21273453533649445`,0.10175155848264694`},{0.3767968416213989`,-0.10140053927898407`,-0.27055948972702026`,0.30234938859939575`,0.8440420031547546`,-0.8547330498695374`},{-0.03693236783146858`,0.40930768847465515`,-0.1437256783246994`,-0.32837361097335815`,-0.3948705494403839`,0.21859881281852722`},{-0.27260756492614746`,-0.2338666021823883`,0.5389256477355957`,-0.419556200504303`,0.7740651369094849`,-0.2787778973579407`},{-0.02874654345214367`,0.3140849173069`,0.8285291194915771`,0.010499303229153156`,-0.5293681025505066`,0.264029324054718`},{0.16827335953712463`,-0.34274688363075256`,-0.16042856872081757`,-0.19669659435749054`,-0.05070009082555771`,0.27549126744270325`},{-0.42898115515708923`,-0.13039757311344147`,-0.6897872090339661`,-0.8380780816078186`,0.35405147075653076`,-0.07226528227329254`},{0.008581237867474556`,0.2263442724943161`,0.17453348636627197`,-0.16736607253551483`,-0.40919598937034607`,0.19438496232032776`},{0.1702403426170349`,-0.3060764670372009`,0.3001331090927124`,0.185198575258255`,-0.21563425660133362`,-0.46092838048934937`},{0.0875907689332962`,0.03878721594810486`,0.6575491428375244`,0.18105629086494446`,-0.2873818874359131`,-0.4286987781524658`},{-0.886788547039032`,0.01573818176984787`,-0.1983335167169571`,-0.5857574939727783`,0.29684025049209595`,0.3547218441963196`},{0.011217430233955383`,0.28576284646987915`,-0.34565263986587524`,1.0427803993225098`,-0.21504907310009003`,-0.7426312565803528`},{0.024220159277319908`,0.31866583228111267`,-0.3238298296928406`,0.08364823460578918`,-0.15590693056583405`,-0.24802498519420624`},{-0.4495404064655304`,-0.31875452399253845`,0.5191961526870728`,-0.051596008241176605`,0.5928149223327637`,0.307113379240036`},{-0.05585400387644768`,-0.19572226703166962`,0.013029597699642181`,-0.1585976779460907`,-0.049470286816358566`,0.714141845703125`},{0.3318862318992615`,-0.3905484080314636`,-0.20523269474506378`,0.07787758111953735`,-0.2352791726589203`,0.4611585736274719`},{-0.043521951884031296`,0.23752106726169586`,-0.2690742611885071`,0.4173439145088196`,0.08015140891075134`,-0.31789883971214294`},{0.13919471204280853`,0.275917649269104`,0.2931984066963196`,0.3536943197250366`,-0.5458059310913086`,0.20733734965324402`}}]},
"Version" -> {12.3`,1},"ID" -> 6321109716653815103]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 3833848247369299788]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Nominal"]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Nominal"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["f1" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3605005846534147222]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association[1 -> 1,2 -> 2,3 -> 3,4 -> 4,5 -> 5]},"MissingCode" -> 0,"Version" -> {12.3`,1},
"ID" -> 6962735587533398820,"Output" -> Association["f1" -> Association["Type" -> "NominalVector",
"Weight" -> 1]]]],MachineLearning`MLProcessor["FromVector",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["f1" -> Association[
"Type" -> "NominalVector","Weight" -> 1,"SetSize" -> {5}]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Version" -> {12.3`,1},"ID" -> 5022934801110860942]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Nominal","Weight" -> 1,
"SetSize" -> 5],"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"ProbabilityPostprocessor" -> Identity,"Name" -> "class",
"Marginal" -> Association[1 -> 0.20864197530864198`,2 -> 0.18888888888888888`,3 -> 0.19753086419753085`,
4 -> 0.2037037037037037`,5 -> 0.20123456790123456`]],"LabelSplitter" -> MachineLearning`MLProcessor[
"FeatureLabelSplit",Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",
Association["Index" -> "ESG Label","Order" -> {"ESG Label","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> SparseArray[Automatic,
{5,6},0.`,{1,{{0,1,2,3,4,5},{{2},{3},{4},{5},{6}}},{1.`,1.`,1.`,1.`,1.`}}],"Threshold" -> 0,
"TieBreaker" -> RandomChoice,"PerformanceGoal" -> Automatic,"BatchProcessing" -> Automatic,
"Model" -> Association["LogProbabilitiesFunction" -> LinearLayer[Association["Type" -> "Linear",
"Arrays" -> Association["Weights" -> RawArray["Real32",{{0.3361096978187561`,1.0714081525802612`,-0.9976522922515869`,-1.1329107284545898`,-1.3363338708877563`,-0.7211966514587402`,0.6071208715438843`,-1.0867911577224731`,-0.014179953373968601`,-0.19708749651908875`,0.9411529302597046`,0.11529660224914551`,1.5381667613983154`,-0.5156044363975525`,0.019646383821964264`,-0.07071305066347122`,-0.19047513604164124`,0.12276887893676758`},{0.7234887480735779`,1.5668245553970337`,-0.47006234526634216`,-0.7703610062599182`,0.41605108976364136`,0.3693574070930481`,1.1583298444747925`,-2.1268577575683594`,0.417290061712265`,0.17747853696346283`,-1.7058746814727783`,1.3555842638015747`,0.8722264766693115`,-0.10030891001224518`,0.12662382423877716`,-0.8519586324691772`,0.21562013030052185`,0.27596405148506165`},{0.955234169960022`,2.171809673309326`,-0.03892667219042778`,-0.4585118293762207`,1.7371505498886108`,-0.5837444067001343`,0.016382988542318344`,-0.17488814890384674`,-0.12007950991392136`,-0.056664254516363144`,0.4428960680961609`,-0.08829598873853683`,-0.26246172189712524`,-0.12186424434185028`,-0.2280060052871704`,-0.12627972662448883`,-0.008092169649899006`,0.21888911724090576`},{0.9213624000549316`,1.5721018314361572`,-0.3251161277294159`,-0.19513346254825592`,0.8051022291183472`,0.27093279361724854`,-0.9739384055137634`,-0.4640747904777527`,0.6563335657119751`,-0.07762838900089264`,0.08029894530773163`,0.5811384320259094`,1.5650538206100464`,-0.2880457043647766`,0.20785708725452423`,-0.4019447863101959`,0.10214418917894363`,-0.06201817840337753`}}],
"Biases" -> RawArray["Real32",{-0.5041399002075195`,-0.5679786801338196`,-0.08830561488866806`,0.07443065941333771`}]],
"Parameters" -> Association["OutputDimensions" -> {4},"$OutputSize" -> 4,"$InputSize" -> 18,
"$InputDimensions" -> {18}],"Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
{18},NeuralNetworks`AtomT]],"Outputs" -> Association["Output" -> NeuralNetworks`TensorT[
{4},NeuralNetworks`RealT]]],Association["Version" -> "12.3.3","Unstable" -> False]],
"Processor" -> MachineLearning`MLProcessor["FirstValues",Association["Info" -> Association[
"Weight" -> {0.07692307692307693`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`},
"Type" -> "NumericalVector"],"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect",
"StructurePreserving" -> False,"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LogisticRegression",
"PostProcessor" -> MachineLearning`MLProcessor["Identity"],"Options" -> Association[
"L1Regularization" -> Association["Value" -> 0,"Options" -> Association[]],"L2Regularization" -> Association[
"Value" -> 0.1`,"Options" -> Association[]],"OptimizationMethod" -> Association["Value" -> "LBFGS",
"Options" -> Association[]],MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],
"TrainingInformation" -> Association["PanelCell" -> None,"TrainingFunction" -> Classify,
"EMIterations" -> Missing["KeyAbsent","EMIterations"],"ProcessorEntropyShift" -> 0,
"PreprocessingTime" -> 0.377139`6.028046438680723,"LossName" -> "MeanCrossEntropy",
"BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[1.5156619755937626`,
0.08490122260429898`],"Accuracy" -> Around[0.43188785042760475`,0.055092426610579615`],
"EvaluationTime" -> 1.952076879496753`*^-5,"TestSize" -> 161,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1201458782779823`,"TrainingSize" -> 644,"TrainingTime" -> 0.05011872336272722`,
"TrainingMemory" -> 386968,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.5156619755937626`,0.060034230234528405`]},"AccuracyHistory" -> {Around[0.43188785042760475`,
0.038956228448363044`]},"Configuration" -> {"LogisticRegression","L1Regularization" -> 0,"L2Regularization" -> 0.1`,"OptimizationMethod" -> Automatic,MaxIterations -> 30},
"FinalTrainingSize" -> 805],TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory","Configuration","FinalTrainingSize"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`Atom[
Integer]}],Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "LogisticRegression",
"Options" -> Association["L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-6],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
9.32058606256326`,0.7514211350145207`],"Accuracy" -> Around[0.20898317741901679`,
0.033117936618688636`],"EvaluationTime" -> 2.2474777225327905`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -2.9413734966376284`,"TrainingSize" -> 8,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 151720,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[9.32058606256326`,0.5313349800956598`]},"AccuracyHistory" -> {Around[
0.20898317741901679`,0.023417917561981014`]}],Association["MeanCrossEntropy" -> Around[
1.5161866273185258`,0.08553469804067677`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1205707643845841`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387104,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5161866273185258`,0.060482165011306245`]},
"AccuracyHistory" -> {Around[0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5161866273185258`,
0.08553469804067677`],"ModelMemory" -> 9920,"TrainingMemory" -> 387104,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 1],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6097924420982364`,0.004169773227773915`],"Accuracy" -> Around[0.20877001372085568`,
0.028664336670265907`],"EvaluationTime" -> 1.790077753714996`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1697758590809513`,"TrainingSize" -> 8,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 84000,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6097924420982364`,0.0029484749253690535`]},
"AccuracyHistory" -> {Around[0.20877001372085568`,0.020268746837759245`]}],Association[
"MeanCrossEntropy" -> Around[1.61144478722981`,0.006098119607482217`],"Accuracy" -> Around[
0.2095589275409243`,0.04062217641830138`],"EvaluationTime" -> 1.790077753714996`*^-5,
"TestSize" -> 200,"ModelMemory" -> 9920,"ModelUtility" -> -1.1710404143448487`,"TrainingSize" -> 40,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 96624,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.61144478722981`,0.004312021726937323`]},"AccuracyHistory" -> {Around[
0.2095589275409243`,0.028724216411937165`]}],Association["MeanCrossEntropy" -> Around[
1.604632652835961`,0.0053931578023919055`],"Accuracy" -> Around[0.3141736313170995`,
0.03757390112795914`],"EvaluationTime" -> 1.7216828999637013`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1667195150271672`,"TrainingSize" -> 150,
"TrainingTime" -> 0.015848931924611134`,"TrainingMemory" -> 140472,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.604632652835961`,0.0038135384540804542`]},
"AccuracyHistory" -> {Around[0.3141736313170995`,0.026568760283212776`]}],Association[
"MeanCrossEntropy" -> Around[1.591987306471602`,0.011092852472444438`],"Accuracy" -> Around[
0.35100171853760126`,0.05298781046756226`],"EvaluationTime" -> 1.952076879496753`*^-5,
"TestSize" -> 161,"ModelMemory" -> 9920,"ModelUtility" -> -1.1595284205428884`,"TrainingSize" -> 644,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 381880,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.591987306471602`,0.007843831205967421`]},"AccuracyHistory" -> {Around[
0.35100171853760126`,0.0374680401018408`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.952076879496753`*^-5,"MeanCrossEntropy" -> Around[1.591987306471602`,
0.011092852472444438`],"ModelMemory" -> 9920,"TrainingMemory" -> 381880,"TrainingTime" -> 0.0439878345118114`],
"Index" -> 2],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1000000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6094216690851113`,0.004802026342586034`],"Accuracy" -> Around[0.1997557076560499`,
0.032585938841791943`],"EvaluationTime" -> 1.85847260746629`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -1.169624154239861`,"TrainingSize" -> 8,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 79064,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6094216690851113`,0.00339554539027902`]},"AccuracyHistory" -> {Around[0.1997557076560499`,
0.023041738326361194`]}],Association["MeanCrossEntropy" -> Around[1.609422931117378`,
0.00588125735964293`],"Accuracy" -> Around[0.2095589275409243`,0.04062217641830138`],
"EvaluationTime" -> 1.5848931924611124`*^-5,"TestSize" -> 200,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1697589602587213`,"TrainingSize" -> 40,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 89456,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.609422931117378`,0.0041586769609068056`]},"AccuracyHistory" -> {Around[0.2095589275409243`,
0.028724216411937165`]}],Association["MeanCrossEntropy" -> Around[1.6094174067517646`,
0.00588125783619916`],"Accuracy" -> Around[0.2841074931433402`,0.04502387157216299`],
"EvaluationTime" -> 1.5848931924611124`*^-5,"TestSize" -> 200,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1697555303055487`,"TrainingSize" -> 150,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 129864,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6094174067517646`,0.004158677297882947`]},"AccuracyHistory" -> {Around[0.2841074931433402`,
0.03183668490394867`]}],Association["MeanCrossEntropy" -> Around[1.609391818390645`,
0.0070997952984466475`],"Accuracy" -> Around[0.35749824988731066`,0.05323827058469551`],
"EvaluationTime" -> 1.631192335061535`*^-5,"TestSize" -> 161,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1698909493838072`,"TrainingSize" -> 644,"TrainingTime" -> 0.015848931924611134`,
"TrainingMemory" -> 381816,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.609391818390645`,0.005020313400567992`]},"AccuracyHistory" -> {Around[0.35749824988731066`,
0.037645142149082496`]}]},"PredictedPerformances" -> Association["EvaluationTime" -> 1.631192335061535`*^-5,
"MeanCrossEntropy" -> Around[1.609391818390645`,0.0070997952984466475`],"ModelMemory" -> 9920,
"TrainingMemory" -> 381816,"TrainingTime" -> 0.029811164905763916`],"Index" -> 3],
Association["Value" -> "LogisticRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0.01`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[2.2337072924569417`,0.28457334864072625`],
"Accuracy" -> Around[0.3829511493169532`,0.04851013357177653`],"EvaluationTime" -> 3.7618793838911494`*^-5,
"TestSize" -> 200,"ModelMemory" -> 9920,"ModelUtility" -> -1.5219760890659937`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160600,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.2337072924569417`,0.2012237445688211`]},"AccuracyHistory" -> {Around[
0.3829511493169532`,0.03430184440486838`]}],Association["MeanCrossEntropy" -> Around[
1.5160161133186372`,0.0853417806376378`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1204343836263473`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 386968,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5160161133186372`,0.06034575180740848`]},"AccuracyHistory" -> {Around[
0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5160161133186372`,
0.0853417806376378`],"ModelMemory" -> 9920,"TrainingMemory" -> 386968,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 4],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.1`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
2.6501351235963875`,0.1432699341291214`],"Accuracy" -> Around[0.2404338203257138`,
0.03003572287209651`],"EvaluationTime" -> 1.9192337828501707`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.6785175586923256`,"TrainingSize" -> 8,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 109248,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.6501351235963875`,0.10130714196285172`]},"AccuracyHistory" -> {Around[
0.2404338203257138`,0.021238463320699327`]}],Association["MeanCrossEntropy" -> Around[
4.049678757997456`,0.42608611746771635`],"Accuracy" -> Around[0.23826040704303478`,
0.03435897008507077`],"EvaluationTime" -> 2.1106880150302013`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -2.1126148651911953`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120472,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4.049678757997456`,0.3012883830308701`]},"AccuracyHistory" -> {Around[
0.23826040704303478`,0.02429546074173927`]}],Association["MeanCrossEntropy" -> Around[
1.9672590143753326`,0.14517274224354032`],"Accuracy" -> Around[0.39785356645949577`,
0.03454009337125678`],"EvaluationTime" -> 1.9192337828501707`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.3844449333801845`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160560,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.9672590143753326`,0.10265263048385412`]},"AccuracyHistory" -> {Around[
0.39785356645949577`,0.02442353424563219`]}],Association["MeanCrossEntropy" -> Around[
1.5156619755937626`,0.08490122260429898`],"Accuracy" -> Around[0.43188785042760475`,
0.055092426610579615`],"EvaluationTime" -> 1.952076879496753`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1201458782779823`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 386968,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5156619755937626`,0.060034230234528405`]},
"AccuracyHistory" -> {Around[0.43188785042760475`,0.038956228448363044`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.952076879496753`*^-5,"MeanCrossEntropy" -> Around[1.5156619755937626`,
0.08490122260429898`],"ModelMemory" -> 9920,"TrainingMemory" -> 386968,"TrainingTime" -> 0.0877672685185048`],
"Index" -> 5],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-5],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
70.38892822224278`,7.055866638038663`],"Accuracy" -> Around[0.25646842258242114`,
0.03064503934957135`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -4.967038578821333`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120264,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[70.38892822224278`,4.989251146905065`]},"AccuracyHistory" -> {Around[
0.25646842258242114`,0.021669315133810485`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.6874854730880543`*^-5,"MeanCrossEntropy" -> Around[70.38892822224278`,
7.055866638038663`],"ModelMemory" -> 9920,"TrainingMemory" -> 120264,"TrainingTime" -> 0.2861861282452383`],
"Index" -> 6],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-4],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
6.1217549225546035`,0.43334629362337096`],"Accuracy" -> Around[0.24280043343853058`,
0.030134117124288443`],"EvaluationTime" -> 1.8166415022232294`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -2.5190597984330343`,"TrainingSize" -> 8,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 109544,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[6.1217549225546035`,0.3064221028231423`]},"AccuracyHistory" -> {Around[
0.24280043343853058`,0.02130803856365402`]}],Association["MeanCrossEntropy" -> Around[
2.1408495764830104`,0.14709139782383907`],"Accuracy" -> Around[0.38364122786342447`,
0.030672760774866067`],"EvaluationTime" -> 1.749040841464219`*^-5,"TestSize" -> 500,
"ModelMemory" -> 9920,"ModelUtility" -> -1.4680032849418811`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160376,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.1408495764830104`,0.10400932485544477`]},"AccuracyHistory" -> {Around[
0.38364122786342447`,0.021688917141620537`]}],Association["MeanCrossEntropy" -> Around[
1.5161864898310555`,0.08553434630802562`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1205706288371464`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387032,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5161864898310555`,0.06048191629876344`]},"AccuracyHistory" -> {Around[
0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5161864898310555`,
0.08553434630802562`],"ModelMemory" -> 9920,"TrainingMemory" -> 387032,"TrainingTime" -> 0.0877672685185048`],
"Index" -> 7],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.001`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
23.100498836516962`,2.2949873442055764`],"Accuracy" -> Around[0.22571440567086598`,
0.029182709961341872`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -3.8526816677503963`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120072,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[23.100498836516962`,1.6228011138250682`]},"AccuracyHistory" -> {Around[
0.22571440567086598`,0.020635292107065047`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.6874854730880543`*^-5,"MeanCrossEntropy" -> Around[23.100498836516962`,
2.2949873442055764`],"ModelMemory" -> 9920,"TrainingMemory" -> 120072,"TrainingTime" -> 0.2861861282452383`],
"Index" -> 8],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 10.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6551880720819439`,0.016558884992969376`],"Accuracy" -> Around[0.2175430231937082`,
0.025950628247361458`],"EvaluationTime" -> 1.770291840270806`*^-5,"TestSize" -> 500,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1990661776602973`,"TrainingSize" -> 8,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 109416,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6551880720819439`,0.011708899867416802`]},
"AccuracyHistory" -> {Around[0.2175430231937082`,0.018349865209760455`]}],Association[
"MeanCrossEntropy" -> Around[1.6592047449788616`,0.04350413464759228`],"Accuracy" -> Around[
0.25562535742149456`,0.030594188852795`],"EvaluationTime" -> 1.9192337828501707`*^-5,
"TestSize" -> 400,"ModelMemory" -> 9920,"ModelUtility" -> -1.2047213815106566`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120360,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6592047449788616`,0.030762068618965133`]},
"AccuracyHistory" -> {Around[0.25562535742149456`,0.021633358402713222`]}],Association[
"MeanCrossEntropy" -> Around[1.6024822980108477`,0.06681596562153996`],"Accuracy" -> Around[
0.344842588153545`,0.038723290018501964`],"EvaluationTime" -> 2.2474777225327905`*^-5,
"TestSize" -> 300,"ModelMemory" -> 9920,"ModelUtility" -> -1.1730110376312333`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03981071705534971`,"TrainingMemory" -> 160432,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6024822980108477`,0.04724602238251814`]},"AccuracyHistory" -> {Around[
0.344842588153545`,0.027381500961936086`]}],Association["MeanCrossEntropy" -> Around[
1.524926468040399`,0.06504597406401619`],"Accuracy" -> Around[0.42576956553048617`,
0.05499984934359078`],"EvaluationTime" -> 2.2754440334134477`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.123593732817974`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387272,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.524926468040399`,0.04599444934955014`]},"AccuracyHistory" -> {Around[
0.42576956553048617`,0.03889076643509152`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.2754440334134477`*^-5,"MeanCrossEntropy" -> Around[1.524926468040399`,
0.06504597406401619`],"ModelMemory" -> 9920,"TrainingMemory" -> 387272,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 9],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 10000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.608872305660863`,0.004163925054432974`],"Accuracy" -> Around[0.31034449511311124`,
0.0324848571119849`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.169203677147083`,"TrainingSize" -> 150,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 133416,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.608872305660863`,0.00294433964234212`]},"AccuracyHistory" -> {Around[
0.31034449511311124`,0.022970262749760568`]}],Association["MeanCrossEntropy" -> Around[
1.6069122408818093`,0.007177629851866846`],"Accuracy" -> Around[0.35749824988731066`,
0.05323827058469551`],"EvaluationTime" -> 1.5505897817367396`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1683601073470584`,"TrainingSize" -> 644,
"TrainingTime" -> 0.01995262314968879`,"TrainingMemory" -> 381816,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6069122408818093`,0.005075350741102041`]},
"AccuracyHistory" -> {Around[0.35749824988731066`,0.037645142149082496`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.5505897817367396`*^-5,"MeanCrossEntropy" -> Around[1.6069122408818093`,
0.007177629851866846`],"ModelMemory" -> 9920,"TrainingMemory" -> 381816,"TrainingTime" -> 0.03753003305505265`],
"Index" -> 10]],TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[
TypeSystem`Enumeration["LogisticRegression"]],TypeSystem`Assoc[TypeSystem`AnyType,
TypeSystem`Struct[{"Value"},{TypeSystem`AnyType}],4]}],TypeSystem`Struct[{"Experiments","PredictedPerformances","Index"},
{TypeSystem`Vector[TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1]}],TypeSystem`AnyLength],TypeSystem`Struct[{"EvaluationTime","MeanCrossEntropy","ModelMemory","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real]}],TypeSystem`Atom[Integer]}],10],Association[]],"MaxTrainingSize" -> 805,
"PreprocessorEvaluationTime" -> 6.1328125`*^-6,"PreprocessorMemory" -> 174968,"InputDimension" -> 18,
"OutputDimension" -> 1,"BaselineLogProbability" -> -1.6088861227806173`,"VariableBudget" -> True,
"CheckpointingInfo" -> Association["Checkpointing" -> False],"UserStop" -> False,
"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[{Association[
"TrainingSizes" -> 8,"TimeBudgets" -> 0.13719999999999996`,"ElapsedTimes" -> 0.21484499999999998`,
"ExperimentCounts" -> 6],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.1960000000000001`,
"ElapsedTimes" -> 0.209029`,"ExperimentCounts" -> 6],Association["TrainingSizes" -> 150,
"TimeBudgets" -> 0.2800000000000001`,"ElapsedTimes" -> 0.26501600000000003`,"ExperimentCounts" -> 7],Association[
"TrainingSizes" -> 644,"TimeBudgets" -> 0.4`,"ElapsedTimes" -> 0.38647200000000004`,
"ExperimentCounts" -> 8]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 3608489990807338407],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 8671681518699774353],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 2056596508203573126],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 1939271173859781736],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 1472075894963135518],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 1961206680642115524],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 6533212798570484172],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 7413442416815054776],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 5652205817899745213],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 616513469994011474],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 1897834415516430916],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3238766399573986623],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 2962023910223630262]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 1.604419`,"MaxTrainingMemory" -> 858472,"DataMemory" -> 1657112,
"FunctionMemory" -> 365400,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,11,46.727947`8.422151677257627},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]],Selectable -> False,Editable -> False,
SelectWithContents -> True],StandardForm],"Output",CellLabel -> "Out[138]= ",ExpressionUUID -> "65da241b-438e-44f5-b508-b9da5f3cd19b"]},
Open],ExpressionUUID -> "385e1d2e-5ae9-4125-8916-b2eed0fedfbf"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[","cESG","]"}]],"Input",CellLabel -> "In[140]:= ",
ExpressionUUID -> "1fc2beec-85c8-4a5f-a183-58f5c597d473"],Cell[
BoxData[InterpretationBox[
TagBox[StyleBox[FrameBox[GridBox[{{ItemBox[FrameBox[StyleBox["\"Classifier information\"",
12,"SuggestionsBarText",StripOnInput -> False],FrameMargins -> {{10,5},{-4,2}},FrameStyle -> None,
StripOnInput -> False],ItemSize -> {Automatic,1},Alignment -> {Left,Bottom},FrameStyle -> Opacity[
0.1`],Background -> RGBColor[0.96`,0.96`,0.96`],Frame -> {{False,False},{True,False}},
StripOnInput -> False]},{ItemBox[TagBox[FrameBox[TagBox[GridBox[{{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Data type\>",ExpressionUUID -> "dad31865-ce28-4f96-98aa-7bf8abeec004"],
TextCell["Data type"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[
TooltipBox[TemplateBox[{InterpretationBox[Cell[
"\<Mixed\>",ExpressionUUID -> "cb4842e8-b07b-4e6a-91b6-7a7aaf2c241d"],
TextCell["Mixed"]],StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},"RowDefault"],
GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Classes\>",ExpressionUUID -> "3a238770-a7df-4bc6-8191-6a1492559e9f"],TextCell[
"Classes"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{",","\",\"","1","2","3","4","5"},
"RowWithSeparators"]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Accuracy\>",ExpressionUUID -> "043d44a7-d6da-4ef0-af13-1a4f499efd44"],TextCell[
"Accuracy"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{RowBox[
{"(",InterpretationBox[TemplateBox[{"43.","6."},"Around",SyntaxForm -> PlusMinus],
Around[43.1887850427604718107`3.,5.5092426610579616764`3.]],")"}],"\"%\"","percent","\"Percent\""},
"QuantityPostfix",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[
InterpretationBox[Cell[
"\<Method\>",ExpressionUUID -> "205fa418-afc2-4487-bf15-b4e385dd480c"],
TextCell["Method"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[
TooltipBox[InterpretationBox[Cell[
"\<LogisticRegression\>",ExpressionUUID -> "57f38ad9-cd22-4b53-8170-b1920fb66a65"],
TextCell["LogisticRegression"]],StyleBox[TagBox[GridBox[{{"\"L1Regularization\"","0"},{"\"L2Regularization\"","0.1`"},{"\"OptimizationMethod\"","\"LBFGS\""}},
GridBoxAlignment -> {"Columns" -> {{Left}}},AutoDelete -> False,GridBoxBackground -> {"Columns" -> {{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},"Rows" -> {{None}}},GridBoxFrame -> {"Columns" -> {{True}},"Rows" -> {{True}}},
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},GridBoxSpacings -> {"Columns" -> {{1}},"Rows" -> {{1}}},
FrameStyle -> GrayLevel[0.84`]],"Grid"],FontFamily -> "Verdana",StripOnInput -> False]],
Function[Annotation[Slot[1],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod","LBFGS"}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"],"Tooltip"]]]},{TemplateBox[
{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Single evaluation time\>",
ExpressionUUID -> "21d76474-c83e-497a-b089-3b98d69cb0a2"],TextCell["Single evaluation time"]],
GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{"9.15`",RowBox[
{"\"ms\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"example\""}],"milliseconds per example",FractionBox[
"\"Milliseconds\"","\"Examples\""]},"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Batch evaluation speed\>",ExpressionUUID -> "f56d7c3b-dd0a-4187-be02-f662ad5ea330"],
TextCell["Batch evaluation speed"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"7.19`",RowBox[{"\"examples\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"ms\""}],"examples per millisecond",FractionBox[
"\"Examples\"","\"Milliseconds\""]},"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[TagBox[TooltipBox[InterpretationBox[Cell[
"\<Loss\>",ExpressionUUID -> "e8df792a-8ca9-4237-9fff-220c9b4432c6"],
TextCell["Loss"]],"\"Mean cross entropy\"",LabelStyle -> "TextStyling"],Function[
Annotation[Slot[1],"Mean cross entropy","Tooltip"]]],GrayLevel[0.4`],StripOnInput -> False]},
"RowDefault"],TagBox[TooltipBox[TemplateBox[{"1.5156619755937625893`3.",StyleBox[
TemplateBox[{"\" \[PlusMinus] \"","0.0849012226042989843`2."},"RowDefault"],{10,Opacity[
0.5`]},StripOnInput -> False]},"RowDefault"],TemplateBox[{"\"95% confidence interval: [\"","1.345859530385164593`3.","\", \"","1.6854644208023605856`3.","\"]\""},
"RowDefault"],TooltipStyle -> {}],Function[Annotation[Slot[1],Row[{"95% confidence interval: [",1.345859530385164593`3.,", ",1.6854644208023605856`3.,"]"}],
"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Model memory\>",ExpressionUUID -> "221a59ed-2eb0-4178-a54f-4939777072f3"],
TextCell["Model memory"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"368.`","\"kB\"","kilobytes","\"Kilobytes\""},"Quantity",SyntaxForm -> Mod]},{TemplateBox[
{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Training examples used\>",
ExpressionUUID -> "9b35b23f-0fe1-4c17-ac63-1dc9eb9fe49b"],TextCell["Training examples used"]],
GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{"805","\"examples\"","examples","\"Examples\""},
"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[
InterpretationBox[Cell[
"\<Training time\>",ExpressionUUID -> "9b10040b-0d62-42bc-937f-bf22255c9a03"],
TextCell["Training time"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"1.6`","\"s\"","seconds","\"Seconds\""},"Quantity",SyntaxForm -> Mod]},{ItemBox[
DynamicModuleBox[{Set[MachineLearning`file12Panel`PackagePrivate`pos$$,1]},DynamicBox[
ToBoxes[Show[Part[{Graphics[{{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[PointSize[
0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.0794415416798357`,0.47587490271599925`},{3.6888794541139363`,0.47587568686834175`},{5.0106352940962555`,0.4728948536479824`},{6.467698726104354`,0.4158522911141764`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.0794415416798357`,0.47587490271599925`}},{{3.6888794541139363`,0.47587568686834175`}},{{5.0106352940962555`,0.4728948536479824`}},{{6.467698726104354`,0.4158522911141764`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.0794415416798357`,0.47288674578220086`},{2.0794415416798357`,0.47885415716335866`},{2.0794415416798357`,0.47885415716335866`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,0.4722147290604643`},{3.6888794541139363`,0.4795232909367647`},{3.6888794541139363`,0.4795232909367647`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.0106352940962555`,0.4695282006434465`},{5.0106352940962555`,0.47625021032026227`},{5.0106352940962555`,0.47625021032026227`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.467698726104354`,0.35820629791011926`},{6.467698726104354`,0.4703555661824545`},{6.467698726104354`,0.4703555661824545`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.32520490492926973`,0.41251765801672274`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.32520490492926973`,Log[
805]},{0.41251765801672274`,0.47587568686834175`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}],Graphics[{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.0794415416798357`,0.1997557076560499`},{3.6888794541139363`,0.2095589275409243`},{5.0106352940962555`,0.3141736313170995`},{6.467698726104354`,0.43188785042760475`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.0794415416798357`,0.1997557076560499`}},{{3.6888794541139363`,0.2095589275409243`}},{{5.0106352940962555`,0.3141736313170995`}},{{6.467698726104354`,0.43188785042760475`}}}]}}},{{},{}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.32520490492926973`,0.15763758700636832`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.32520490492926973`,Log[
805]},{0.15763758700636832`,1}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.05`],0}},Ticks -> {Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]],Automatic}}],Graphics[{{{},{{{},{},Tooltip[{Hue[0.67`,0.6`,
0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,2.232225508969771`},{6.467698726104354`,0.41619838473474585`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.880722`,0.611041`,0.142051`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.4761052527343323`},{3.6888794541139363`,0.4771311599611905`},{5.0106352940962555`,0.4728948536479824`},{6.467698726104354`,0.4649831140685461`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.560181`,0.691569`,0.194885`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.47587490271599925`},{3.6888794541139363`,0.47587568686834175`},{5.0106352940962555`,0.4758722543491525`},{6.467698726104354`,0.4758563550775087`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.922526`,0.385626`,0.209179`],AbsoluteThickness[1.6`]],Line[{{5.0106352940962555`,0.8036626680952698`},{6.467698726104354`,0.41608591600184536`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.6142719099991583`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.528488`,0.470624`,0.701351`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.9746106287345557`},{3.6888794541139363`,1.3986375589595548`},{5.0106352940962555`,0.6766412106440014`},{6.467698726104354`,0.4158522911141764`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.8503398874989481`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.772079`,0.431554`,0.102387`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,4.254035981225426`},{3.6888794541139363`,4.254035981225426`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.08640786499873876`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.363898`,0.618501`,0.782349`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,1.8118488074701289`},{5.0106352940962555`,0.76120274860731`},{6.467698726104354`,0.4161982940549614`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.3224758424985268`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
1,0.75`,0],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,3.1398542119490007`},{3.6888794541139363`,3.1398542119490007`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.001`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.5585438199983166`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.647624`,0.37816`,0.614037`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.5039146410928438`},{3.6888794541139363`,0.5063384182882541`},{5.0106352940962555`,0.4715538632685849`},{6.467698726104354`,0.4219461912184385`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.7946117974981064`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.571589`,0.586483`,0.`],AbsoluteThickness[1.6`]],Line[{{5.0106352940962555`,0.4755335023132423`},{6.467698726104354`,0.47431447473635635`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]},{Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,2.232225508969771`}},{{6.467698726104354`,0.41619838473474585`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.880722`,0.611041`,0.142051`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.4761052527343323`}},{{3.6888794541139363`,0.4771311599611905`}},{{5.0106352940962555`,0.4728948536479824`}},{{6.467698726104354`,0.4649831140685461`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.560181`,0.691569`,0.194885`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.47587490271599925`}},{{3.6888794541139363`,0.47587568686834175`}},{{5.0106352940962555`,0.4758722543491525`}},{{6.467698726104354`,0.4758563550775087`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.922526`,0.385626`,0.209179`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{5.0106352940962555`,0.8036626680952698`}},{{6.467698726104354`,0.41608591600184536`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.528488`,0.470624`,0.701351`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.9746106287345557`}},{{3.6888794541139363`,1.3986375589595548`}},{{5.0106352940962555`,0.6766412106440014`}},{{6.467698726104354`,0.4158522911141764`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.772079`,0.431554`,0.102387`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,4.254035981225426`}},{{3.6888794541139363`,4.254035981225426`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.363898`,0.618501`,0.782349`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,1.8118488074701289`}},{{5.0106352940962555`,0.76120274860731`}},{{6.467698726104354`,0.4161982940549614`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[1,0.75`,0],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{3.6888794541139363`,3.1398542119490007`}},{{3.6888794541139363`,3.1398542119490007`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.001`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.647624`,0.37816`,0.614037`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.5039146410928438`}},{{3.6888794541139363`,0.5063384182882541`}},{{5.0106352940962555`,0.4715538632685849`}},{{6.467698726104354`,0.4219461912184385`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.571589`,0.586483`,0.`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{5.0106352940962555`,0.4755335023132423`}},{{6.467698726104354`,0.47431447473635635`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.32520490492926973`,0.2026198638857736`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.32520490492926973`,Log[
805]},{0.2026198638857736`,4.254035981225426`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}]},MachineLearning`file12Panel`PackagePrivate`pos$$],PlotLabel -> Grid[
{{Button[Deploy[MouseAppearance[Mouseover[Graphics[{GrayLevel[0.25`],Line[{{0,0.8`},{-1,0},{0,-0.8`}}]},
ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},BaselinePosition -> Scaled[
0.1`]],Graphics[{RGBColor[0.27450980392156865`,0.5372549019607843`,0.792156862745098`],Line[
{{0,0.8`},{-1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},
BaselinePosition -> Scaled[0.1`]]],"LinkHand"]],Set[MachineLearning`file12Panel`PackagePrivate`pos$$,
Max[Plus[MachineLearning`file12Panel`PackagePrivate`pos$$,-1],1]],Appearance -> "Frameless"],Part[
{Tooltip["Learning curve","mean cross entropy for best algorithm at each training size"],"Accuracy",Tooltip[
"Learning curves for all algorithms","mean cross entropy at each training size"]},
MachineLearning`file12Panel`PackagePrivate`pos$$],Button[Deploy[MouseAppearance[Mouseover[
Graphics[{GrayLevel[0.25`],Line[{{0,0.8`},{1,0},{0,-0.8`}}]},ImageSize -> {Automatic,10},
ImagePadding -> {{1,1},{1,1}},BaselinePosition -> Scaled[0.1`]],Graphics[{RGBColor[
0.27450980392156865`,0.5372549019607843`,0.792156862745098`],Line[{{0,0.8`},{1,0},{0,-0.8`}}]},
ImageSize -> {Automatic,10},ImagePadding -> {{1,1},{1,1}},BaselinePosition -> Scaled[
0.1`]]],"LinkHand"]],Set[MachineLearning`file12Panel`PackagePrivate`pos$$,Min[Plus[
MachineLearning`file12Panel`PackagePrivate`pos$$,1],Length[{Graphics[{{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.47587490271599925`},{3.6888794541139363`,0.47587568686834175`},{5.0106352940962555`,0.4728948536479824`},{6.467698726104354`,0.4158522911141764`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.0794415416798357`,0.47587490271599925`}},{{3.6888794541139363`,0.47587568686834175`}},{{5.0106352940962555`,0.4728948536479824`}},{{6.467698726104354`,0.4158522911141764`}}}]}}},{{},{}}},{{},{{{},{},{Hue[
0.67`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[1.6`],
RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{2.0794415416798357`,0.47288674578220086`},{2.0794415416798357`,0.47885415716335866`},{2.0794415416798357`,0.47885415716335866`}}]},{Hue[
0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{3.6888794541139363`,0.4722147290604643`},{3.6888794541139363`,0.4795232909367647`},{3.6888794541139363`,0.4795232909367647`}}]},{Hue[
0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{5.0106352940962555`,0.4695282006434465`},{5.0106352940962555`,0.47625021032026227`},{5.0106352940962555`,0.47625021032026227`}}]},{Hue[
0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],AbsoluteThickness[
1.6`],RGBColor[0.368417`,0.506779`,0.709798`]],Line[{{6.467698726104354`,0.35820629791011926`},{6.467698726104354`,0.4703555661824545`},{6.467698726104354`,0.4703555661824545`}}]}}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.32520490492926973`,0.41251765801672274`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.32520490492926973`,Log[
805]},{0.41251765801672274`,0.47587568686834175`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}],Graphics[{{},{{{},{},{Hue[0.67`,0.6`,0.6`],Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],Line[{{2.0794415416798357`,0.1997557076560499`},{3.6888794541139363`,0.2095589275409243`},{5.0106352940962555`,0.3141736313170995`},{6.467698726104354`,0.43188785042760475`}}]}},{{Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style[Graphics[{EdgeForm[],Disk[{0,0}]}],GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]]}],{0.`,0.`},Automatic,Offset[6.272`]],{{{2.0794415416798357`,0.1997557076560499`}},{{3.6888794541139363`,0.2095589275409243`}},{{5.0106352940962555`,0.3141736313170995`}},{{6.467698726104354`,0.43188785042760475`}}}]}}},{{},{}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.32520490492926973`,0.15763758700636832`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Automatic,None},{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Identity,Identity}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[
{Exp[Part[Slot[1],1]],Identity[Part[Slot[1],2]]}]}},PlotRange -> {{0.32520490492926973`,Log[
805]},{0.15763758700636832`,1}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.05`],0}},Ticks -> {Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]],Automatic}}],Graphics[{{{},{{{},{},Tooltip[{Hue[0.67`,0.6`,
0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,2.232225508969771`},{6.467698726104354`,0.41619838473474585`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.9060679774997897`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.880722`,0.611041`,0.142051`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.4761052527343323`},{3.6888794541139363`,0.4771311599611905`},{5.0106352940962555`,0.4728948536479824`},{6.467698726104354`,0.4649831140685461`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.1421359549995791`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.560181`,0.691569`,0.194885`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.47587490271599925`},{3.6888794541139363`,0.47587568686834175`},{5.0106352940962555`,0.4758722543491525`},{6.467698726104354`,0.4758563550775087`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.37820393249936934`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.922526`,0.385626`,0.209179`],AbsoluteThickness[1.6`]],Line[{{5.0106352940962555`,0.8036626680952698`},{6.467698726104354`,0.41608591600184536`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.6142719099991583`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.528488`,0.470624`,0.701351`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.9746106287345557`},{3.6888794541139363`,1.3986375589595548`},{5.0106352940962555`,0.6766412106440014`},{6.467698726104354`,0.4158522911141764`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.8503398874989481`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.772079`,0.431554`,0.102387`],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,4.254035981225426`},{3.6888794541139363`,4.254035981225426`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.08640786499873876`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.363898`,0.618501`,0.782349`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,1.8118488074701289`},{5.0106352940962555`,0.76120274860731`},{6.467698726104354`,0.4161982940549614`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.3224758424985268`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
1,0.75`,0],AbsoluteThickness[1.6`]],Line[{{3.6888794541139363`,3.1398542119490007`},{3.6888794541139363`,3.1398542119490007`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.001`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.5585438199983166`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.647624`,0.37816`,0.614037`],AbsoluteThickness[1.6`]],Line[{{2.0794415416798357`,0.5039146410928438`},{3.6888794541139363`,0.5063384182882541`},{5.0106352940962555`,0.4715538632685849`},{6.467698726104354`,0.4219461912184385`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Hue[0.7946117974981064`,0.6`,0.6`],Directive[PointSize[0.012833333333333334`],RGBColor[
0.571589`,0.586483`,0.`],AbsoluteThickness[1.6`]],Line[{{5.0106352940962555`,0.4755335023132423`},{6.467698726104354`,0.47431447473635635`}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]},{Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.368417`,0.506779`,0.709798`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,2.232225508969771`}},{{6.467698726104354`,0.41619838473474585`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-6},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.880722`,0.611041`,0.142051`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.4761052527343323`}},{{3.6888794541139363`,0.4771311599611905`}},{{5.0106352940962555`,0.4728948536479824`}},{{6.467698726104354`,0.4649831140685461`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.560181`,0.691569`,0.194885`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.47587490271599925`}},{{3.6888794541139363`,0.47587568686834175`}},{{5.0106352940962555`,0.4758722543491525`}},{{6.467698726104354`,0.4758563550775087`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1000000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.922526`,0.385626`,0.209179`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{5.0106352940962555`,0.8036626680952698`}},{{6.467698726104354`,0.41608591600184536`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.01`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.528488`,0.470624`,0.701351`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.9746106287345557`}},{{3.6888794541139363`,1.3986375589595548`}},{{5.0106352940962555`,0.6766412106440014`}},{{6.467698726104354`,0.4158522911141764`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.1`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.772079`,0.431554`,0.102387`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{3.6888794541139363`,4.254035981225426`}},{{3.6888794541139363`,4.254035981225426`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-5},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.363898`,0.618501`,0.782349`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,1.8118488074701289`}},{{5.0106352940962555`,0.76120274860731`}},{{6.467698726104354`,0.4161982940549614`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",1.`*^-4},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[1,0.75`,0],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{3.6888794541139363`,3.1398542119490007`}},{{3.6888794541139363`,3.1398542119490007`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",0.001`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.647624`,0.37816`,0.614037`],
AbsoluteThickness[1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],
{0.`,0.`}],{{{2.0794415416798357`,0.5039146410928438`}},{{3.6888794541139363`,0.5063384182882541`}},{{5.0106352940962555`,0.4715538632685849`}},{{6.467698726104354`,0.4219461912184385`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]],Tooltip[
{Directive[PointSize[0.012833333333333334`],RGBColor[0.571589`,0.586483`,0.`],AbsoluteThickness[
1.6`]],GeometricTransformation[Inset[Style["\[FilledCircle]",FontSize -> 5],{0.`,0.`}],
{{{5.0106352940962555`,0.4755335023132423`}},{{6.467698726104354`,0.47431447473635635`}}}]},
Column[{Style["LogisticRegression",GrayLevel[0],16],Style[Grid[{{"L1Regularization",0},{"L2Regularization",10000.`},{"OptimizationMethod",Automatic}},
Alignment -> Left,Frame -> All,FrameStyle -> GrayLevel[0.84`],Spacings -> {1,1},Background -> {{{GrayLevel[
0.95`],Opacity[0.8`,GrayLevel[1]]}},None}],FontFamily -> "Verdana"]},Center]]}},{{},{}}}},
{DisplayFunction -> Identity,DisplayFunction -> Identity,AspectRatio -> Power[GoldenRatio,
-1],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0.32520490492926973`,0.2026198638857736`},RuleDelayed[
DisplayFunction,Identity],Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{"training examples used",None}},FrameTicks -> {{Function[
Quiet[Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}},{Function[Quiet[
Charting`ScaledTicks[{Log,Exp}][Slot[1],Slot[2],{6,6}]]],{}}},GridLines -> {Function[
Charting`ScaledTickValues[{Log,Exp}][Slot[1],Slot[2],{6,6}]],Function[Charting`ScaledTickValues[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]},GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageMargins -> 0,ImagePadding -> {{Automatic,10},{37,0}},ImageSize -> 330,LabelStyle -> 10,Method -> {"OptimizePlotMarkers" -> True,"OptimizePlotMarkers" -> True,"CoordinatesToolOptions" -> {"DisplayFunction" -> Function[
{Exp[Part[Slot[1],1]],Exp[Part[Slot[1],2]]}],"CopiedValueFunction" -> Function[{Exp[
Part[Slot[1],1]],Exp[Part[Slot[1],2]]}]}},PlotRange -> {{0.32520490492926973`,Log[
805]},{0.2026198638857736`,4.254035981225426`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],0},{Scaled[0.02`],Scaled[0.05`]}},Ticks -> {Function[Quiet[Charting`ScaledTicks[
{Log,Exp}][Slot[1],Slot[2],{6,6}]]],Function[Quiet[Charting`ScaledTicks[{Log,Exp}][
Slot[1],Slot[2],{6,6}]]]}}]}]]],Appearance -> "Frameless"]}},Alignment -> {Center,Baseline},
ItemSize -> {{3,20,3},{2}}]],StandardForm]],RuleDelayed[DynamicModuleValues,{}],ExpressionUUID -> "ea5d6b38-edef-4ed5-964b-0f223f836059"],
Alignment -> Center,StripOnInput -> False],"\[SpanFromLeft]"}},AutoDelete -> False,
GridBoxDividers -> {"Columns" -> {False,{Opacity[0.15`]},False}},GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
ColumnWidths -> {Automatic,Automatic},ColumnsEqual -> False,ColumnAlignments -> {Right,Left},
ColumnSpacings -> {1.6`,2.5`},RowSpacings -> 2],"Grid"],FrameMargins -> {{10,10},{10,5}},
FrameStyle -> None,StripOnInput -> False],Deploy,DefaultBaseStyle -> "Deploy"],BaseStyle -> {FontWeight -> "Light",FontSize -> 11,FontFamily -> "Roboto",NumberMarks -> False,Deployed -> False},
Alignment -> Center,StripOnInput -> False]}},GridBoxAlignment -> {"Columns" -> {{Left}}},
DefaultBaseStyle -> "Column",GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
ColumnWidths -> Automatic,ColumnAlignments -> Left,RowLines -> False,RowSpacings -> {2,1}],
Background -> GrayLevel[1],FrameMargins -> {{0,0},{0,0}},FrameStyle -> GrayLevel[
0.85`],RoundingRadius -> 5,StripOnInput -> False],LineBreakWithin -> False,StripOnInput -> False],
Deploy,DefaultBaseStyle -> "Deploy"],MachineLearning`MLInformationObject[ClassifierFunction[
Association["ExampleNumber" -> 805,"ClassNumber" -> 5,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 805,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 3346332041650992150,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 2555202630280471291,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 563830308113956072]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-2.1993376515110224`*^-4,0.9994632555953235`,0.0098512996093574`,0.0186792213802998`,0.019803452977484797`,-0.007019674434048915`,-0.009388351607216862`,-0.008984681867241554`,0.0035959655187020414`,9.69829299257879`*^-4,9.372657206434265`*^-4,-1.6938162353166193`*^-4,-0.0014470664717340812`},{-9.44052333395085`*^-6,0.01215649900875883`,0.01592374836784797`,-0.6592976146254711`,0.010540024763610644`,-0.03300566346257224`,-3.9604027107958343`*^-4,-0.017573384374654766`,-0.40460185020620076`,-0.08172864819223333`,0.030205233742012717`,-0.06137061865627779`,-0.6231812932812053`},{-7.563479222902561`*^-6,0.01237849154433496`,0.014763847869681629`,-0.59555236990131`,0.00974457300873843`,-0.036638832166690054`,-1.5427483179772844`*^-4,-0.00751020050920883`,-0.21902330797796327`,0.004035759740085371`,-0.007237954530394087`,0.03580471499344582`,0.7707986289278063`},{2.5516372102488407`*^-5,-0.0051444594967748735`,0.023325888464319572`,0.015702331498939095`,-0.27775497771191776`,-0.47015504123466123`,0.06324105329518447`,-0.7959747609581133`,0.055022834184087134`,0.025619381589764924`,0.015515502003880492`,-0.24360172448817136`,0.012150567113948145`},{4.508751240269394`*^-6,0.005249278472649762`,0.0021683565511631704`,0.0013418261667240458`,-0.21895454313857773`,-0.2761950777200422`,0.011051464078199678`,0.27419345321879696`,0.1376300150943208`,-0.8655809486443817`,0.05714827117219156`,-0.16422845840708833`,0.04502925786374607`},{1.2144787126430366`*^-5,0.005531810865719849`,0.028172475174952142`,0.007593066934605304`,-0.3321913570739404`,-0.43181072659953984`,0.023421424755792987`,0.1756684015852696`,-0.056177320176594596`,0.1152425745007101`,-0.5278669328638245`,0.6101714185354156`,-0.05923768256416605`},{2.2718390879647273`*^-6,0.0027493612833127522`,7.40148279402595`*^-4,-8.895011717978825`*^-4,-0.030412776662692657`,-0.029054894831490527`,-0.01711041138719006`,0.23252248527256272`,-0.017701724825533196`,0.1784183654235646`,-0.650030059057471`,-0.6990987515948798`,0.020926045980949107`},{-1.0375018281955322`*^-5,0.005058046909066427`,0.007980926030409712`,-0.45620203347888494`,0.016601918506654233`,0.01897627705097592`,-0.002947097128729851`,0.023266338772977704`,0.8730433718650656`,0.11976835937940561`,-0.03141049699255086`,0.04138469661369448`,-0.10656544154633696`},{1.963859852852306`*^-5,0.005656167172470062`,0.026374189527229776`,0.008269021653117877`,-0.3283924396740975`,-0.4136004664658877`,-0.06706774999393672`,0.4423405183791549`,-0.02165657089719686`,0.4270639657127903`,0.5404288026442414`,-0.21264204350172716`,0.001143653964753919`},{-3.862673936838115`*^-6,-0.010474951399302644`,0.004431479902646225`,0.0030127644004194994`,0.011196117594620452`,-0.026503589199492035`,-0.9949917258463197`,-0.07591416630011935`,0.0033307963032634625`,-0.03748591166168809`,-0.035982945054469896`,0.0234769238558354`,-2.1473664540046765`*^-4},{2.6339682495214836`*^-4,0.009904579568116956`,-0.9983184839336344`,-0.021019185441526395`,-0.0033738918121616114`,-0.05089558131387299`,-0.003632063178140594`,-1.98958907587299`*^-4,-0.002900135045946418`,0.012968518000441532`,-6.465848877120257`*^-4,0.005253939410644457`,-7.989999634730664`*^-4},{6.349301682747238`*^-6,0.0203608529523548`,-0.025876315193192435`,-0.036725360975635196`,-0.8091865451975263`,0.5815208727838391`,-0.020500934707983615`,-0.06245500951749808`,-0.013460515470216237`,-0.0010187371129548276`,2.115323763367767`*^-4,-0.00908449380416889`,0.005656569154355383`},{0.9999999403661488`,2.1722111434573294`*^-4,2.6418002788836516`*^-4,-6.231575248894953`*^-6,2.9397754465239527`*^-5,3.4350155190844186`*^-5,-5.448755839887982`*^-6,5.923829357065471`*^-6,4.357960163565671`*^-6,-9.782230949930894`*^-6,-3.238599982127123`*^-6,4.158172005116309`*^-6,-1.1670414848171227`*^-6}},
"Precisions" -> {2.851721770917354`*^-4,19.79369145023952`,25.320982128871325`,159.6185227654652`,256.4150911586925`,266.34257004620525`,807.3118434887785`,1628.5554109927136`,2313.1667073698777`,4484.201341904336`,6522.188725055776`,10991.04210735666`,22251.060053402027`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202485`,0.00976389468447205`,0.009359042981366458`,0.03264904022111801`,0.4762135888360247`,0.3022523669180126`,0.24808463417018625`,0.006140410412422362`,0.3815488083018635`,0.0018034680944099377`,0.2762726799950311`,0.06421183714658385`,112.73788819875777`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5339254760969378154]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.099952`,"MaxTrainingMemory" -> 603008,"DataMemory" -> 295936,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,11,45.275086`8.408434260815067},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8326263087375192`,0.8326263087375192`,0.8378634990798789`,0.8655419423233055`,1.0769079118696687`,1.0950673301494556`,1.110806450588314`,1.2037528327847722`,1.2053912950642527`,1.215814799966776`,1.2303422028665685`},
"LeftBoundary" -> 0.8378634990798789`,"LeftScale" -> 0.0026185951711798494`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-13.876348945459664`,0.6678159791416194`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 733552121303723708]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 2208897782306635739]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["LogRescaleNumericalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Indices" -> {1,2,4,6,7,9},"Centers" -> {3.58101`*^-4,3.2167350000000003`*^-4,0.474829433`,0.246863938`,7.865`*^-5,4.59139`*^-4},
"Cutoffs" -> {0.002081417000000222`,0.001259692500000222`,0.004296135000000201`,0.002232655000000222`,3.7080600000022204`*^-4,7.412800000022206`*^-5},
"Version" -> {12.3`,1},"ID" -> 4326383119856038640,"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]]]],MachineLearning`MLProcessor["Standardize",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Mean" -> {0.8215756881588108`,1.0300586351574321`,0.03264904022111799`,0.19323428704308138`,0.3022523669180126`,0.2782388700017806`,1.1757159882266064`,0.38154880830186316`,0.28314243881047935`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.9568468564147751`,1.1128305729696095`,0.03947591013111705`,0.7300190480810053`,0.03556566901688484`,0.7025480434502485`,1.3577239538966965`,0.036182945585849016`,0.8069321486662895`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 3978130136838437204]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{-0.297664612531662`,-0.15135522186756134`,0.055695172399282455`,0.3686859607696533`,0.13803435862064362`,0.8453794717788696`},{-0.12085814774036407`,-0.3311799168586731`,0.13494490087032318`,-0.2784625291824341`,-0.07486412674188614`,-0.008707592263817787`},{0.850235641002655`,0.02360658533871174`,-0.27705198526382446`,-0.38314196467399597`,-0.21273453533649445`,0.10175155848264694`},{0.3767968416213989`,-0.10140053927898407`,-0.27055948972702026`,0.30234938859939575`,0.8440420031547546`,-0.8547330498695374`},{-0.03693236783146858`,0.40930768847465515`,-0.1437256783246994`,-0.32837361097335815`,-0.3948705494403839`,0.21859881281852722`},{-0.27260756492614746`,-0.2338666021823883`,0.5389256477355957`,-0.419556200504303`,0.7740651369094849`,-0.2787778973579407`},{-0.02874654345214367`,0.3140849173069`,0.8285291194915771`,0.010499303229153156`,-0.5293681025505066`,0.264029324054718`},{0.16827335953712463`,-0.34274688363075256`,-0.16042856872081757`,-0.19669659435749054`,-0.05070009082555771`,0.27549126744270325`},{-0.42898115515708923`,-0.13039757311344147`,-0.6897872090339661`,-0.8380780816078186`,0.35405147075653076`,-0.07226528227329254`},{0.008581237867474556`,0.2263442724943161`,0.17453348636627197`,-0.16736607253551483`,-0.40919598937034607`,0.19438496232032776`},{0.1702403426170349`,-0.3060764670372009`,0.3001331090927124`,0.185198575258255`,-0.21563425660133362`,-0.46092838048934937`},{0.0875907689332962`,0.03878721594810486`,0.6575491428375244`,0.18105629086494446`,-0.2873818874359131`,-0.4286987781524658`},{-0.886788547039032`,0.01573818176984787`,-0.1983335167169571`,-0.5857574939727783`,0.29684025049209595`,0.3547218441963196`},{0.011217430233955383`,0.28576284646987915`,-0.34565263986587524`,1.0427803993225098`,-0.21504907310009003`,-0.7426312565803528`},{0.024220159277319908`,0.31866583228111267`,-0.3238298296928406`,0.08364823460578918`,-0.15590693056583405`,-0.24802498519420624`},{-0.4495404064655304`,-0.31875452399253845`,0.5191961526870728`,-0.051596008241176605`,0.5928149223327637`,0.307113379240036`},{-0.05585400387644768`,-0.19572226703166962`,0.013029597699642181`,-0.1585976779460907`,-0.049470286816358566`,0.714141845703125`},{0.3318862318992615`,-0.3905484080314636`,-0.20523269474506378`,0.07787758111953735`,-0.2352791726589203`,0.4611585736274719`},{-0.043521951884031296`,0.23752106726169586`,-0.2690742611885071`,0.4173439145088196`,0.08015140891075134`,-0.31789883971214294`},{0.13919471204280853`,0.275917649269104`,0.2931984066963196`,0.3536943197250366`,-0.5458059310913086`,0.20733734965324402`}}]},
"Version" -> {12.3`,1},"ID" -> 6321109716653815103]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 3833848247369299788]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Nominal"]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Nominal"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["f1" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3605005846534147222]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association[1 -> 1,2 -> 2,3 -> 3,4 -> 4,5 -> 5]},"MissingCode" -> 0,"Version" -> {12.3`,1},
"ID" -> 6962735587533398820,"Output" -> Association["f1" -> Association["Type" -> "NominalVector",
"Weight" -> 1]]]],MachineLearning`MLProcessor["FromVector",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["f1" -> Association[
"Type" -> "NominalVector","Weight" -> 1,"SetSize" -> {5}]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Version" -> {12.3`,1},"ID" -> 5022934801110860942]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Nominal","Weight" -> 1,
"SetSize" -> 5],"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"ProbabilityPostprocessor" -> Identity,"Name" -> "class",
"Marginal" -> Association[1 -> 0.20864197530864198`,2 -> 0.18888888888888888`,3 -> 0.19753086419753085`,
4 -> 0.2037037037037037`,5 -> 0.20123456790123456`]],"LabelSplitter" -> MachineLearning`MLProcessor[
"FeatureLabelSplit",Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",
Association["Index" -> "ESG Label","Order" -> {"ESG Label","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> SparseArray[Automatic,
{5,6},0.`,{1,{{0,1,2,3,4,5},{{2},{3},{4},{5},{6}}},{1.`,1.`,1.`,1.`,1.`}}],"Threshold" -> 0,
"TieBreaker" -> RandomChoice,"PerformanceGoal" -> Automatic,"BatchProcessing" -> Automatic,
"Model" -> Association["LogProbabilitiesFunction" -> LinearLayer[Association["Type" -> "Linear",
"Arrays" -> Association["Weights" -> RawArray["Real32",{{0.3361096978187561`,1.0714081525802612`,-0.9976522922515869`,-1.1329107284545898`,-1.3363338708877563`,-0.7211966514587402`,0.6071208715438843`,-1.0867911577224731`,-0.014179953373968601`,-0.19708749651908875`,0.9411529302597046`,0.11529660224914551`,1.5381667613983154`,-0.5156044363975525`,0.019646383821964264`,-0.07071305066347122`,-0.19047513604164124`,0.12276887893676758`},{0.7234887480735779`,1.5668245553970337`,-0.47006234526634216`,-0.7703610062599182`,0.41605108976364136`,0.3693574070930481`,1.1583298444747925`,-2.1268577575683594`,0.417290061712265`,0.17747853696346283`,-1.7058746814727783`,1.3555842638015747`,0.8722264766693115`,-0.10030891001224518`,0.12662382423877716`,-0.8519586324691772`,0.21562013030052185`,0.27596405148506165`},{0.955234169960022`,2.171809673309326`,-0.03892667219042778`,-0.4585118293762207`,1.7371505498886108`,-0.5837444067001343`,0.016382988542318344`,-0.17488814890384674`,-0.12007950991392136`,-0.056664254516363144`,0.4428960680961609`,-0.08829598873853683`,-0.26246172189712524`,-0.12186424434185028`,-0.2280060052871704`,-0.12627972662448883`,-0.008092169649899006`,0.21888911724090576`},{0.9213624000549316`,1.5721018314361572`,-0.3251161277294159`,-0.19513346254825592`,0.8051022291183472`,0.27093279361724854`,-0.9739384055137634`,-0.4640747904777527`,0.6563335657119751`,-0.07762838900089264`,0.08029894530773163`,0.5811384320259094`,1.5650538206100464`,-0.2880457043647766`,0.20785708725452423`,-0.4019447863101959`,0.10214418917894363`,-0.06201817840337753`}}],
"Biases" -> RawArray["Real32",{-0.5041399002075195`,-0.5679786801338196`,-0.08830561488866806`,0.07443065941333771`}]],
"Parameters" -> Association["OutputDimensions" -> {4},"$OutputSize" -> 4,"$InputSize" -> 18,
"$InputDimensions" -> {18}],"Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
{18},NeuralNetworks`AtomT]],"Outputs" -> Association["Output" -> NeuralNetworks`TensorT[
{4},NeuralNetworks`RealT]]],Association["Version" -> "12.3.3","Unstable" -> False]],
"Processor" -> MachineLearning`MLProcessor["FirstValues",Association["Info" -> Association[
"Weight" -> {0.07692307692307693`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`},
"Type" -> "NumericalVector"],"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect",
"StructurePreserving" -> False,"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LogisticRegression",
"PostProcessor" -> MachineLearning`MLProcessor["Identity"],"Options" -> Association[
"L1Regularization" -> Association["Value" -> 0,"Options" -> Association[]],"L2Regularization" -> Association[
"Value" -> 0.1`,"Options" -> Association[]],"OptimizationMethod" -> Association["Value" -> "LBFGS",
"Options" -> Association[]],MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],
"TrainingInformation" -> Association["PanelCell" -> None,"TrainingFunction" -> Classify,
"EMIterations" -> Missing["KeyAbsent","EMIterations"],"ProcessorEntropyShift" -> 0,
"PreprocessingTime" -> 0.377139`6.028046438680723,"LossName" -> "MeanCrossEntropy",
"BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[1.5156619755937626`,
0.08490122260429898`],"Accuracy" -> Around[0.43188785042760475`,0.055092426610579615`],
"EvaluationTime" -> 1.952076879496753`*^-5,"TestSize" -> 161,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1201458782779823`,"TrainingSize" -> 644,"TrainingTime" -> 0.05011872336272722`,
"TrainingMemory" -> 386968,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.5156619755937626`,0.060034230234528405`]},"AccuracyHistory" -> {Around[0.43188785042760475`,
0.038956228448363044`]},"Configuration" -> {"LogisticRegression","L1Regularization" -> 0,"L2Regularization" -> 0.1`,"OptimizationMethod" -> Automatic,MaxIterations -> 30},
"FinalTrainingSize" -> 805],TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory","Configuration","FinalTrainingSize"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`Atom[
Integer]}],Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "LogisticRegression",
"Options" -> Association["L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-6],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
9.32058606256326`,0.7514211350145207`],"Accuracy" -> Around[0.20898317741901679`,
0.033117936618688636`],"EvaluationTime" -> 2.2474777225327905`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -2.9413734966376284`,"TrainingSize" -> 8,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 151720,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[9.32058606256326`,0.5313349800956598`]},"AccuracyHistory" -> {Around[
0.20898317741901679`,0.023417917561981014`]}],Association["MeanCrossEntropy" -> Around[
1.5161866273185258`,0.08553469804067677`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1205707643845841`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387104,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5161866273185258`,0.060482165011306245`]},
"AccuracyHistory" -> {Around[0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5161866273185258`,
0.08553469804067677`],"ModelMemory" -> 9920,"TrainingMemory" -> 387104,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 1],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6097924420982364`,0.004169773227773915`],"Accuracy" -> Around[0.20877001372085568`,
0.028664336670265907`],"EvaluationTime" -> 1.790077753714996`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1697758590809513`,"TrainingSize" -> 8,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 84000,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6097924420982364`,0.0029484749253690535`]},
"AccuracyHistory" -> {Around[0.20877001372085568`,0.020268746837759245`]}],Association[
"MeanCrossEntropy" -> Around[1.61144478722981`,0.006098119607482217`],"Accuracy" -> Around[
0.2095589275409243`,0.04062217641830138`],"EvaluationTime" -> 1.790077753714996`*^-5,
"TestSize" -> 200,"ModelMemory" -> 9920,"ModelUtility" -> -1.1710404143448487`,"TrainingSize" -> 40,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 96624,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.61144478722981`,0.004312021726937323`]},"AccuracyHistory" -> {Around[
0.2095589275409243`,0.028724216411937165`]}],Association["MeanCrossEntropy" -> Around[
1.604632652835961`,0.0053931578023919055`],"Accuracy" -> Around[0.3141736313170995`,
0.03757390112795914`],"EvaluationTime" -> 1.7216828999637013`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1667195150271672`,"TrainingSize" -> 150,
"TrainingTime" -> 0.015848931924611134`,"TrainingMemory" -> 140472,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.604632652835961`,0.0038135384540804542`]},
"AccuracyHistory" -> {Around[0.3141736313170995`,0.026568760283212776`]}],Association[
"MeanCrossEntropy" -> Around[1.591987306471602`,0.011092852472444438`],"Accuracy" -> Around[
0.35100171853760126`,0.05298781046756226`],"EvaluationTime" -> 1.952076879496753`*^-5,
"TestSize" -> 161,"ModelMemory" -> 9920,"ModelUtility" -> -1.1595284205428884`,"TrainingSize" -> 644,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 381880,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.591987306471602`,0.007843831205967421`]},"AccuracyHistory" -> {Around[
0.35100171853760126`,0.0374680401018408`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.952076879496753`*^-5,"MeanCrossEntropy" -> Around[1.591987306471602`,
0.011092852472444438`],"ModelMemory" -> 9920,"TrainingMemory" -> 381880,"TrainingTime" -> 0.0439878345118114`],
"Index" -> 2],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1000000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6094216690851113`,0.004802026342586034`],"Accuracy" -> Around[0.1997557076560499`,
0.032585938841791943`],"EvaluationTime" -> 1.85847260746629`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -1.169624154239861`,"TrainingSize" -> 8,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 79064,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6094216690851113`,0.00339554539027902`]},"AccuracyHistory" -> {Around[0.1997557076560499`,
0.023041738326361194`]}],Association["MeanCrossEntropy" -> Around[1.609422931117378`,
0.00588125735964293`],"Accuracy" -> Around[0.2095589275409243`,0.04062217641830138`],
"EvaluationTime" -> 1.5848931924611124`*^-5,"TestSize" -> 200,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1697589602587213`,"TrainingSize" -> 40,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 89456,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.609422931117378`,0.0041586769609068056`]},"AccuracyHistory" -> {Around[0.2095589275409243`,
0.028724216411937165`]}],Association["MeanCrossEntropy" -> Around[1.6094174067517646`,
0.00588125783619916`],"Accuracy" -> Around[0.2841074931433402`,0.04502387157216299`],
"EvaluationTime" -> 1.5848931924611124`*^-5,"TestSize" -> 200,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1697555303055487`,"TrainingSize" -> 150,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 129864,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6094174067517646`,0.004158677297882947`]},"AccuracyHistory" -> {Around[0.2841074931433402`,
0.03183668490394867`]}],Association["MeanCrossEntropy" -> Around[1.609391818390645`,
0.0070997952984466475`],"Accuracy" -> Around[0.35749824988731066`,0.05323827058469551`],
"EvaluationTime" -> 1.631192335061535`*^-5,"TestSize" -> 161,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1698909493838072`,"TrainingSize" -> 644,"TrainingTime" -> 0.015848931924611134`,
"TrainingMemory" -> 381816,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.609391818390645`,0.005020313400567992`]},"AccuracyHistory" -> {Around[0.35749824988731066`,
0.037645142149082496`]}]},"PredictedPerformances" -> Association["EvaluationTime" -> 1.631192335061535`*^-5,
"MeanCrossEntropy" -> Around[1.609391818390645`,0.0070997952984466475`],"ModelMemory" -> 9920,
"TrainingMemory" -> 381816,"TrainingTime" -> 0.029811164905763916`],"Index" -> 3],
Association["Value" -> "LogisticRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0.01`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[2.2337072924569417`,0.28457334864072625`],
"Accuracy" -> Around[0.3829511493169532`,0.04851013357177653`],"EvaluationTime" -> 3.7618793838911494`*^-5,
"TestSize" -> 200,"ModelMemory" -> 9920,"ModelUtility" -> -1.5219760890659937`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160600,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.2337072924569417`,0.2012237445688211`]},"AccuracyHistory" -> {Around[
0.3829511493169532`,0.03430184440486838`]}],Association["MeanCrossEntropy" -> Around[
1.5160161133186372`,0.0853417806376378`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1204343836263473`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 386968,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5160161133186372`,0.06034575180740848`]},"AccuracyHistory" -> {Around[
0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5160161133186372`,
0.0853417806376378`],"ModelMemory" -> 9920,"TrainingMemory" -> 386968,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 4],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.1`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
2.6501351235963875`,0.1432699341291214`],"Accuracy" -> Around[0.2404338203257138`,
0.03003572287209651`],"EvaluationTime" -> 1.9192337828501707`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.6785175586923256`,"TrainingSize" -> 8,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 109248,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.6501351235963875`,0.10130714196285172`]},"AccuracyHistory" -> {Around[
0.2404338203257138`,0.021238463320699327`]}],Association["MeanCrossEntropy" -> Around[
4.049678757997456`,0.42608611746771635`],"Accuracy" -> Around[0.23826040704303478`,
0.03435897008507077`],"EvaluationTime" -> 2.1106880150302013`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -2.1126148651911953`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120472,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4.049678757997456`,0.3012883830308701`]},"AccuracyHistory" -> {Around[
0.23826040704303478`,0.02429546074173927`]}],Association["MeanCrossEntropy" -> Around[
1.9672590143753326`,0.14517274224354032`],"Accuracy" -> Around[0.39785356645949577`,
0.03454009337125678`],"EvaluationTime" -> 1.9192337828501707`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.3844449333801845`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160560,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.9672590143753326`,0.10265263048385412`]},"AccuracyHistory" -> {Around[
0.39785356645949577`,0.02442353424563219`]}],Association["MeanCrossEntropy" -> Around[
1.5156619755937626`,0.08490122260429898`],"Accuracy" -> Around[0.43188785042760475`,
0.055092426610579615`],"EvaluationTime" -> 1.952076879496753`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1201458782779823`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 386968,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5156619755937626`,0.060034230234528405`]},
"AccuracyHistory" -> {Around[0.43188785042760475`,0.038956228448363044`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.952076879496753`*^-5,"MeanCrossEntropy" -> Around[1.5156619755937626`,
0.08490122260429898`],"ModelMemory" -> 9920,"TrainingMemory" -> 386968,"TrainingTime" -> 0.0877672685185048`],
"Index" -> 5],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-5],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
70.38892822224278`,7.055866638038663`],"Accuracy" -> Around[0.25646842258242114`,
0.03064503934957135`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -4.967038578821333`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120264,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[70.38892822224278`,4.989251146905065`]},"AccuracyHistory" -> {Around[
0.25646842258242114`,0.021669315133810485`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.6874854730880543`*^-5,"MeanCrossEntropy" -> Around[70.38892822224278`,
7.055866638038663`],"ModelMemory" -> 9920,"TrainingMemory" -> 120264,"TrainingTime" -> 0.2861861282452383`],
"Index" -> 6],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-4],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
6.1217549225546035`,0.43334629362337096`],"Accuracy" -> Around[0.24280043343853058`,
0.030134117124288443`],"EvaluationTime" -> 1.8166415022232294`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -2.5190597984330343`,"TrainingSize" -> 8,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 109544,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[6.1217549225546035`,0.3064221028231423`]},"AccuracyHistory" -> {Around[
0.24280043343853058`,0.02130803856365402`]}],Association["MeanCrossEntropy" -> Around[
2.1408495764830104`,0.14709139782383907`],"Accuracy" -> Around[0.38364122786342447`,
0.030672760774866067`],"EvaluationTime" -> 1.749040841464219`*^-5,"TestSize" -> 500,
"ModelMemory" -> 9920,"ModelUtility" -> -1.4680032849418811`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160376,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.1408495764830104`,0.10400932485544477`]},"AccuracyHistory" -> {Around[
0.38364122786342447`,0.021688917141620537`]}],Association["MeanCrossEntropy" -> Around[
1.5161864898310555`,0.08553434630802562`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1205706288371464`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387032,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5161864898310555`,0.06048191629876344`]},"AccuracyHistory" -> {Around[
0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5161864898310555`,
0.08553434630802562`],"ModelMemory" -> 9920,"TrainingMemory" -> 387032,"TrainingTime" -> 0.0877672685185048`],
"Index" -> 7],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.001`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
23.100498836516962`,2.2949873442055764`],"Accuracy" -> Around[0.22571440567086598`,
0.029182709961341872`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -3.8526816677503963`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120072,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[23.100498836516962`,1.6228011138250682`]},"AccuracyHistory" -> {Around[
0.22571440567086598`,0.020635292107065047`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.6874854730880543`*^-5,"MeanCrossEntropy" -> Around[23.100498836516962`,
2.2949873442055764`],"ModelMemory" -> 9920,"TrainingMemory" -> 120072,"TrainingTime" -> 0.2861861282452383`],
"Index" -> 8],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 10.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6551880720819439`,0.016558884992969376`],"Accuracy" -> Around[0.2175430231937082`,
0.025950628247361458`],"EvaluationTime" -> 1.770291840270806`*^-5,"TestSize" -> 500,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1990661776602973`,"TrainingSize" -> 8,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 109416,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6551880720819439`,0.011708899867416802`]},
"AccuracyHistory" -> {Around[0.2175430231937082`,0.018349865209760455`]}],Association[
"MeanCrossEntropy" -> Around[1.6592047449788616`,0.04350413464759228`],"Accuracy" -> Around[
0.25562535742149456`,0.030594188852795`],"EvaluationTime" -> 1.9192337828501707`*^-5,
"TestSize" -> 400,"ModelMemory" -> 9920,"ModelUtility" -> -1.2047213815106566`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120360,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6592047449788616`,0.030762068618965133`]},
"AccuracyHistory" -> {Around[0.25562535742149456`,0.021633358402713222`]}],Association[
"MeanCrossEntropy" -> Around[1.6024822980108477`,0.06681596562153996`],"Accuracy" -> Around[
0.344842588153545`,0.038723290018501964`],"EvaluationTime" -> 2.2474777225327905`*^-5,
"TestSize" -> 300,"ModelMemory" -> 9920,"ModelUtility" -> -1.1730110376312333`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03981071705534971`,"TrainingMemory" -> 160432,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6024822980108477`,0.04724602238251814`]},"AccuracyHistory" -> {Around[
0.344842588153545`,0.027381500961936086`]}],Association["MeanCrossEntropy" -> Around[
1.524926468040399`,0.06504597406401619`],"Accuracy" -> Around[0.42576956553048617`,
0.05499984934359078`],"EvaluationTime" -> 2.2754440334134477`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.123593732817974`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387272,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.524926468040399`,0.04599444934955014`]},"AccuracyHistory" -> {Around[
0.42576956553048617`,0.03889076643509152`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.2754440334134477`*^-5,"MeanCrossEntropy" -> Around[1.524926468040399`,
0.06504597406401619`],"ModelMemory" -> 9920,"TrainingMemory" -> 387272,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 9],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 10000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.608872305660863`,0.004163925054432974`],"Accuracy" -> Around[0.31034449511311124`,
0.0324848571119849`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.169203677147083`,"TrainingSize" -> 150,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 133416,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.608872305660863`,0.00294433964234212`]},"AccuracyHistory" -> {Around[
0.31034449511311124`,0.022970262749760568`]}],Association["MeanCrossEntropy" -> Around[
1.6069122408818093`,0.007177629851866846`],"Accuracy" -> Around[0.35749824988731066`,
0.05323827058469551`],"EvaluationTime" -> 1.5505897817367396`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1683601073470584`,"TrainingSize" -> 644,
"TrainingTime" -> 0.01995262314968879`,"TrainingMemory" -> 381816,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6069122408818093`,0.005075350741102041`]},
"AccuracyHistory" -> {Around[0.35749824988731066`,0.037645142149082496`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.5505897817367396`*^-5,"MeanCrossEntropy" -> Around[1.6069122408818093`,
0.007177629851866846`],"ModelMemory" -> 9920,"TrainingMemory" -> 381816,"TrainingTime" -> 0.03753003305505265`],
"Index" -> 10]],TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[
TypeSystem`Enumeration["LogisticRegression"]],TypeSystem`Assoc[TypeSystem`AnyType,
TypeSystem`Struct[{"Value"},{TypeSystem`AnyType}],4]}],TypeSystem`Struct[{"Experiments","PredictedPerformances","Index"},
{TypeSystem`Vector[TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1]}],TypeSystem`AnyLength],TypeSystem`Struct[{"EvaluationTime","MeanCrossEntropy","ModelMemory","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real]}],TypeSystem`Atom[Integer]}],10],Association[]],"MaxTrainingSize" -> 805,
"PreprocessorEvaluationTime" -> 6.1328125`*^-6,"PreprocessorMemory" -> 174968,"InputDimension" -> 18,
"OutputDimension" -> 1,"BaselineLogProbability" -> -1.6088861227806173`,"VariableBudget" -> True,
"CheckpointingInfo" -> Association["Checkpointing" -> False],"UserStop" -> False,
"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[{Association[
"TrainingSizes" -> 8,"TimeBudgets" -> 0.13719999999999996`,"ElapsedTimes" -> 0.21484499999999998`,
"ExperimentCounts" -> 6],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.1960000000000001`,
"ElapsedTimes" -> 0.209029`,"ExperimentCounts" -> 6],Association["TrainingSizes" -> 150,
"TimeBudgets" -> 0.2800000000000001`,"ElapsedTimes" -> 0.26501600000000003`,"ExperimentCounts" -> 7],Association[
"TrainingSizes" -> 644,"TimeBudgets" -> 0.4`,"ElapsedTimes" -> 0.38647200000000004`,
"ExperimentCounts" -> 8]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 3608489990807338407],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 8671681518699774353],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 2056596508203573126],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 1939271173859781736],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 1472075894963135518],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 1961206680642115524],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 6533212798570484172],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 7413442416815054776],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 5652205817899745213],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 616513469994011474],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 1897834415516430916],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3238766399573986623],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 2962023910223630262]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 1.604419`,"MaxTrainingMemory" -> 858472,"DataMemory" -> 1657112,
"FunctionMemory" -> 365400,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,11,46.727947`8.422151677257627},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]]]],StandardForm],"Output",ExpressionUUID -> "65c05138-fb25-45a3-b2ce-32da21a5f179"]},
Open],ExpressionUUID -> "4505eca6-a9ea-4600-840b-096ee2d135ab"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["8",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","is"," ","the"," ","accuracy"," ","on"," ","the"," ","training"," ","set","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "86558cce-7829-4343-a425-3a69713fec95"],Cell[
TextData[{"Information"," ","will"," ","return"," ","the"," ","estimated"," ","accuracy"," ","of"," ","the"," ","classifier",":"}],
"Text",ExpressionUUID -> "ed19a150-2e39-4e32-b682-1927b4971523"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[",RowBox[{"cESG",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[139]:= ",ExpressionUUID -> "86b5de34-e3ad-474f-984e-f7bec6c67944"],Cell[
BoxData[
InterpretationBox[TemplateBox[{"0.43","0.06"},"Around",SyntaxForm -> PlusMinus],Around[
0.43188785042760475`,0.055092426610579615`]],StandardForm],"Output",CellLabel -> "Out[139]= ",
ExpressionUUID -> "ec46b896-e7c6-4ae0-9916-29a5f665a488"]},Open],ExpressionUUID -> "73f00cc8-ad9f-4efc-a20f-6883c2fdeb9f"],Cell[
TextData[
{"You"," ","can"," ","also"," ","use"," ","ClassifierMeasurements"," ","to"," ","obtain"," ","the"," ","true"," ","accuracy"," ","computed"," ","on"," ","the"," ","training"," ","set","."}],
"Text",ExpressionUUID -> "51a704c3-76f7-4e14-ad39-a8fe7fb51c01"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{" ",RowBox[{"ClassifierMeasurements","[",RowBox[{"cESG",",","trainingset",",","\"Accuracy\""}],"]"}]}]],
"Input",CellLabel -> "In[141]:= ",ExpressionUUID -> "a4b9292f-0427-4b12-bfd2-c5abf3cf9024"],Cell[
BoxData[
"0.43975155279503103`",StandardForm],"Output",CellLabel -> "Out[141]= ",ExpressionUUID -> "42ff7b80-397b-4f89-a756-d90f832a0d76"]},
Open],ExpressionUUID -> "7f398675-3ecc-4fee-9928-af58dc0c01a3"],Cell[
TextData[{"Both"," ","methods"," ","were"," ","counted"," ","as"," ","correct"," ","for"," ","this"," ","assignment","."}],
"Text",ExpressionUUID -> "4197532e-57b5-4821-9d71-8e75ef4a8663"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["9",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","is"," ","the"," ","accuracy"," ","on"," ","the"," ","testing"," ","set","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "11ae580c-76b3-400d-a760-a6f1f93cd5b5"],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"cmESG"," ","="," ",RowBox[{"ClassifierMeasurements","[",RowBox[{"cESG",",","testset"}],"]"}]}]],
"Input",CellLabel -> "In[142]:= ",ExpressionUUID -> "69ee83da-8254-42d2-b457-debc3de48e54"],Cell[
BoxData[
InterpretationBox[TagBox[StyleBox[FrameBox[GridBox[{{ItemBox[FrameBox[StyleBox["\"Classifier Measurements\"",
12,"SuggestionsBarText",StripOnInput -> False],FrameMargins -> {{10,5},{-4,2}},FrameStyle -> None,
StripOnInput -> False],ItemSize -> {Automatic,1},Alignment -> {Left,Bottom},FrameStyle -> Opacity[
0.1`],Background -> RGBColor[0.96`,0.96`,0.96`],Frame -> {{False,False},{True,False}},
StripOnInput -> False]},{ItemBox[TagBox[FrameBox[TagBox[GridBox[{{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Classifier method\>",ExpressionUUID -> "be7e2afc-2a54-41f0-b48f-b3adcd242a8c"],
TextCell["Classifier method"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],InterpretationBox[
Cell[
"\<LogisticRegression\>",ExpressionUUID -> "c0442940-59d7-49cf-95fc-833a88564d9f"],
TextCell["LogisticRegression"]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[
InterpretationBox[Cell[
"\<Number of test examples\>",ExpressionUUID -> "ba88909c-e2b4-49d8-bc7c-0643e44d91b5"],
TextCell["Number of test examples"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],"202"},{TemplateBox[
{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Accuracy\>",ExpressionUUID -> "eff39f7d-75b0-4fe1-8d8e-fd29adbb60fd"],
TextCell["Accuracy"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{RowBox[{"(",InterpretationBox[TemplateBox[{"42.6","3.5"},"Around",SyntaxForm -> PlusMinus],
Around[42.5742574257425729911`3.,3.4876172903979809625`3.]],")"}],"\"%\"","percent","\"Percent\""},
"QuantityPostfix",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[
TagBox[TooltipBox[InterpretationBox[Cell[
"\<Accuracy baseline\>",ExpressionUUID -> "29dc5137-8794-43c2-9abd-3fc6ebea811a"],
TextCell["Accuracy baseline"]],"\"Accuracy if predicting the commonest class\"",LabelStyle -> "TextStyling"],
Function[Annotation[Slot[1],"Accuracy if predicting the commonest class","Tooltip"]]],
GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[{RowBox[{"(",InterpretationBox[
TemplateBox[{"21.8","2.9"},"Around",SyntaxForm -> PlusMinus],Around[21.7821782178217837611`3.,
2.9114241731096717203`3.]],")"}],"\"%\"","percent","\"Percent\""},"QuantityPostfix",
SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Geometric mean of probabilities\>",ExpressionUUID -> "b6a9ecfa-fed7-4705-b5ad-8056812bac67"],
TextCell["Geometric mean of probabilities"]],GrayLevel[0.4`],StripOnInput -> False]},
"RowDefault"],TagBox[TooltipBox[TemplateBox[{"0.2465445467926846435`3.",StyleBox[
TemplateBox[{"\" \[PlusMinus] \"","0.0137487329094069105`2."},"RowDefault"],{10,Opacity[
0.5`]},StripOnInput -> False]},"RowDefault"],TemplateBox[{"\"95% confidence interval: [\"","0.2190470809738708224`3.","\", \"","0.2740420126114984645`3.","\"]\""},
"RowDefault"],TooltipStyle -> {}],Function[Annotation[Slot[1],Row[{"95% confidence interval: [",0.2190470809738708224`3.,", ",0.2740420126114984645`3.,"]"}],
"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Mean cross entropy\>",ExpressionUUID -> "047a9430-d89e-4f48-96e7-3138a5f0f29b"],
TextCell["Mean cross entropy"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TagBox[
TooltipBox[TemplateBox[{"1.4002125846150781374`3.",StyleBox[TemplateBox[{"\" \[PlusMinus] \"","0.0557368517756857695`2."},
"RowDefault"],{10,Opacity[0.5`]},StripOnInput -> False]},"RowDefault"],TemplateBox[
{"\"95% confidence interval: [\"","1.2887388810637065983`3.","\", \"","1.5116862881664496765`3.","\"]\""},
"RowDefault"],TooltipStyle -> {}],Function[Annotation[Slot[1],Row[{"95% confidence interval: [",1.2887388810637065983`3.,", ",1.5116862881664496765`3.,"]"}],
"Tooltip"]]]},{TemplateBox[{TemplateBox[{5},"Spacer1"],StyleBox[InterpretationBox[
Cell[
"\<Single evaluation time\>",ExpressionUUID -> "66220847-80e5-4334-96dd-d10c08ef4d33"],
TextCell["Single evaluation time"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"9.9`",RowBox[{"\"ms\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"example\""}],"milliseconds per example",FractionBox[
"\"Milliseconds\"","\"Examples\""]},"Quantity",SyntaxForm -> Mod]},{TemplateBox[{TemplateBox[
{5},"Spacer1"],StyleBox[InterpretationBox[Cell[
"\<Batch evaluation speed\>",ExpressionUUID -> "bd622306-d7fc-4fc9-ac9b-95901dd6fd12"],
TextCell["Batch evaluation speed"]],GrayLevel[0.4`],StripOnInput -> False]},"RowDefault"],TemplateBox[
{"3.95`",RowBox[{"\"examples\"","\[InvisibleSpace]","\"/\"","\[InvisibleSpace]","\"ms\""}],"examples per millisecond",FractionBox[
"\"Examples\"","\"Milliseconds\""]},"Quantity",SyntaxForm -> Mod]},{ItemBox[GraphicsBox[
RasterBox[CompressedData["1:eJxTTMoPSmVmYGBghWIQu2VehsIB5Tf2az7V/PvU98S+gnVCQd6Ho/bicVKrmeXf2d8L0i49tuGNfVXh3OWnFjy3ryh/MnP5ldf2Sarzl/OaPraf05t4jHf+NvvfFb0BWbPf2h9bwMdXv/+VPVP23PbgyY/sD839Yclw4639LP8d879p3ref1KQzoaU6G6f5uMzRMqv9NHPjG/t3x75Z5e18YF+6c/fCp4Kl9hPPMa427n5tz5cmqPbw7kP72YaJvznSauznvCnQ/Xjwjb1Tr8WavU7P7dMdlx+Vm3nVfoXw182cgm/te6PEmBfPeWG/50FYz6SXt+w7X1/+a3b3rf2ln3MOKu14bW+XN1ecX+qpPQMYfLB/WCWyzv3hLSifgQGX+ROOvll2o+iN/ff9UaE3Xjy1F1r0/d8qjws4/YvLfFzuxGV+Lpv74rmRb+13uTdE3T720v5o+tzv03ke4DR/6YWEiAsJ7+xfrt6pkbXyrf32krnmbeqvcIY/LvNxpQcA/U8oXQ=="],
{{0,0},{5,5}},{0,1}],Epilog -> CompressedData["1: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"],
Frame -> True,FrameLabel -> {FormBox["\"predicted class\"",TraditionalForm],FormBox[
"\"actual class\"",TraditionalForm]},FrameTicks -> CompressedData["1:eJxTTMoPSmNiYGAoZgESPpnFJWg8VtxyRQxgIOQAEWYHEm75RblO+RUQAW4gEZRfkliSmZ8HFAxmBPINEUYEleakgtUA5WDKoEYCVfADiZCixJRMkHBiDshgrLbzkGK7EbVtZyHFdmNq2/7DngTbTaht+wNSbDelxHay0mAwSMDEgJKEBDHCkJLUADHChJIoBRthbE5JvBAdFkQENdHRDna2JYF4l9B1Cfmt+NOe+mkebL0Bta0nOsODBE0J5XiSrSe6tAP7nlCmI9l6oot6cHqjyHoqJkRi6h3apUNi6h3aJUNi6h3apUJi6h3aJUJi6h18tgMACvoZKg=="],
FrameTicksStyle -> 13,GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageSize -> 228.`,
Method -> CompressedData["1:eJylUttKAzEQrfWGeEGkT775DX5AqVarYGXpFt/j7qQNppkyk0Crv+GL/oEv/pPf4A+YWdHWZVsRA1lOdnLOnBzm6BZ7eqNWq/Fa/FwZ9rr+deoFC+l2BK2J4UTluXEDvSJVIaSZspDTQ+O183b/2CzRGhG0Qatg/QkGlyuapn5qgbdEL3gcKW+yEulwRuqQGg9NxpfOA6nMG3R6dYnNzQhugDjeo+NivZctHUTQj1p3XQwMCbIpVOvzqgXoUwBej+BcWYaKRmdaQ+Z5qSF554UZDG3c/jO1BTelE8U00Mj/UnFvXiZB4/6hJZbahGNrHPDPd1dEpQlAI41OAzFSF3P4DqdCd2xVBiNwfqmuWJ+kElvL2oraNJXjNbpyi/3ZZCQW/e+jtCuEWDHuj4O7I0C5ASziPT/Jeml+ACDqxdw="],
PlotRangePadding -> None],Alignment -> Center,StripOnInput -> False],"\[SpanFromLeft]"}},
AutoDelete -> False,GridBoxDividers -> {"Columns" -> {False,{Opacity[0.15`]},False}},
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},ColumnWidths -> {Automatic,Automatic},
ColumnsEqual -> False,ColumnAlignments -> {Right,Left},ColumnSpacings -> {1.6`,2.5`},
RowSpacings -> 2],"Grid"],FrameMargins -> {{10,10},{10,5}},FrameStyle -> None,StripOnInput -> False],
Deploy,DefaultBaseStyle -> "Deploy"],BaseStyle -> {FontWeight -> "Light",FontSize -> 11,FontFamily -> "Roboto",NumberMarks -> False,Deployed -> False},
Alignment -> Center,StripOnInput -> False]}},GridBoxAlignment -> {"Columns" -> {{Left}}},
DefaultBaseStyle -> "Column",GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
ColumnWidths -> Automatic,ColumnAlignments -> Left,RowLines -> False,RowSpacings -> {2,1}],
Background -> GrayLevel[1],FrameMargins -> {{0,0},{0,0}},FrameStyle -> GrayLevel[
0.85`],RoundingRadius -> 5,StripOnInput -> False],LineBreakWithin -> False,StripOnInput -> False],
Deploy,DefaultBaseStyle -> "Deploy"],ClassifierMeasurementsObject[Association["Model" -> ClassifierFunction[
Association["ExampleNumber" -> 805,"ClassNumber" -> 5,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 805,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 3346332041650992150,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 2555202630280471291,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 563830308113956072]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-2.1993376515110224`*^-4,0.9994632555953235`,0.0098512996093574`,0.0186792213802998`,0.019803452977484797`,-0.007019674434048915`,-0.009388351607216862`,-0.008984681867241554`,0.0035959655187020414`,9.69829299257879`*^-4,9.372657206434265`*^-4,-1.6938162353166193`*^-4,-0.0014470664717340812`},{-9.44052333395085`*^-6,0.01215649900875883`,0.01592374836784797`,-0.6592976146254711`,0.010540024763610644`,-0.03300566346257224`,-3.9604027107958343`*^-4,-0.017573384374654766`,-0.40460185020620076`,-0.08172864819223333`,0.030205233742012717`,-0.06137061865627779`,-0.6231812932812053`},{-7.563479222902561`*^-6,0.01237849154433496`,0.014763847869681629`,-0.59555236990131`,0.00974457300873843`,-0.036638832166690054`,-1.5427483179772844`*^-4,-0.00751020050920883`,-0.21902330797796327`,0.004035759740085371`,-0.007237954530394087`,0.03580471499344582`,0.7707986289278063`},{2.5516372102488407`*^-5,-0.0051444594967748735`,0.023325888464319572`,0.015702331498939095`,-0.27775497771191776`,-0.47015504123466123`,0.06324105329518447`,-0.7959747609581133`,0.055022834184087134`,0.025619381589764924`,0.015515502003880492`,-0.24360172448817136`,0.012150567113948145`},{4.508751240269394`*^-6,0.005249278472649762`,0.0021683565511631704`,0.0013418261667240458`,-0.21895454313857773`,-0.2761950777200422`,0.011051464078199678`,0.27419345321879696`,0.1376300150943208`,-0.8655809486443817`,0.05714827117219156`,-0.16422845840708833`,0.04502925786374607`},{1.2144787126430366`*^-5,0.005531810865719849`,0.028172475174952142`,0.007593066934605304`,-0.3321913570739404`,-0.43181072659953984`,0.023421424755792987`,0.1756684015852696`,-0.056177320176594596`,0.1152425745007101`,-0.5278669328638245`,0.6101714185354156`,-0.05923768256416605`},{2.2718390879647273`*^-6,0.0027493612833127522`,7.40148279402595`*^-4,-8.895011717978825`*^-4,-0.030412776662692657`,-0.029054894831490527`,-0.01711041138719006`,0.23252248527256272`,-0.017701724825533196`,0.1784183654235646`,-0.650030059057471`,-0.6990987515948798`,0.020926045980949107`},{-1.0375018281955322`*^-5,0.005058046909066427`,0.007980926030409712`,-0.45620203347888494`,0.016601918506654233`,0.01897627705097592`,-0.002947097128729851`,0.023266338772977704`,0.8730433718650656`,0.11976835937940561`,-0.03141049699255086`,0.04138469661369448`,-0.10656544154633696`},{1.963859852852306`*^-5,0.005656167172470062`,0.026374189527229776`,0.008269021653117877`,-0.3283924396740975`,-0.4136004664658877`,-0.06706774999393672`,0.4423405183791549`,-0.02165657089719686`,0.4270639657127903`,0.5404288026442414`,-0.21264204350172716`,0.001143653964753919`},{-3.862673936838115`*^-6,-0.010474951399302644`,0.004431479902646225`,0.0030127644004194994`,0.011196117594620452`,-0.026503589199492035`,-0.9949917258463197`,-0.07591416630011935`,0.0033307963032634625`,-0.03748591166168809`,-0.035982945054469896`,0.0234769238558354`,-2.1473664540046765`*^-4},{2.6339682495214836`*^-4,0.009904579568116956`,-0.9983184839336344`,-0.021019185441526395`,-0.0033738918121616114`,-0.05089558131387299`,-0.003632063178140594`,-1.98958907587299`*^-4,-0.002900135045946418`,0.012968518000441532`,-6.465848877120257`*^-4,0.005253939410644457`,-7.989999634730664`*^-4},{6.349301682747238`*^-6,0.0203608529523548`,-0.025876315193192435`,-0.036725360975635196`,-0.8091865451975263`,0.5815208727838391`,-0.020500934707983615`,-0.06245500951749808`,-0.013460515470216237`,-0.0010187371129548276`,2.115323763367767`*^-4,-0.00908449380416889`,0.005656569154355383`},{0.9999999403661488`,2.1722111434573294`*^-4,2.6418002788836516`*^-4,-6.231575248894953`*^-6,2.9397754465239527`*^-5,3.4350155190844186`*^-5,-5.448755839887982`*^-6,5.923829357065471`*^-6,4.357960163565671`*^-6,-9.782230949930894`*^-6,-3.238599982127123`*^-6,4.158172005116309`*^-6,-1.1670414848171227`*^-6}},
"Precisions" -> {2.851721770917354`*^-4,19.79369145023952`,25.320982128871325`,159.6185227654652`,256.4150911586925`,266.34257004620525`,807.3118434887785`,1628.5554109927136`,2313.1667073698777`,4484.201341904336`,6522.188725055776`,10991.04210735666`,22251.060053402027`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202485`,0.00976389468447205`,0.009359042981366458`,0.03264904022111801`,0.4762135888360247`,0.3022523669180126`,0.24808463417018625`,0.006140410412422362`,0.3815488083018635`,0.0018034680944099377`,0.2762726799950311`,0.06421183714658385`,112.73788819875777`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5339254760969378154]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.099952`,"MaxTrainingMemory" -> 603008,"DataMemory" -> 295936,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,11,45.275086`8.408434260815067},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8326263087375192`,0.8326263087375192`,0.8378634990798789`,0.8655419423233055`,1.0769079118696687`,1.0950673301494556`,1.110806450588314`,1.2037528327847722`,1.2053912950642527`,1.215814799966776`,1.2303422028665685`},
"LeftBoundary" -> 0.8378634990798789`,"LeftScale" -> 0.0026185951711798494`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-13.876348945459664`,0.6678159791416194`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 733552121303723708]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 2208897782306635739]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["LogRescaleNumericalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Indices" -> {1,2,4,6,7,9},"Centers" -> {3.58101`*^-4,3.2167350000000003`*^-4,0.474829433`,0.246863938`,7.865`*^-5,4.59139`*^-4},
"Cutoffs" -> {0.002081417000000222`,0.001259692500000222`,0.004296135000000201`,0.002232655000000222`,3.7080600000022204`*^-4,7.412800000022206`*^-5},
"Version" -> {12.3`,1},"ID" -> 4326383119856038640,"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]]]],MachineLearning`MLProcessor["Standardize",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Mean" -> {0.8215756881588108`,1.0300586351574321`,0.03264904022111799`,0.19323428704308138`,0.3022523669180126`,0.2782388700017806`,1.1757159882266064`,0.38154880830186316`,0.28314243881047935`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.9568468564147751`,1.1128305729696095`,0.03947591013111705`,0.7300190480810053`,0.03556566901688484`,0.7025480434502485`,1.3577239538966965`,0.036182945585849016`,0.8069321486662895`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 3978130136838437204]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{-0.297664612531662`,-0.15135522186756134`,0.055695172399282455`,0.3686859607696533`,0.13803435862064362`,0.8453794717788696`},{-0.12085814774036407`,-0.3311799168586731`,0.13494490087032318`,-0.2784625291824341`,-0.07486412674188614`,-0.008707592263817787`},{0.850235641002655`,0.02360658533871174`,-0.27705198526382446`,-0.38314196467399597`,-0.21273453533649445`,0.10175155848264694`},{0.3767968416213989`,-0.10140053927898407`,-0.27055948972702026`,0.30234938859939575`,0.8440420031547546`,-0.8547330498695374`},{-0.03693236783146858`,0.40930768847465515`,-0.1437256783246994`,-0.32837361097335815`,-0.3948705494403839`,0.21859881281852722`},{-0.27260756492614746`,-0.2338666021823883`,0.5389256477355957`,-0.419556200504303`,0.7740651369094849`,-0.2787778973579407`},{-0.02874654345214367`,0.3140849173069`,0.8285291194915771`,0.010499303229153156`,-0.5293681025505066`,0.264029324054718`},{0.16827335953712463`,-0.34274688363075256`,-0.16042856872081757`,-0.19669659435749054`,-0.05070009082555771`,0.27549126744270325`},{-0.42898115515708923`,-0.13039757311344147`,-0.6897872090339661`,-0.8380780816078186`,0.35405147075653076`,-0.07226528227329254`},{0.008581237867474556`,0.2263442724943161`,0.17453348636627197`,-0.16736607253551483`,-0.40919598937034607`,0.19438496232032776`},{0.1702403426170349`,-0.3060764670372009`,0.3001331090927124`,0.185198575258255`,-0.21563425660133362`,-0.46092838048934937`},{0.0875907689332962`,0.03878721594810486`,0.6575491428375244`,0.18105629086494446`,-0.2873818874359131`,-0.4286987781524658`},{-0.886788547039032`,0.01573818176984787`,-0.1983335167169571`,-0.5857574939727783`,0.29684025049209595`,0.3547218441963196`},{0.011217430233955383`,0.28576284646987915`,-0.34565263986587524`,1.0427803993225098`,-0.21504907310009003`,-0.7426312565803528`},{0.024220159277319908`,0.31866583228111267`,-0.3238298296928406`,0.08364823460578918`,-0.15590693056583405`,-0.24802498519420624`},{-0.4495404064655304`,-0.31875452399253845`,0.5191961526870728`,-0.051596008241176605`,0.5928149223327637`,0.307113379240036`},{-0.05585400387644768`,-0.19572226703166962`,0.013029597699642181`,-0.1585976779460907`,-0.049470286816358566`,0.714141845703125`},{0.3318862318992615`,-0.3905484080314636`,-0.20523269474506378`,0.07787758111953735`,-0.2352791726589203`,0.4611585736274719`},{-0.043521951884031296`,0.23752106726169586`,-0.2690742611885071`,0.4173439145088196`,0.08015140891075134`,-0.31789883971214294`},{0.13919471204280853`,0.275917649269104`,0.2931984066963196`,0.3536943197250366`,-0.5458059310913086`,0.20733734965324402`}}]},
"Version" -> {12.3`,1},"ID" -> 6321109716653815103]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 3833848247369299788]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Nominal"]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Nominal"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["f1" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3605005846534147222]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association[1 -> 1,2 -> 2,3 -> 3,4 -> 4,5 -> 5]},"MissingCode" -> 0,"Version" -> {12.3`,1},
"ID" -> 6962735587533398820,"Output" -> Association["f1" -> Association["Type" -> "NominalVector",
"Weight" -> 1]]]],MachineLearning`MLProcessor["FromVector",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["f1" -> Association[
"Type" -> "NominalVector","Weight" -> 1,"SetSize" -> {5}]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Version" -> {12.3`,1},"ID" -> 5022934801110860942]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Nominal","Weight" -> 1,
"SetSize" -> 5],"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"ProbabilityPostprocessor" -> Identity,"Name" -> "class",
"Marginal" -> Association[1 -> 0.20864197530864198`,2 -> 0.18888888888888888`,3 -> 0.19753086419753085`,
4 -> 0.2037037037037037`,5 -> 0.20123456790123456`]],"LabelSplitter" -> MachineLearning`MLProcessor[
"FeatureLabelSplit",Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",
Association["Index" -> "ESG Label","Order" -> {"ESG Label","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> SparseArray[Automatic,
{5,6},0.`,{1,{{0,1,2,3,4,5},{{2},{3},{4},{5},{6}}},{1.`,1.`,1.`,1.`,1.`}}],"Threshold" -> 0,
"TieBreaker" -> RandomChoice,"PerformanceGoal" -> Automatic,"BatchProcessing" -> Automatic,
"Model" -> Association["LogProbabilitiesFunction" -> LinearLayer[Association["Type" -> "Linear",
"Arrays" -> Association["Weights" -> RawArray["Real32",{{0.3361096978187561`,1.0714081525802612`,-0.9976522922515869`,-1.1329107284545898`,-1.3363338708877563`,-0.7211966514587402`,0.6071208715438843`,-1.0867911577224731`,-0.014179953373968601`,-0.19708749651908875`,0.9411529302597046`,0.11529660224914551`,1.5381667613983154`,-0.5156044363975525`,0.019646383821964264`,-0.07071305066347122`,-0.19047513604164124`,0.12276887893676758`},{0.7234887480735779`,1.5668245553970337`,-0.47006234526634216`,-0.7703610062599182`,0.41605108976364136`,0.3693574070930481`,1.1583298444747925`,-2.1268577575683594`,0.417290061712265`,0.17747853696346283`,-1.7058746814727783`,1.3555842638015747`,0.8722264766693115`,-0.10030891001224518`,0.12662382423877716`,-0.8519586324691772`,0.21562013030052185`,0.27596405148506165`},{0.955234169960022`,2.171809673309326`,-0.03892667219042778`,-0.4585118293762207`,1.7371505498886108`,-0.5837444067001343`,0.016382988542318344`,-0.17488814890384674`,-0.12007950991392136`,-0.056664254516363144`,0.4428960680961609`,-0.08829598873853683`,-0.26246172189712524`,-0.12186424434185028`,-0.2280060052871704`,-0.12627972662448883`,-0.008092169649899006`,0.21888911724090576`},{0.9213624000549316`,1.5721018314361572`,-0.3251161277294159`,-0.19513346254825592`,0.8051022291183472`,0.27093279361724854`,-0.9739384055137634`,-0.4640747904777527`,0.6563335657119751`,-0.07762838900089264`,0.08029894530773163`,0.5811384320259094`,1.5650538206100464`,-0.2880457043647766`,0.20785708725452423`,-0.4019447863101959`,0.10214418917894363`,-0.06201817840337753`}}],
"Biases" -> RawArray["Real32",{-0.5041399002075195`,-0.5679786801338196`,-0.08830561488866806`,0.07443065941333771`}]],
"Parameters" -> Association["OutputDimensions" -> {4},"$OutputSize" -> 4,"$InputSize" -> 18,
"$InputDimensions" -> {18}],"Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
{18},NeuralNetworks`AtomT]],"Outputs" -> Association["Output" -> NeuralNetworks`TensorT[
{4},NeuralNetworks`RealT]]],Association["Version" -> "12.3.3","Unstable" -> False]],
"Processor" -> MachineLearning`MLProcessor["FirstValues",Association["Info" -> Association[
"Weight" -> {0.07692307692307693`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.16239316239316237`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`,0.9957264957264957`},
"Type" -> "NumericalVector"],"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect",
"StructurePreserving" -> False,"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LogisticRegression",
"PostProcessor" -> MachineLearning`MLProcessor["Identity"],"Options" -> Association[
"L1Regularization" -> Association["Value" -> 0,"Options" -> Association[]],"L2Regularization" -> Association[
"Value" -> 0.1`,"Options" -> Association[]],"OptimizationMethod" -> Association["Value" -> "LBFGS",
"Options" -> Association[]],MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],
"TrainingInformation" -> Association["PanelCell" -> None,"TrainingFunction" -> Classify,
"EMIterations" -> Missing["KeyAbsent","EMIterations"],"ProcessorEntropyShift" -> 0,
"PreprocessingTime" -> 0.377139`6.028046438680723,"LossName" -> "MeanCrossEntropy",
"BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[1.5156619755937626`,
0.08490122260429898`],"Accuracy" -> Around[0.43188785042760475`,0.055092426610579615`],
"EvaluationTime" -> 1.952076879496753`*^-5,"TestSize" -> 161,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1201458782779823`,"TrainingSize" -> 644,"TrainingTime" -> 0.05011872336272722`,
"TrainingMemory" -> 386968,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.5156619755937626`,0.060034230234528405`]},"AccuracyHistory" -> {Around[0.43188785042760475`,
0.038956228448363044`]},"Configuration" -> {"LogisticRegression","L1Regularization" -> 0,"L2Regularization" -> 0.1`,"OptimizationMethod" -> Automatic,MaxIterations -> 30},
"FinalTrainingSize" -> 805],TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory","Configuration","FinalTrainingSize"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`Atom[
Integer]}],Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "LogisticRegression",
"Options" -> Association["L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-6],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
9.32058606256326`,0.7514211350145207`],"Accuracy" -> Around[0.20898317741901679`,
0.033117936618688636`],"EvaluationTime" -> 2.2474777225327905`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -2.9413734966376284`,"TrainingSize" -> 8,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 151720,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[9.32058606256326`,0.5313349800956598`]},"AccuracyHistory" -> {Around[
0.20898317741901679`,0.023417917561981014`]}],Association["MeanCrossEntropy" -> Around[
1.5161866273185258`,0.08553469804067677`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1205707643845841`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387104,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5161866273185258`,0.060482165011306245`]},
"AccuracyHistory" -> {Around[0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5161866273185258`,
0.08553469804067677`],"ModelMemory" -> 9920,"TrainingMemory" -> 387104,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 1],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6097924420982364`,0.004169773227773915`],"Accuracy" -> Around[0.20877001372085568`,
0.028664336670265907`],"EvaluationTime" -> 1.790077753714996`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1697758590809513`,"TrainingSize" -> 8,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 84000,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6097924420982364`,0.0029484749253690535`]},
"AccuracyHistory" -> {Around[0.20877001372085568`,0.020268746837759245`]}],Association[
"MeanCrossEntropy" -> Around[1.61144478722981`,0.006098119607482217`],"Accuracy" -> Around[
0.2095589275409243`,0.04062217641830138`],"EvaluationTime" -> 1.790077753714996`*^-5,
"TestSize" -> 200,"ModelMemory" -> 9920,"ModelUtility" -> -1.1710404143448487`,"TrainingSize" -> 40,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 96624,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.61144478722981`,0.004312021726937323`]},"AccuracyHistory" -> {Around[
0.2095589275409243`,0.028724216411937165`]}],Association["MeanCrossEntropy" -> Around[
1.604632652835961`,0.0053931578023919055`],"Accuracy" -> Around[0.3141736313170995`,
0.03757390112795914`],"EvaluationTime" -> 1.7216828999637013`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1667195150271672`,"TrainingSize" -> 150,
"TrainingTime" -> 0.015848931924611134`,"TrainingMemory" -> 140472,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.604632652835961`,0.0038135384540804542`]},
"AccuracyHistory" -> {Around[0.3141736313170995`,0.026568760283212776`]}],Association[
"MeanCrossEntropy" -> Around[1.591987306471602`,0.011092852472444438`],"Accuracy" -> Around[
0.35100171853760126`,0.05298781046756226`],"EvaluationTime" -> 1.952076879496753`*^-5,
"TestSize" -> 161,"ModelMemory" -> 9920,"ModelUtility" -> -1.1595284205428884`,"TrainingSize" -> 644,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 381880,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.591987306471602`,0.007843831205967421`]},"AccuracyHistory" -> {Around[
0.35100171853760126`,0.0374680401018408`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.952076879496753`*^-5,"MeanCrossEntropy" -> Around[1.591987306471602`,
0.011092852472444438`],"ModelMemory" -> 9920,"TrainingMemory" -> 381880,"TrainingTime" -> 0.0439878345118114`],
"Index" -> 2],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1000000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6094216690851113`,0.004802026342586034`],"Accuracy" -> Around[0.1997557076560499`,
0.032585938841791943`],"EvaluationTime" -> 1.85847260746629`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -1.169624154239861`,"TrainingSize" -> 8,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 79064,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6094216690851113`,0.00339554539027902`]},"AccuracyHistory" -> {Around[0.1997557076560499`,
0.023041738326361194`]}],Association["MeanCrossEntropy" -> Around[1.609422931117378`,
0.00588125735964293`],"Accuracy" -> Around[0.2095589275409243`,0.04062217641830138`],
"EvaluationTime" -> 1.5848931924611124`*^-5,"TestSize" -> 200,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1697589602587213`,"TrainingSize" -> 40,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 89456,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.609422931117378`,0.0041586769609068056`]},"AccuracyHistory" -> {Around[0.2095589275409243`,
0.028724216411937165`]}],Association["MeanCrossEntropy" -> Around[1.6094174067517646`,
0.00588125783619916`],"Accuracy" -> Around[0.2841074931433402`,0.04502387157216299`],
"EvaluationTime" -> 1.5848931924611124`*^-5,"TestSize" -> 200,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1697555303055487`,"TrainingSize" -> 150,"TrainingTime" -> 0.01`,
"TrainingMemory" -> 129864,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6094174067517646`,0.004158677297882947`]},"AccuracyHistory" -> {Around[0.2841074931433402`,
0.03183668490394867`]}],Association["MeanCrossEntropy" -> Around[1.609391818390645`,
0.0070997952984466475`],"Accuracy" -> Around[0.35749824988731066`,0.05323827058469551`],
"EvaluationTime" -> 1.631192335061535`*^-5,"TestSize" -> 161,"ModelMemory" -> 9920,
"ModelUtility" -> -1.1698909493838072`,"TrainingSize" -> 644,"TrainingTime" -> 0.015848931924611134`,
"TrainingMemory" -> 381816,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.609391818390645`,0.005020313400567992`]},"AccuracyHistory" -> {Around[0.35749824988731066`,
0.037645142149082496`]}]},"PredictedPerformances" -> Association["EvaluationTime" -> 1.631192335061535`*^-5,
"MeanCrossEntropy" -> Around[1.609391818390645`,0.0070997952984466475`],"ModelMemory" -> 9920,
"TrainingMemory" -> 381816,"TrainingTime" -> 0.029811164905763916`],"Index" -> 3],
Association["Value" -> "LogisticRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0.01`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[2.2337072924569417`,0.28457334864072625`],
"Accuracy" -> Around[0.3829511493169532`,0.04851013357177653`],"EvaluationTime" -> 3.7618793838911494`*^-5,
"TestSize" -> 200,"ModelMemory" -> 9920,"ModelUtility" -> -1.5219760890659937`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160600,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.2337072924569417`,0.2012237445688211`]},"AccuracyHistory" -> {Around[
0.3829511493169532`,0.03430184440486838`]}],Association["MeanCrossEntropy" -> Around[
1.5160161133186372`,0.0853417806376378`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1204343836263473`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 386968,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5160161133186372`,0.06034575180740848`]},"AccuracyHistory" -> {Around[
0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5160161133186372`,
0.0853417806376378`],"ModelMemory" -> 9920,"TrainingMemory" -> 386968,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 4],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.1`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
2.6501351235963875`,0.1432699341291214`],"Accuracy" -> Around[0.2404338203257138`,
0.03003572287209651`],"EvaluationTime" -> 1.9192337828501707`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.6785175586923256`,"TrainingSize" -> 8,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 109248,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.6501351235963875`,0.10130714196285172`]},"AccuracyHistory" -> {Around[
0.2404338203257138`,0.021238463320699327`]}],Association["MeanCrossEntropy" -> Around[
4.049678757997456`,0.42608611746771635`],"Accuracy" -> Around[0.23826040704303478`,
0.03435897008507077`],"EvaluationTime" -> 2.1106880150302013`*^-5,"TestSize" -> 300,
"ModelMemory" -> 9920,"ModelUtility" -> -2.1126148651911953`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120472,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[4.049678757997456`,0.3012883830308701`]},"AccuracyHistory" -> {Around[
0.23826040704303478`,0.02429546074173927`]}],Association["MeanCrossEntropy" -> Around[
1.9672590143753326`,0.14517274224354032`],"Accuracy" -> Around[0.39785356645949577`,
0.03454009337125678`],"EvaluationTime" -> 1.9192337828501707`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.3844449333801845`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160560,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.9672590143753326`,0.10265263048385412`]},"AccuracyHistory" -> {Around[
0.39785356645949577`,0.02442353424563219`]}],Association["MeanCrossEntropy" -> Around[
1.5156619755937626`,0.08490122260429898`],"Accuracy" -> Around[0.43188785042760475`,
0.055092426610579615`],"EvaluationTime" -> 1.952076879496753`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1201458782779823`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 386968,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5156619755937626`,0.060034230234528405`]},
"AccuracyHistory" -> {Around[0.43188785042760475`,0.038956228448363044`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.952076879496753`*^-5,"MeanCrossEntropy" -> Around[1.5156619755937626`,
0.08490122260429898`],"ModelMemory" -> 9920,"TrainingMemory" -> 386968,"TrainingTime" -> 0.0877672685185048`],
"Index" -> 5],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-5],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
70.38892822224278`,7.055866638038663`],"Accuracy" -> Around[0.25646842258242114`,
0.03064503934957135`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -4.967038578821333`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120264,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[70.38892822224278`,4.989251146905065`]},"AccuracyHistory" -> {Around[
0.25646842258242114`,0.021669315133810485`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.6874854730880543`*^-5,"MeanCrossEntropy" -> Around[70.38892822224278`,
7.055866638038663`],"ModelMemory" -> 9920,"TrainingMemory" -> 120264,"TrainingTime" -> 0.2861861282452383`],
"Index" -> 6],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-4],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
6.1217549225546035`,0.43334629362337096`],"Accuracy" -> Around[0.24280043343853058`,
0.030134117124288443`],"EvaluationTime" -> 1.8166415022232294`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -2.5190597984330343`,"TrainingSize" -> 8,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 109544,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[6.1217549225546035`,0.3064221028231423`]},"AccuracyHistory" -> {Around[
0.24280043343853058`,0.02130803856365402`]}],Association["MeanCrossEntropy" -> Around[
2.1408495764830104`,0.14709139782383907`],"Accuracy" -> Around[0.38364122786342447`,
0.030672760774866067`],"EvaluationTime" -> 1.749040841464219`*^-5,"TestSize" -> 500,
"ModelMemory" -> 9920,"ModelUtility" -> -1.4680032849418811`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 160376,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.1408495764830104`,0.10400932485544477`]},"AccuracyHistory" -> {Around[
0.38364122786342447`,0.021688917141620537`]}],Association["MeanCrossEntropy" -> Around[
1.5161864898310555`,0.08553434630802562`],"Accuracy" -> Around[0.4379855770589131`,
0.05517096552996904`],"EvaluationTime" -> 1.2957021280052078`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1205706288371464`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387032,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.5161864898310555`,0.06048191629876344`]},"AccuracyHistory" -> {Around[
0.4379855770589131`,0.039011763850850374`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.2957021280052078`*^-5,"MeanCrossEntropy" -> Around[1.5161864898310555`,
0.08553434630802562`],"ModelMemory" -> 9920,"TrainingMemory" -> 387032,"TrainingTime" -> 0.0877672685185048`],
"Index" -> 7],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.001`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
23.100498836516962`,2.2949873442055764`],"Accuracy" -> Around[0.22571440567086598`,
0.029182709961341872`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -3.8526816677503963`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120072,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[23.100498836516962`,1.6228011138250682`]},"AccuracyHistory" -> {Around[
0.22571440567086598`,0.020635292107065047`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.6874854730880543`*^-5,"MeanCrossEntropy" -> Around[23.100498836516962`,
2.2949873442055764`],"ModelMemory" -> 9920,"TrainingMemory" -> 120072,"TrainingTime" -> 0.2861861282452383`],
"Index" -> 8],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 10.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.6551880720819439`,0.016558884992969376`],"Accuracy" -> Around[0.2175430231937082`,
0.025950628247361458`],"EvaluationTime" -> 1.770291840270806`*^-5,"TestSize" -> 500,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1990661776602973`,"TrainingSize" -> 8,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 109416,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6551880720819439`,0.011708899867416802`]},
"AccuracyHistory" -> {Around[0.2175430231937082`,0.018349865209760455`]}],Association[
"MeanCrossEntropy" -> Around[1.6592047449788616`,0.04350413464759228`],"Accuracy" -> Around[
0.25562535742149456`,0.030594188852795`],"EvaluationTime" -> 1.9192337828501707`*^-5,
"TestSize" -> 400,"ModelMemory" -> 9920,"ModelUtility" -> -1.2047213815106566`,"TrainingSize" -> 40,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 120360,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6592047449788616`,0.030762068618965133`]},
"AccuracyHistory" -> {Around[0.25562535742149456`,0.021633358402713222`]}],Association[
"MeanCrossEntropy" -> Around[1.6024822980108477`,0.06681596562153996`],"Accuracy" -> Around[
0.344842588153545`,0.038723290018501964`],"EvaluationTime" -> 2.2474777225327905`*^-5,
"TestSize" -> 300,"ModelMemory" -> 9920,"ModelUtility" -> -1.1730110376312333`,"TrainingSize" -> 150,
"TrainingTime" -> 0.03981071705534971`,"TrainingMemory" -> 160432,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6024822980108477`,0.04724602238251814`]},"AccuracyHistory" -> {Around[
0.344842588153545`,0.027381500961936086`]}],Association["MeanCrossEntropy" -> Around[
1.524926468040399`,0.06504597406401619`],"Accuracy" -> Around[0.42576956553048617`,
0.05499984934359078`],"EvaluationTime" -> 2.2754440334134477`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.123593732817974`,"TrainingSize" -> 644,
"TrainingTime" -> 0.05011872336272722`,"TrainingMemory" -> 387272,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.524926468040399`,0.04599444934955014`]},"AccuracyHistory" -> {Around[
0.42576956553048617`,0.03889076643509152`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.2754440334134477`*^-5,"MeanCrossEntropy" -> Around[1.524926468040399`,
0.06504597406401619`],"ModelMemory" -> 9920,"TrainingMemory" -> 387272,"TrainingTime" -> 0.09427118080509281`],
"Index" -> 9],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 10000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.608872305660863`,0.004163925054432974`],"Accuracy" -> Around[0.31034449511311124`,
0.0324848571119849`],"EvaluationTime" -> 1.6874854730880543`*^-5,"TestSize" -> 400,
"ModelMemory" -> 9920,"ModelUtility" -> -1.169203677147083`,"TrainingSize" -> 150,
"TrainingTime" -> 0.012589254117941668`,"TrainingMemory" -> 133416,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.608872305660863`,0.00294433964234212`]},"AccuracyHistory" -> {Around[
0.31034449511311124`,0.022970262749760568`]}],Association["MeanCrossEntropy" -> Around[
1.6069122408818093`,0.007177629851866846`],"Accuracy" -> Around[0.35749824988731066`,
0.05323827058469551`],"EvaluationTime" -> 1.5505897817367396`*^-5,"TestSize" -> 161,
"ModelMemory" -> 9920,"ModelUtility" -> -1.1683601073470584`,"TrainingSize" -> 644,
"TrainingTime" -> 0.01995262314968879`,"TrainingMemory" -> 381816,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6069122408818093`,0.005075350741102041`]},
"AccuracyHistory" -> {Around[0.35749824988731066`,0.037645142149082496`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.5505897817367396`*^-5,"MeanCrossEntropy" -> Around[1.6069122408818093`,
0.007177629851866846`],"ModelMemory" -> 9920,"TrainingMemory" -> 381816,"TrainingTime" -> 0.03753003305505265`],
"Index" -> 10]],TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[
TypeSystem`Enumeration["LogisticRegression"]],TypeSystem`Assoc[TypeSystem`AnyType,
TypeSystem`Struct[{"Value"},{TypeSystem`AnyType}],4]}],TypeSystem`Struct[{"Experiments","PredictedPerformances","Index"},
{TypeSystem`Vector[TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1]}],TypeSystem`AnyLength],TypeSystem`Struct[{"EvaluationTime","MeanCrossEntropy","ModelMemory","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real]}],TypeSystem`Atom[Integer]}],10],Association[]],"MaxTrainingSize" -> 805,
"PreprocessorEvaluationTime" -> 6.1328125`*^-6,"PreprocessorMemory" -> 174968,"InputDimension" -> 18,
"OutputDimension" -> 1,"BaselineLogProbability" -> -1.6088861227806173`,"VariableBudget" -> True,
"CheckpointingInfo" -> Association["Checkpointing" -> False],"UserStop" -> False,
"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[{Association[
"TrainingSizes" -> 8,"TimeBudgets" -> 0.13719999999999996`,"ElapsedTimes" -> 0.21484499999999998`,
"ExperimentCounts" -> 6],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.1960000000000001`,
"ElapsedTimes" -> 0.209029`,"ExperimentCounts" -> 6],Association["TrainingSizes" -> 150,
"TimeBudgets" -> 0.2800000000000001`,"ElapsedTimes" -> 0.26501600000000003`,"ExperimentCounts" -> 7],Association[
"TrainingSizes" -> 644,"TimeBudgets" -> 0.4`,"ElapsedTimes" -> 0.38647200000000004`,
"ExperimentCounts" -> 8]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 3608489990807338407],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 8671681518699774353],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 2056596508203573126],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 1939271173859781736],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 1472075894963135518],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 1961206680642115524],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 6533212798570484172],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 7413442416815054776],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 5652205817899745213],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 616513469994011474],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 1897834415516430916],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3238766399573986623],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 2962023910223630262]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 1.604419`,"MaxTrainingMemory" -> 858472,"DataMemory" -> 1657112,
"FunctionMemory" -> 365400,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,11,46.727947`8.422151677257627},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]],"TestSet" -> Association["Input" -> {{0.002709161`,0.002113375`,0.015436242`,0.475101423`,0.282956427`,0.246095854`,0.003082657`,0.366594646`,4.68462`*^-4,0.089901478`,0.110947109`,133,"FR"},{3.04903`*^-4,2.19252`*^-4,0.025065655`,0.479613839`,0.302375759`,0.252759401`,6.39`*^-5,0.385118044`,5.4641`*^-4,0.12179803`,0.040836408`,109,"GB"},{0.001545037`,0.001227515`,0.042121389`,0.474357546`,0.303056653`,0.250281674`,1.61869`*^-4,0.379057757`,4.81968`*^-4,0.354310345`,0,151,"DE"},{1.44508`*^-4,1.15315`*^-4,0.031237234`,0.468619535`,0.299360241`,0.246671194`,2.04`*^-5,0.391942454`,4.79331`*^-4,0,0.034440344`,58,"GB"},{0.002760171`,0.002575379`,0.032200175`,0.477208528`,0.306046516`,0.247035776`,5.01981`*^-4,0.380322513`,5.78335`*^-4,0.488669951`,0.029274293`,225,"FR"},{8.79`*^-5,7.22`*^-5,0.023198132`,0.472669896`,0.290073505`,0.246523118`,6.41`*^-5,0.371917159`,4.96703`*^-4,0.595689655`,0.080688807`,47,"FR"},{0.001937047`,0.002067221`,0.093726291`,0.481852024`,0.327839951`,0.247981052`,8.56`*^-5,0.40113828`,4.71782`*^-4,0.084359606`,0,132,"SE"},{0.021590726`,0.017599137`,0.033338197`,0.478112978`,0.305487356`,0.246462953`,0.003648553`,0.380902192`,4.64096`*^-4,0.423275862`,0.05904059`,250,"SE"},{0.001608259`,0.001976305`,0.025722206`,0.47540946`,0.285690041`,0.250402958`,6.01357`*^-4,0.403351602`,5.2067`*^-4,0.320197044`,0.084870849`,160,"GB"},{3.37658`*^-4,3.61878`*^-4,0.028071199`,0.475107977`,0.299398186`,0.24665156`,7.17`*^-5,0.383010118`,4.96021`*^-4,0.217610837`,0.0799508`,98,"GB"},{6.6054`*^-4,3.5954`*^-4,0.027502189`,0.472037436`,0.285347151`,0.245982265`,1.10289`*^-4,0.366726391`,4.34581`*^-4,0.246428571`,0,259,"GB"},{8.6`*^-5,7.77`*^-5,0.022249781`,0.474868757`,0.298363072`,0.246641026`,1.91`*^-5,0.381350126`,4.86698`*^-4,0.001970443`,0.055842558`,216,"GB"},{0.002218197`,0.001884534`,0.031018383`,0.489192484`,0.296509991`,0.249314006`,6.84858`*^-4,0.380296164`,4.6023`*^-4,0.719458128`,0.089790898`,144,"GB"},{4.37229`*^-4,4.62656`*^-4,0.024394514`,0.461105395`,0.281378328`,0.245899736`,1.1508`*^-4,0.394155776`,4.96612`*^-4,0.407635468`,0,234,"DE"},{0.006883209`,0.006455758`,0.059104173`,0.482173169`,0.324575952`,0.247672546`,4.37592`*^-4,0.39518339`,4.70917`*^-4,0.445935961`,0.080688807`,250,"CH"},{0.001069572`,9.4828`*^-4,0.028056609`,0.473495697`,0.284414354`,0.250525138`,2.75525`*^-4,0.38949199`,4.6596`*^-4,0.321305419`,0.033702337`,161,"GB"},{0.017996808`,0.012039106`,0.029223811`,0.472476553`,0.295252641`,0.248605955`,0.003790484`,0.38295742`,6.13216`*^-4,0.356157635`,0.009840098`,95,"GB"},{0.042648352`,0.032731676`,0.025532536`,0.477084002`,0.297107741`,0.247025227`,0.009969802`,0.37839903`,4.62732`*^-4,0.301724138`,0.07503075`,101,"DE"},{0.002341653`,0.002520937`,0.024992705`,0.47772957`,0.281273205`,0.245891329`,0.001207669`,0.36477656`,6.3168`*^-4,0.099137931`,0.019188192`,74,"ES"},{2.50687`*^-4,3.44664`*^-4,0.02147651`,0.464893596`,0.300397416`,0.246300083`,9.93`*^-5,0.35568613`,4.76875`*^-4,0.323399015`,0.112915129`,30,"GB"},{0.001233547`,0.001208675`,0.029282171`,0.470585729`,0.298644158`,0.247190897`,2.28126`*^-4,0.375026349`,5.06481`*^-4,0.400615764`,0.077244772`,64,"GB"},{0.001498662`,0.001424505`,0.021053399`,0.474426363`,0.304327446`,0.246825078`,4.72694`*^-4,0.377107926`,4.33672`*^-4,0.25862069`,0,30,"NL"},{0.004466054`,0.006611457`,0.048278378`,0.478447231`,0.324173504`,0.247618948`,4.21603`*^-4,0.397212268`,4.82878`*^-4,0.159975369`,0.039114391`,30,"CH"},{5.65175`*^-4,0.00121917`,0.02859644`,0.47304675`,0.332147162`,0.248326032`,9.42`*^-5,0.406961425`,5.62099`*^-4,0,0,130,"DE"},{6.56764`*^-4,0.0011716`,0.02869857`,0.476959477`,0.298408813`,0.247222997`,3.38861`*^-4,0.377687605`,4.79103`*^-4,0.626847291`,0.071586716`,249,"DE"},{0.089174476`,0.07027445`,0.017420484`,0.47460332`,0.283664516`,0.249991257`,0.194032547`,0.366858137`,4.55774`*^-4,0.356773399`,0.133579336`,102,"SE"},{0.004538299`,0.00378328`,0.042427779`,0.478090039`,0.314525753`,0.248244444`,4.33942`*^-4,0.392522133`,4.67734`*^-4,0.230788177`,0.046494465`,132,"GB"},{0.001634449`,0.001375623`,0.02866939`,0.477477241`,0.299796097`,0.246664682`,3.3441`*^-4,0.37953204`,5.23216`*^-4,0.356896552`,0.080688807`,70,"GB"},{0.002371988`,0.002038065`,0.033411147`,0.47729373`,0.311966672`,0.247958569`,3.70118`*^-4,0.400347808`,4.94293`*^-4,0.436945813`,0.073062731`,101,"GB"},{0.002181534`,0.00224224`,0.026743507`,0.478381691`,0.306075213`,0.247044771`,6.67308`*^-4,0.380612352`,4.65733`*^-4,0.46773399`,0.07896679`,70,"IE"},{0.005894749`,0.004685638`,0.030711993`,0.476477759`,0.297948691`,0.252386207`,0.00165372`,0.377951096`,4.49088`*^-4,0.712315271`,0.127921279`,52,"IT"},{0.016099855`,0.011529756`,0.013816749`,0.473934814`,0.282272624`,0.246814768`,0.096310711`,0.365040051`,4.37401`*^-4,0.142487685`,0.104797048`,102,"FR"},{0.001678213`,0.001521259`,0.027370878`,0.479397558`,0.312422955`,0.248119026`,2.93661`*^-4,0.413548693`,5.27628`*^-4,0.099630542`,0.148831488`,33,"TR"},{0.007185599`,0.004900395`,0.029734462`,0.477827879`,0.302017348`,0.246556995`,0.001113244`,0.378741568`,4.53454`*^-4,0.297413793`,0.053628536`,72,"FR"},{0.001805801`,0.001479669`,0.023577473`,0.473800457`,0.303808013`,0.257328615`,4.31685`*^-4,0.387331366`,7.88213`*^-4,1.23153`*^-4,0.035424354`,104,"BE"},{2.38929`*^-4,2.59835`*^-4,0.05681354`,0.484571927`,0.33509554`,0.246617028`,1.86`*^-5,0.410676644`,5.51594`*^-4,0,0.014268143`,150,"GB"},{0.001154149`,0.001161085`,0.031777064`,0.475976379`,0.313699191`,0.249049304`,1.4328`*^-4,0.383985034`,4.46996`*^-4,0.199753695`,0.039114391`,58,"DE"},{0.001076303`,9.9646`*^-4,0.02154946`,0.47457055`,0.288414391`,0.246027984`,3.56016`*^-4,0.366594646`,4.73146`*^-4,0.148399015`,0.067650677`,57,"DK"},{0.005024488`,0.004026413`,0.024321564`,0.474842541`,0.295873402`,0.247126544`,0.001544472`,0.379110455`,4.81559`*^-4,0.387684729`,0.052398524`,92,"BE"},{2.11`*^-5,4.72`*^-5,0.023183542`,0.475406183`,0.295262036`,0.246985683`,3.01`*^-5,0.37813554`,4.24622`*^-4,0.655665025`,0,30,"PT"},{7.48884`*^-4,7.5206`*^-4,0.02133061`,0.476038642`,0.251012838`,0.244565394`,4.19228`*^-4,0.373340008`,4.75738`*^-4,0.336206897`,0.106273063`,88,"PT"},{5.05222`*^-4,4.14067`*^-4,0.039597315`,0.457730094`,0.278588465`,0.245625309`,6.73`*^-5,0.354632167`,5.69239`*^-4,0.384852217`,0.017712177`,58,"GB"},{9.44564`*^-4,0.001055324`,0.023373213`,0.476739918`,0.301194443`,0.246755437`,2.79399`*^-4,0.37697618`,4.5591`*^-4,0.224507389`,0.038130381`,150,"FR"},{0.001163168`,9.92456`*^-4,0.037540123`,0.472450337`,0.310564722`,0.247444146`,1.35353`*^-4,0.400110666`,5.04025`*^-4,0.129802956`,0.053382534`,258,"GB"},{0.001328334`,0.001119893`,0.023606653`,0.476395834`,0.286499227`,0.24617936`,5.65978`*^-4,0.370230818`,5.5123`*^-4,0.338423645`,0.060270603`,216,"FR"},{0.001299231`,0.001386659`,0.066559673`,0.479731811`,0.321421682`,0.248509396`,1.08947`*^-4,0.40169161`,5.88158`*^-4,0.449507389`,0.041574416`,43,"GB"},{5.6708`*^-4,3.36188`*^-4,0.027969069`,0.473833227`,0.295356311`,0.247076689`,1.31236`*^-4,0.369071459`,4.45859`*^-4,0.356527094`,0.027060271`,45,"GB"},{2.48012`*^-4,2.03765`*^-4,0.032754596`,0.468413084`,0.309451531`,0.247225988`,2.75`*^-5,0.379848229`,4.54909`*^-4,0,0.071340713`,126,"GB"},{6.93788`*^-4,5.74528`*^-4,0.023081412`,0.477637814`,0.289543687`,0.246169665`,1.82865`*^-4,0.390677698`,4.96658`*^-4,0.19729064`,0,66,"GB"},{0.006674407`,0.005042011`,0.028990371`,0.481186795`,0.298731648`,0.246532833`,0.001788524`,0.386119309`,4.47315`*^-4,0.537192118`,0.142435424`,169,"GB"},{8.40053`*^-4,8.53881`*^-4,0.033411147`,0.478866685`,0.31141546`,0.246706355`,1.07613`*^-4,0.383668845`,5.32084`*^-4,0.390147783`,0.034194342`,72,"GB"},{2.77855`*^-4,2.8563`*^-4,0.022818792`,0.473967584`,0.275719815`,0.244534259`,1.30289`*^-4,0.376818086`,4.9211`*^-4,0.351847291`,0.04698647`,112,"GB"},{0.002265465`,0.00217814`,0.013889699`,0.475550371`,0.282300672`,0.246350397`,0.006803329`,0.364697513`,3.52267`*^-4,0.003817734`,0.071832718`,106,"GB"},{0.001285463`,0.001825115`,0.030814123`,0.47503916`,0.310994726`,0.247736712`,2.40625`*^-4,0.373629848`,4.80422`*^-4,0.510221675`,0.035178352`,95,"DE"},{0.00925791`,0.00865288`,0.015231981`,0.471981727`,0.282359186`,0.247377856`,0.037157569`,0.365092749`,4.97931`*^-4,0.27635468`,0,102,"GB"},{0.003121221`,0.004373769`,0.012941348`,0.474911357`,0.282408917`,0.246486971`,0.014649632`,0.365303541`,3.9306`*^-4,0.017857143`,0.134563346`,104,"GB"},{1.61211`*^-4,1.41927`*^-4,0.034957689`,0.483932913`,0.32569148`,0.246376738`,2.02`*^-5,0.393786889`,5.16531`*^-4,0.071921182`,0.110947109`,134,"GB"},{0.004176875`,0.005489146`,0.029530201`,0.472863238`,0.31051106`,0.247420769`,6.4236`*^-4,0.371258432`,5.1594`*^-4,0.205418719`,0.058056581`,130,"FR"},{2.59702`*^-4,2.20365`*^-4,0.02874234`,0.473479312`,0.276970667`,0.244889992`,5.03`*^-5,0.361193086`,4.52863`*^-4,0.279926108`,0.13800738`,64,"GB"},{0.00266166`,0.003504725`,0.025897286`,0.474747508`,0.299591833`,0.246849305`,8.8042`*^-4,0.3806914`,4.54546`*^-4,0.312192118`,0.079212792`,82,"FI"},{0.009028748`,0.010511727`,0.01412314`,0.474672137`,0.281471529`,0.2459809`,0.043078336`,0.365830523`,5.10665`*^-4,0.05591133`,0,106,"NO"},{0.001626846`,0.001169488`,0.016895244`,0.474990005`,0.282660289`,0.245941784`,8.23496`*^-4,0.372628583`,4.83924`*^-4,0.146674877`,0.045756458`,39,"AT"},{0.002675105`,0.003660214`,0.101736212`,0.484008284`,0.328624443`,0.24894829`,1.20132`*^-4,0.420715641`,5.39725`*^-4,0.156527094`,0.024846248`,103,"CH"},{9.85641`*^-4,0.001146214`,0.036256201`,0.475743713`,0.292220076`,0.246583836`,1.40929`*^-4,0.379163153`,5.274`*^-4,0.39729064`,0.040590406`,41,"DE"},{5.99`*^-5,5.22`*^-5,0.026889408`,0.469045544`,0.303581834`,0.246712193`,2.8`*^-5,0.331313238`,4.94702`*^-4,0.841625616`,0,90,"GB"},{0.015345392`,0.001366736`,0.018062445`,0.474580381`,0.304932575`,0.247862132`,4.88367`*^-4,0.380006324`,4.80877`*^-4,0.045073892`,0,51,"NO"},{0.001957169`,0.001650856`,0.022775022`,0.474151095`,0.292481693`,0.24656474`,6.52046`*^-4,0.371732715`,4.49589`*^-4,0.256650246`,0.032472325`,253,"DE"},{0.003406296`,0.003047293`,0.022454041`,0.474986728`,0.287856166`,0.24648542`,0.002401023`,0.369018761`,4.59594`*^-4,0.516009852`,0.112423124`,144,"FR"},{0.001520901`,0.001348793`,0.027604319`,0.473358064`,0.293572822`,0.24661695`,3.01324`*^-4,0.370415261`,4.70508`*^-4,0.221059113`,0.069372694`,43,"CH"},{0.001273186`,0.00134243`,0.030084622`,0.474645921`,0.292064936`,0.246900995`,2.90593`*^-4,0.401823356`,4.3308`*^-4,0.449261084`,0.110209102`,142,"CH"},{5.61148`*^-4,4.31486`*^-4,0.039626495`,0.476369618`,0.32143564`,0.247150143`,3.93`*^-5,0.400216062`,5.60872`*^-4,0,0.034686347`,66,"GB"},{3.78769`*^-4,2.47811`*^-4,0.045185293`,0.480675584`,0.31548641`,0.247113349`,3.8`*^-5,0.391283727`,6.36318`*^-4,0.456157635`,0.128659287`,30,"SE"},{0.069879483`,0.019992484`,0.032258535`,0.474632813`,0.283199405`,0.246187654`,0.004297572`,0.702598019`,4.81468`*^-4,0.155665025`,0.055104551`,38,"SE"},{0.103403173`,0.073456909`,0.02130143`,0.476038642`,0.283295367`,0.250422232`,0.209744333`,0.367068929`,4.55501`*^-4,0.660714286`,0.086838868`,102,"SE"},{0.012558053`,0.010176984`,0.054960607`,0.477087279`,0.322128747`,0.248947966`,8.16394`*^-4,0.393865936`,6.47006`*^-4,6.15764`*^-4,0,157,"SE"},{0.003922672`,0.00395471`,0.013729209`,0.475166963`,0.282432755`,0.246507142`,0.016089789`,0.365804174`,4.19346`*^-4,0.041995074`,0.072570726`,106,"CH"},{0.01476641`,0.009661141`,0.015246571`,0.475743713`,0.282443943`,0.246152062`,0.0154895`,0.365198145`,4.25622`*^-4,0.062068966`,0.117343173`,133,"CH"},{0.00686282`,0.005624039`,0.016588853`,0.476238539`,0.285049296`,0.251337435`,0.010496025`,0.367121627`,4.12661`*^-4,0.131157635`,0.122263223`,102,"DK"},{0.003237473`,0.003124713`,0.041041727`,0.477087279`,0.304584208`,0.247498639`,3.46119`*^-4,0.381429174`,4.57865`*^-4,0.438423645`,0.033456335`,92,"DE"},{3.68385`*^-4,3.15146`*^-4,0.027954479`,0.474524672`,0.304110246`,0.256723342`,6.81`*^-5,0.39376054`,0.007768979`,0,0.040098401`,109,"GB"},{5.44088`*^-4,5.56114`*^-4,0.032769186`,0.483225083`,0.30547581`,0.246761934`,8.9`*^-5,0.382693929`,6.32225`*^-4,0.282512315`,0.057318573`,92,"GB"},{7.75053`*^-4,7.74823`*^-4,0.027516779`,0.47702174`,0.287088036`,0.250009048`,3.47685`*^-4,0.387647555`,4.69644`*^-4,0.674630542`,0.034686347`,112,"DE"},{6.78238`*^-4,6.03112`*^-4,0.041581558`,0.478398076`,0.311657364`,0.247012609`,1.10077`*^-4,0.379084106`,4.2967`*^-4,0.737192118`,0.230750308`,142,"GB"},{0.00139512`,0.001190041`,0.034374088`,0.479282863`,0.306170991`,0.247015634`,2.0818`*^-4,0.392258642`,5.20124`*^-4,0.309975369`,0.097416974`,71,"GB"},{0.002129933`,0.001793804`,0.018762766`,0.472859961`,0.294431124`,0.247112588`,0.002709733`,0.376001265`,4.3731`*^-4,0.339408867`,0.085608856`,169,"PL"},{0.002138353`,0.002741502`,0.023008462`,0.47675958`,0.311095174`,0.24974849`,0.001022226`,0.383484401`,5.66101`*^-4,0.464285714`,0.169249692`,64,"TR"},{0.002122241`,0.002270406`,0.027341698`,0.478794592`,0.325643489`,0.248389527`,3.74045`*^-4,0.39489355`,4.79012`*^-4,0.022167488`,0.027306273`,36,"GB"},{9.36868`*^-4,5.55202`*^-4,0.018952437`,0.47127062`,0.270871331`,0.244865617`,3.33534`*^-4,0.33921796`,3.997`*^-4,0.19679803`,0,99,"NO"},{7.70826`*^-4,7.89937`*^-4,0.044995623`,0.475805976`,0.307750363`,0.247610774`,5.95`*^-5,0.387621206`,4.8115`*^-4,0.008743842`,0.027060271`,132,"CH"},{7.54`*^-6,1.56`*^-5,0.015407062`,0.471283728`,0.272413102`,0.235418524`,4.34`*^-5,0.357978499`,3.34667`*^-4,0.070566502`,0,36,"GR"},{9.08093`*^-4,3.9329`*^-4,0.024948935`,0.46789532`,0.284527672`,0.246010888`,2.6034`*^-4,0.355238196`,4.04248`*^-4,0.570812808`,0.028290283`,115,"FR"},{9.15487`*^-4,4.7242`*^-4,0.019652758`,0.481783207`,0.288500934`,0.246125526`,2.75063`*^-4,0.367674958`,4.69371`*^-4,0.130418719`,0.088314883`,51,"ES"},{5.184`*^-4,4.16385`*^-4,0.057659761`,0.480501904`,0.323776287`,0.247411223`,3.16`*^-5,0.398318929`,5.1785`*^-4,0.341871921`,0.043296433`,69,"GB"},{0.001021666`,0.002111965`,0.017449664`,0.476661271`,0.2982627`,0.246844598`,7.04045`*^-4,0.391520868`,7.07218`*^-4,0.156403941`,0.06100861`,216,"TR"},{0.015021039`,0.01706074`,0.030420193`,0.468655582`,0.307935005`,0.247694212`,0.002836566`,0.369150506`,5.25536`*^-4,0.349384236`,0.179581796`,142,"SE"},{0.005537879`,0.005105538`,0.022643712`,0.474931019`,0.295117586`,0.248031819`,0.00513918`,0.372602234`,4.62459`*^-4,0.560837438`,0,142,"IT"},{3.93124`*^-4,3.17861`*^-4,0.04966443`,0.477962236`,0.309065527`,0.246569854`,3.01`*^-5,0.424984191`,4.40539`*^-4,0,0.098400984`,142,"GB"},{0.018949583`,0.014021192`,0.026334987`,0.475950164`,0.296691758`,0.247329161`,0.008130486`,0.37442032`,4.4304`*^-4,0.634729064`,0.2`,142,"ES"},{0.005240273`,0.004187012`,0.025838926`,0.471522949`,0.280623622`,0.24583521`,0.001056459`,0.357925801`,4.30716`*^-4,0.168349754`,0.148093481`,142,"DE"},{0.001592411`,0.001722217`,0.025342865`,0.47796879`,0.29370025`,0.24685138`,5.54057`*^-4,0.378346332`,4.60367`*^-4,0.526477833`,0.021648216`,142,"AT"},{0.084586727`,0.088938612`,0.031368544`,0.47396103`,0.318233066`,0.248568788`,0.015150988`,0.382193297`,4.20165`*^-4,0.457881773`,0.139237392`,142,"NO"},{0.002379778`,0.002316991`,0.033805077`,0.475802699`,0.305983227`,0.247084166`,3.38049`*^-4,0.384406619`,5.09437`*^-4,0.415394089`,0.030258303`,151,"FR"},{0.034288533`,0.028071268`,0.049110009`,0.481979827`,0.336588987`,0.248158745`,0.002624894`,0.408489671`,4.45177`*^-4,0.371551724`,0.151291513`,142,"CZ"},{0.068301814`,0.053293509`,0.024029764`,0.473495697`,0.295820921`,0.247875197`,0.018258895`,0.377793002`,4.19983`*^-4,0.455172414`,0.19901599`,142,"SE"},{0.002089048`,0.002901472`,0.075021885`,0.481308044`,0.319412504`,0.24881157`,9.23`*^-5,0.396369098`,5.11574`*^-4,0.432512315`,0.015498155`,58,"CH"},{3.38904`*^-4,2.89567`*^-4,0.026262037`,0.477759063`,0.302588491`,0.257491856`,7.95`*^-5,0.387594857`,6.07213`*^-4,0.133374384`,0.084378844`,109,"GB"},{7.11222`*^-4,6.21035`*^-4,0.022424861`,0.48302191`,0.365047813`,0.285163362`,1.69409`*^-4,0.461161467`,2.73455`*^-4,0.046059113`,0.034194342`,109,"GB"},{0.003779158`,0.003272634`,0.02826087`,0.478004837`,0.297693049`,0.25164291`,0.001282293`,0.37613301`,4.77148`*^-4,0.704310345`,0.112177122`,169,"IT"},{0.007181236`,0.005180533`,0.018937847`,0.474413255`,0.289142601`,0.246178655`,0.003422454`,0.365672428`,4.60003`*^-4,0.327093596`,0,88,"GB"},{8.34848`*^-4,8.61917`*^-4,0.020965859`,0.473050027`,0.284863146`,0.246150354`,2.56799`*^-4,0.375184444`,4.57001`*^-4,0.08682266`,0.072816728`,246,"FR"},{3.79351`*^-4,3.40118`*^-4,0.02843595`,0.474803217`,0.305640784`,0.257890963`,7.44`*^-5,0.390308811`,5.67602`*^-4,0,0.140221402`,109,"GB"},{0.004144312`,0.007047563`,0.030814123`,0.473846335`,0.299303233`,0.247231862`,9.91942`*^-4,0.379242201`,4.6778`*^-4,0.003448276`,0.058302583`,227,"CH"},{5.6062`*^-4,6.15877`*^-4,0.015217391`,0.473210599`,0.295798217`,0.246357994`,4.849`*^-4,0.365751476`,5.12984`*^-4,0.278325123`,0.01402214`,94,"GB"},{0.00552249`,0.005250721`,0.020965859`,0.476025534`,0.297770519`,0.246491958`,0.00252952`,0.359822934`,4.84515`*^-4,0.267857143`,0.01599016`,101,"DE"},{8.25918`*^-4,6.38676`*^-4,0.041143858`,0.479332018`,0.315088092`,0.247003445`,8.49`*^-5,0.391125632`,4.58684`*^-4,0.260221675`,0.125461255`,150,"FI"},{7.15666`*^-4,6.14222`*^-4,0.026218267`,0.474963789`,0.298190515`,0.247208502`,1.96318`*^-4,0.372839376`,4.42267`*^-4,0.416748768`,0.034440344`,206,"GR"},{0.003303634`,0.003555055`,0.023037642`,0.474986728`,0.298418893`,0.247328481`,0.001590255`,0.38438027`,5.89158`*^-4,0.346182266`,0.07896679`,220,"TR"},{0.00458356`,0.005693588`,0.016297053`,0.476739918`,0.285909427`,0.248133938`,0.021158025`,0.369967327`,5.78653`*^-4,0.395566502`,0.022878229`,102,"TR"},{8.72055`*^-4,6.72378`*^-4,0.032448205`,0.474737677`,0.30110025`,0.247291028`,1.16075`*^-4,0.376554595`,4.28805`*^-4,0.17044335`,0.078474785`,153,"IT"},{0.005127848`,0.005553826`,0.032287715`,0.482887553`,0.296023739`,0.246391809`,9.9336`*^-4,0.393681492`,5.46501`*^-4,0.546059113`,0.074292743`,65,"TR"},{8.38943`*^-4,6.33189`*^-4,0.029617741`,0.472528985`,0.299114439`,0.247112153`,1.03401`*^-4,0.32841484`,4.04612`*^-4,0,0,58,"NL"},{0.005671629`,0.006528671`,0.042238109`,0.477539504`,0.311347536`,0.247383634`,6.18021`*^-4,0.389386594`,4.99841`*^-4,0.193349754`,0.047724477`,43,"NO"},{0.0072544`,0.007747374`,0.016180333`,0.482841675`,0.288666035`,0.247332119`,0.006092916`,0.370388912`,4.69962`*^-4,0.027339901`,0,107,"DK"},{6.26`*^-5,4.31`*^-5,0.050889991`,0.50114367`,0.330389898`,0.246933225`,7.3`*^-6,0.402613828`,4.36628`*^-4,0.432758621`,0.098400984`,85,"GB"},{0.00168656`,0.001116112`,0.023708783`,0.46641412`,0.288138918`,0.24663075`,7.74358`*^-4,0.368676223`,4.13889`*^-4,0.560344828`,0.102091021`,99,"GB"},{0.05037715`,0.039080518`,0.022599942`,0.474036401`,0.290239392`,0.246504745`,0.015011828`,0.374446669`,5.02069`*^-4,0.26637931`,0.12300123`,97,"FR"},{0.001012124`,9.86452`*^-4,0.013700029`,0.4728829`,0.282484749`,0.24705662`,0.002833002`,0.365145447`,8.84761`*^-4,0.019458128`,0.095694957`,111,"GB"},{3.94217`*^-4,3.29765`*^-4,0.024000584`,0.477428086`,0.300349917`,0.25397427`,9.`*^-5,0.383458052`,4.85288`*^-4,0.005172414`,0.076506765`,109,"GB"},{0.018598922`,0.017338877`,0.031689524`,0.480721462`,0.302520247`,0.247348491`,0.00363079`,0.380770447`,5.17577`*^-4,0.316502463`,0.054612546`,43,"SE"},{6.46703`*^-4,6.7743`*^-4,0.026845638`,0.47426579`,0.289028782`,0.254630006`,2.03665`*^-4,0.393892285`,6.46687`*^-4,0.324630542`,0.098646986`,109,"GB"},{0.015453595`,0.015775634`,0.024773855`,0.480714908`,0.300421182`,0.248341209`,0.00379053`,0.378240936`,4.45496`*^-4,0.1091133`,0.116605166`,141,"DK"},{0.003421702`,0.002838267`,0.022877152`,0.48497172`,0.298422257`,0.246471323`,0.001050682`,0.37726602`,4.79876`*^-4,0.17179803`,0.112669127`,94,"DE"},{0.001207098`,9.58386`*^-4,0.024788445`,0.463871175`,0.300657616`,0.250509122`,5.77844`*^-4,0.366304806`,6.39229`*^-4,0.621551724`,0,50,"GB"},{0.007487632`,0.010240392`,0.025240735`,0.479400835`,0.319031406`,0.247002132`,0.002660458`,0.401085582`,6.92392`*^-4,0.523399015`,0.227060271`,240,"TR"},{0.00290758`,0.0072856`,0.020892909`,0.471709737`,0.29215415`,0.246743111`,0.005228426`,0.369940978`,6.02074`*^-4,0.613546798`,0,129,"TR"},{0.007908813`,0.007584591`,0.029252991`,0.465126262`,0.311654039`,0.248049007`,0.002159536`,0.379242201`,5.00614`*^-4,0.709482759`,0.111193112`,142,"TR"},{0.008943818`,0.011427383`,0.024306974`,0.475229226`,0.308252267`,0.248236115`,0.002568822`,0.382404089`,5.49821`*^-4,0.455541872`,0,142,"TR"},{0.004960951`,0.004531708`,0.015582142`,0.476664548`,0.285659533`,0.248093444`,0.023569391`,0.368649874`,5.97526`*^-4,0.331157635`,0.048708487`,102,"TR"},{0.009826516`,0.010556648`,0.018033265`,0.476602285`,0.286049406`,0.248171798`,0.033193851`,0.369967327`,5.25172`*^-4,0.321059113`,0.081918819`,102,"TR"},{0.001631481`,0.001461955`,0.038065363`,0.475304596`,0.302734154`,0.247548771`,1.88784`*^-4,0.37813554`,4.64778`*^-4,0.460714286`,0,212,"FR"},{6.94655`*^-4,8.00187`*^-4,0.032798366`,0.480895143`,0.301172462`,0.246943352`,9.71`*^-5,0.379294899`,5.18123`*^-4,0.198275862`,0.035916359`,224,"IE"},{4.58031`*^-4,3.81363`*^-4,0.025868106`,0.473456373`,0.305972499`,0.256163593`,1.11699`*^-4,0.389544688`,0.001145801`,0.207758621`,0.107257073`,163,"GB"},{0.002341232`,0.002259184`,0.029603151`,0.476713702`,0.299303643`,0.247294654`,6.27514`*^-4,0.385302487`,5.1021`*^-4,0.638300493`,0.041820418`,71,"TR"},{0.002540985`,0.002910178`,0.03574555`,0.474527949`,0.298058018`,0.246209062`,3.7891`*^-4,0.377634907`,5.08755`*^-4,0.248275862`,0.043542435`,122,"BE"},{0.00735713`,0.01167314`,0.017493434`,0.46156745`,0.282345838`,0.247455186`,0.062634874`,0.366673693`,4.2353`*^-4,0.415270936`,0.100861009`,102,"IT"},{0.001128635`,0.001395028`,0.018879486`,0.469111083`,0.281584123`,0.246286123`,0.009453989`,0.36675274`,4.94611`*^-4,0.423768473`,0.098646986`,102,"IT"},{0.002045564`,0.003198058`,0.014925591`,0.463510706`,0.279439895`,0.245842819`,0.003204489`,0.361430228`,4.76739`*^-4,0.056034483`,0,91,"DE"},{0.001059549`,9.28473`*^-4,0.014721331`,0.474249405`,0.285221516`,0.246987862`,0.006670738`,0.363801644`,3.78007`*^-4,0.096674877`,0.126445264`,141,"IT"},{0.002481892`,0.001812804`,0.01450248`,0.475150578`,0.284882887`,0.246727706`,0.005047953`,0.366436551`,4.14389`*^-4,0.043103448`,0.178351784`,107,"IT"},{5.63231`*^-4,6.46542`*^-4,0.025415816`,0.477192143`,0.2850628`,0.249366793`,1.84116`*^-4,0.391995152`,4.38765`*^-4,0.259729064`,0.06297663`,162,"GB"},{0.003265104`,0.003853995`,0.046790196`,0.477034848`,0.303688822`,0.247686885`,5.6463`*^-4,0.395473229`,4.90837`*^-4,0.338916256`,0.045756458`,151,"DE"},{0.005320096`,0.004647366`,0.027662679`,0.475635572`,0.30374731`,0.247175099`,9.58356`*^-4,0.385118044`,4.52454`*^-4,0.107142857`,0.078474785`,82,"FI"},{0.001243684`,6.35732`*^-4,0.018587686`,0.475317704`,0.282237791`,0.246223956`,8.18135`*^-4,0.36277403`,3.00241`*^-4,0.401108374`,0.010086101`,51,"GB"},{6.72068`*^-4,5.54212`*^-4,0.015815582`,0.473944645`,0.282444978`,0.248990378`,0.002089466`,0.365382589`,4.35991`*^-4,0.296674877`,0.087330873`,102,"CH"},{0.001293406`,7.69943`*^-4,0.02135979`,0.464569174`,0.268413959`,0.244860929`,5.0347`*^-4,0.350442664`,5.636`*^-4,0.471674877`,0,234,"FR"},{4.13701`*^-4,4.23623`*^-4,0.029573971`,0.476798904`,0.295553851`,0.246324961`,1.05409`*^-4,0.378161889`,4.38992`*^-4,0.457512315`,0.106273063`,88,"CH"},{0.001073543`,0.001451703`,0.05719288`,0.476451543`,0.328842847`,0.24894448`,7.43`*^-5,0.398239882`,6.08486`*^-4,0.27044335`,0,213,"CH"},{8.37161`*^-4,0.001105182`,0.027473008`,0.475996041`,0.307414956`,0.247315082`,2.73869`*^-4,0.382193297`,8.728`*^-4,0.299137931`,0.050184502`,63,"SE"},{3.86172`*^-4,2.62589`*^-4,0.030347242`,0.470071242`,0.249817173`,0.238998833`,5.41`*^-5,0.335397344`,3.88558`*^-4,0.007019704`,0,95,"GB"},{0.003907887`,0.003931913`,0.020236358`,0.473725087`,0.29314745`,0.24668965`,0.002831577`,0.368570826`,4.60912`*^-4,0.510221675`,0.109717097`,144,"FR"},{0.00108889`,0.002350636`,0.023635833`,0.474937573`,0.293838402`,0.248092189`,8.5522`*^-4,0.372813027`,4.62368`*^-4,0.257142857`,0.056826568`,96,"AT"},{0.045219558`,0.029403163`,0.028056609`,0.482058475`,0.312591138`,0.247407519`,0.006008684`,0.387647555`,4.30397`*^-4,0.057512315`,0.034932349`,74,"DK"},{4.47022`*^-4,5.27056`*^-4,0.023431573`,0.473902044`,0.300624532`,0.246935554`,1.521`*^-4,0.370757799`,5.3495`*^-4,0.267364532`,0.101353014`,32,"GB"},{6.94392`*^-4,6.79265`*^-4,0.052961774`,0.479082967`,0.3378378`,0.250585089`,4.01`*^-5,0.41705312`,5.11574`*^-4,0,0.059532595`,33,"GB"},{0.001166251`,0.001104302`,0.01422527`,0.474491903`,0.285147692`,0.246779925`,0.003833427`,0.366304806`,4.6596`*^-4,0.069458128`,0.068388684`,141,"AT"},{0.003166924`,0.002718102`,0.038298804`,0.475894455`,0.289635629`,0.247048938`,3.11233`*^-4,0.429147344`,5.11483`*^-4,0.03226601`,0.038622386`,95,"CH"},{0.016410146`,0.015906248`,0.023737963`,0.477120049`,0.29717625`,0.24711496`,0.00527246`,0.376264755`,4.70736`*^-4,0.378694581`,0.072324723`,39,"FR"},{0.001043663`,8.97681`*^-4,0.013656259`,0.470113843`,0.283226904`,0.248857638`,0.003265595`,0.365646079`,4.45041`*^-4,0.245935961`,0,102,"GB"},{9.33138`*^-4,8.57023`*^-4,0.047796907`,0.477926189`,0.319980871`,0.248013402`,7.13`*^-5,0.399188449`,4.72691`*^-4,0.090147783`,0.071832718`,71,"ES"},{0.009890912`,0.009482031`,0.022818792`,0.474259236`,0.288801344`,0.246813668`,0.002555751`,0.374683811`,5.11574`*^-4,0.158990148`,0.407872079`,246,"FR"},{0.022610699`,0.018651266`,0.025065655`,0.468780107`,0.286761293`,0.246577321`,0.008389771`,0.354421374`,4.56183`*^-4,0.439901478`,0.145387454`,142,"GB"},{0.002812848`,0.002184786`,0.024029764`,0.474888418`,0.292467104`,0.246540937`,0.001098597`,0.376159359`,4.52545`*^-4,0.428817734`,0.068142681`,56,"AT"},{0.017687372`,0.028094509`,0.019448497`,0.474115049`,0.291301309`,0.246702028`,0.031264056`,0.37299747`,4.71327`*^-4,0.521305419`,0.00196802`,65,"DE"},{0.07405234`,0.104483456`,0.025503356`,0.476621947`,0.300498532`,0.24693207`,0.030379235`,0.37926855`,4.92747`*^-4,0.391995074`,0.069126691`,117,"SE"},{0.006215572`,0.006755555`,0.025211555`,0.478181794`,0.287002107`,0.249838024`,0.002843237`,0.384011383`,4.84015`*^-4,0.495320197`,0.073554736`,112,"DE"},{0.001283804`,0.001138724`,0.013918879`,0.477759063`,0.284290982`,0.247525674`,0.001734666`,0.366884486`,6.7129`*^-4,0.520566502`,0.085116851`,102,"CH"},{0.002213222`,0.002707309`,0.024686315`,0.47460332`,0.296013804`,0.246755433`,4.83694`*^-4,0.399451939`,4.71736`*^-4,0.127955665`,0.049200492`,92,"DE"},{0.003597617`,0.003487659`,0.036766851`,0.477179035`,0.304534854`,0.247063154`,4.1553`*^-4,0.383563449`,4.54819`*^-4,0.138793103`,0.068634686`,230,"FI"},{0.002283422`,0.002210406`,0.023898453`,0.466810636`,0.294554875`,0.246918257`,0.001079408`,0.370573356`,4.81514`*^-4,0.616502463`,0.046248462`,101,"FR"},{7.32866`*^-4,5.36131`*^-4,0.025532536`,0.473800457`,0.291312345`,0.2526213`,2.97096`*^-4,0.370705101`,4.38856`*^-4,0.489162562`,0.174907749`,161,"NL"},{4.10482`*^-4,3.69532`*^-4,0.030303472`,0.48022336`,0.305134454`,0.24682326`,1.08507`*^-4,0.378926012`,4.61958`*^-4,0.64137931`,0.033210332`,72,"GB"},{0.009559501`,0.007055818`,0.027677269`,0.476654717`,0.289554455`,0.253411709`,0.003276368`,0.381508221`,5.14303`*^-4,0.472044335`,0.10799508`,161,"FR"},{7.33691`*^-4,6.81961`*^-4,0.067070324`,0.493203521`,0.360613963`,0.247286983`,3.62`*^-5,0.43012226`,4.51544`*^-4,0.087192118`,0.069372694`,90,"GB"},{0.002932847`,0.002354857`,0.040239276`,0.477568997`,0.314744828`,0.248176355`,3.55243`*^-4,0.389939924`,4.71918`*^-4,0.250369458`,0.059778598`,72,"GB"},{8.32968`*^-4,7.88099`*^-4,0.024321564`,0.473852889`,0.291201211`,0.246411696`,2.73896`*^-4,0.376923482`,4.65597`*^-4,0.368103448`,0.029274293`,30,"AT"},{0.005595995`,0.005074584`,0.026086957`,0.480642815`,0.289191452`,0.252007536`,0.002972954`,0.385697723`,5.02843`*^-4,0.648522167`,0.075276753`,112,"SE"},{0.00104951`,9.02127`*^-4,0.031601984`,0.476533468`,0.312130067`,0.247807213`,1.77877`*^-4,0.359216906`,4.73692`*^-4,0.37770936`,0.10602706`,100,"GB"},{0.002192952`,0.003866657`,0.030376423`,0.478063823`,0.299282995`,0.248361199`,3.42325`*^-4,0.381613617`,6.47415`*^-4,0.297783251`,0.008118081`,261,"DE"},{6.86172`*^-4,6.42093`*^-4,0.026320397`,0.478345644`,0.319448284`,0.25710961`,1.68854`*^-4,0.405196037`,4.32717`*^-4,0.134359606`,0.049692497`,109,"GB"},{4.27763`*^-4,3.10888`*^-4,0.015800992`,0.480908251`,0.319615772`,0.247781574`,1.08922`*^-4,0.408199831`,5.61326`*^-4,0.029926108`,0,129,"GB"},{0.004456618`,0.004113625`,0.032637876`,0.478250611`,0.307356165`,0.248130098`,6.36072`*^-4,0.387594857`,4.57684`*^-4,0.451600985`,0.053628536`,84,"NL"},{0.00141044`,0.001477141`,0.029340531`,0.472515877`,0.285431044`,0.246293203`,6.7112`*^-4,0.364302277`,6.03256`*^-4,0.298275862`,0.067896679`,51,"GB"},{5.40745`*^-4,4.25088`*^-4,0.023985994`,0.477172481`,0.28809583`,0.251300922`,1.43594`*^-4,0.378530776`,4.38674`*^-4,0.172413793`,0.052890529`,239,"GB"},{0.001496004`,0.001813918`,0.036197841`,0.47631391`,0.30402006`,0.24756273`,1.9611`*^-4,0.376317454`,5.4218`*^-4,0.022167488`,0,261,"FR"},{4.09785`*^-4,3.54496`*^-4,0.023898453`,0.478860131`,0.336201024`,1,9.15`*^-5,0.424852445`,2.47669`*^-4,0.100123153`,0.019188192`,109,"GB"},{0.009881795`,0.005728881`,0.024642544`,0.477057786`,0.296854159`,0.247437983`,0.002540164`,0.379927277`,4.70963`*^-4,0.25270936`,0.065436654`,41,"GB"},{0.039933441`,0.034655113`,0.026218267`,0.474934296`,0.289600074`,0.246399726`,0.009567914`,0.37357715`,4.34854`*^-4,0.232635468`,0.107257073`,217,"NO"},{4.18782`*^-4,2.63546`*^-4,0.023227313`,0.471722845`,0.287420709`,0.246189736`,1.62017`*^-4,0.3721543`,5.28765`*^-4,0.340024631`,0.068388684`,39,"FI"},{0.003870769`,0.003666356`,0.057528451`,0.47494085`,0.296990072`,0.246362989`,2.25609`*^-4,0.374657462`,5.49502`*^-4,0.004679803`,0,66,"DE"},{0.001619566`,0.001481404`,0.08551211`,0.483942744`,0.358314254`,0.248977332`,5.2`*^-5,0.422849916`,4.62913`*^-4,6.15764`*^-4,0.071586716`,43,"ES"},{0.001213936`,8.72089`*^-4,0.069973738`,0.454007432`,0.199331843`,0.226346332`,5.57`*^-5,0.270973862`,2.59221`*^-4,0.226724138`,0,157,"DK"},{0.017939573`,0.014995153`,0.014794281`,0.47577976`,0.285186655`,0.246989589`,0.029542035`,0.366436551`,4.17482`*^-4,0.037931034`,0.149077491`,141,"CH"}},
"Output" -> {2,2,4,4,4,3,3,3,2,5,3,3,5,4,3,2,1,1,2,2,3,2,4,3,5,1,1,5,5,5,3,1,1,4,4,4,1,3,4,2,1,4,1,2,3,3,4,4,1,1,4,2,4,2,1,1,3,3,3,2,4,1,3,5,5,3,5,3,3,5,3,4,1,1,5,2,2,4,4,2,1,2,1,5,5,3,2,5,5,3,5,3,3,3,5,1,5,1,5,5,5,3,5,1,4,2,2,5,1,5,2,3,1,1,4,5,1,4,3,5,4,3,2,3,3,1,4,2,1,2,2,1,5,5,5,5,5,4,4,4,4,2,5,3,1,4,5,2,2,2,5,2,3,4,3,3,3,5,2,1,5,2,3,4,2,2,3,4,5,1,1,1,1,3,2,4,4,5,3,2,4,2,3,4,5,2,4,1,2,5,3,1,2,4,2,1,1,1,3,3,1,2}],
"Predictions" -> {2,2,2,4,3,3,3,3,2,3,3,2,5,3,3,2,1,1,4,5,5,3,3,4,3,1,5,5,5,5,5,1,4,1,2,3,4,3,5,5,5,5,3,3,3,5,5,3,5,5,5,5,4,3,1,4,3,3,5,5,4,5,4,5,1,2,1,1,3,3,4,3,5,1,3,4,1,2,3,2,5,2,3,5,4,4,4,3,2,5,3,2,5,4,1,1,3,1,1,5,5,3,3,1,4,2,2,5,1,3,2,3,1,1,5,5,4,4,3,5,3,5,4,3,1,1,4,2,1,2,3,1,1,5,1,1,1,4,1,3,3,2,5,5,1,4,1,4,4,2,3,5,1,2,3,3,3,4,3,1,4,3,4,4,4,2,1,4,4,2,1,5,1,1,2,4,3,5,1,2,5,2,3,5,5,4,3,3,2,2,3,4,2,3,2,1,5,5,3,4,3,1},
"LogProbabilities" -> {{-1.3230749823799497`,-1.0901694629913923`,-2.3457453709714526`,-1.4700793186434737`,-2.63328163275743`},{-3.5676519820614803`,-0.3123708784178277`,-3.1611036378310255`,-1.9104915500193689`,-3.002126755531701`},{-1.6867828932189182`,-1.107501806602205`,-1.7195633111936208`,-1.6847242196111625`,-2.1214086361637357`},{-2.2864239360885676`,-1.6184740366126056`,-1.4738417653377847`,-1.3060760748123135`,-1.6082132192813325`},{-1.3055798279180502`,-2.766468185611496`,-1.0131337180773465`,-2.440054045456839`,-1.5331002192261403`},{-1.973534913725214`,-2.867823686819112`,-1.003434863075701`,-1.9397101013153661`,-1.2246886462031084`},{-3.0046827537231158`,-2.6162011981359683`,-0.8280002061059537`,-1.2729302736804`,-1.8298757870901778`},{-1.047711136903383`,-3.5378929242905865`,-0.9915262564993651`,-3.043405432440717`,-1.6019481368520054`},{-2.936911487682738`,-0.5515187072035908`,-2.683446812389006`,-1.689508322928519`,-2.1374183600663708`},{-2.2621830929093663`,-1.8727180352626718`,-1.33811421556974`,-1.5169184779529163`,-1.3453637813139865`},{-1.8763670790107003`,-1.62349597002084`,-0.9628693609194414`,-2.481836172267059`,-1.6914016320505896`},{-2.518480140259026`,-0.9933128300857896`,-1.3114633086079466`,-1.944547436105663`,-1.9907511027998839`},{-1.7602015238116542`,-1.6390160751015568`,-1.7952144465771163`,-1.771611849684553`,-1.2117754448888287`},{-1.6440291331267014`,-2.1807483586623966`,-0.9244826503159296`,-2.271624759858697`,-1.6400934609151196`},{-1.5924798868646974`,-2.934992089469392`,-0.71413754950777`,-2.506837429019083`,-1.7584689541190706`},{-2.8113882456276036`,-0.507582366986162`,-2.4155898217351277`,-1.9583829008191667`,-2.2300004202611006`},{-0.6041377660669138`,-1.9199724776273472`,-3.099931167943298`,-2.156959719601785`,-1.9233616338423551`},{-0.2743917853617383`,-2.7419661874670878`,-3.1124301437403825`,-3.0659740087071765`,-2.4719377165367185`},{-2.073052870284521`,-1.6244123672655064`,-2.38300050057913`,-1.0945322453069395`,-1.3854866191831352`},{-1.7192692204916016`,-3.1217452356972117`,-1.3601142816318588`,-1.3695997378842544`,-1.3247002739059655`},{-1.7425830692721986`,-2.606572890282064`,-1.5356033313546564`,-1.4791595231125236`,-1.1776860925284263`},{-1.4262456637846612`,-3.2710340447967567`,-1.059173864917163`,-1.6573936813136285`,-1.6903960538797884`},{-1.7850751122220496`,-3.321022545286394`,-1.1080087546757644`,-1.3822262633539126`,-1.537746677462455`},{-1.5392132103368241`,-2.5335690073140587`,-1.252365033057452`,-1.2377834996280062`,-2.0385254799464336`},{-1.471518028808052`,-2.497905615956599`,-1.055175009603612`,-1.941623384238023`,-1.6267680184016204`},{-0.319996474795084`,-2.037636250143604`,-5.3659042029386415`,-2.078150872401987`,-4.292017554864219`},{-1.6188854637180297`,-1.946305421219311`,-1.412135229091384`,-1.9288988118201293`,-1.3087806333152714`},{-1.8191120955230993`,-2.3783904727949174`,-1.559939182445216`,-1.586144478024338`,-1.1078494974193942`},{-1.7083432207954283`,-2.504113801707497`,-1.463478730212436`,-1.748296712845479`,-1.1038671113166805`},{-2.013037284481849`,-3.0214774588453794`,-1.3509742257480086`,-1.8120945931373187`,-0.9278852694285299`},{-1.5233022970292105`,-2.3055437122692455`,-1.8649339995376755`,-1.384247525241735`,-1.2841496566911124`},{-0.3114541614155029`,-2.243813207681963`,-5.586569133046814`,-1.8911247057556724`,-4.973970823988584`},{-2.9058787270276394`,-1.5179115626169515`,-2.0417370565131465`,-1.1218862136672725`,-1.306883781100559`},{-1.1157839475679312`,-2.6170704695429325`,-1.2731727123767445`,-2.4944543895571307`,-1.4403631894351068`},{-3.5506902444350876`,-0.2828377244810234`,-4.210603632790225`,-1.858009328312704`,-3.061170110417556`},{-2.0219346072632263`,-2.380486460439006`,-1.188178338341113`,-1.2894349589565703`,-1.6353044190951087`},{-1.7173332924493476`,-1.7046190027300445`,-1.436793330897957`,-1.399649065477215`,-1.8692337906070398`},{-4.005616281820064`,-2.6236137205040375`,-0.6168245416364582`,-1.8415230055026819`,-1.5558232764676376`},{-1.300857588542197`,-2.6760637426548533`,-2.112422358426826`,-2.0094946338719417`,-0.9066691344328986`},{-2.4116038127630812`,-3.5697466365821082`,-1.7927920079928845`,-2.055814513850129`,-0.5315685479076303`},{-3.47301352594456`,-1.1730911046974395`,-2.546228853197989`,-1.8485376114137324`,-0.858673926273047`},{-1.776135998399226`,-2.596812736847876`,-1.5694467914311807`,-1.450084415955697`,-1.1599958088062141`},{-1.821846668523659`,-2.1487766456758344`,-0.8754775139041056`,-2.086603530984795`,-1.7099464674412306`},{-1.9853936056092403`,-1.4772420390028191`,-1.1592995413498628`,-1.9046614337340417`,-1.761260145303738`},{-1.6425717817298722`,-1.5393552721257056`,-1.2281812233172373`,-2.0347325943376053`,-1.7810645479057894`},{-2.098123154494165`,-2.8119300308046835`,-1.7751387290191434`,-1.1329239884523181`,-1.1218565929880502`},{-1.777022706545646`,-2.1631584392988685`,-1.4397235484591153`,-1.5763377232105649`,-1.3013156025732204`},{-2.0880717860256377`,-1.5545375080489219`,-1.3141054459914894`,-1.400030215538644`,-1.9005729277858596`},{-2.1687739437434588`,-1.8079209544625785`,-1.482365352646556`,-1.6823985396602408`,-1.1755142631570197`},{-1.1799897582838192`,-2.5539303149547243`,-1.5892492233514661`,-2.2976828097829802`,-1.169982000210117`},{-1.852796036380162`,-3.1698387222210034`,-1.3020365663332683`,-1.7244631973655495`,-1.0471245154380484`},{-2.2499035834973693`,-2.1976154579633707`,-1.2432033572142211`,-1.9277792807062464`,-1.050984702441329`},{-1.2143543468618434`,-1.333871255904067`,-3.343886647804359`,-1.0257880358457152`,-3.082824140994727`},{-1.2913771910277465`,-3.3511354868472623`,-1.2492917383380375`,-1.7266609306398673`,-1.489531070854245`},{-0.37605189492328095`,-2.747329420757083`,-5.359574965480558`,-1.4809058672252473`,-4.06284551145725`},{-1.2445309152149526`,-1.7246821466109734`,-3.979950843283821`,-0.7302800073615663`,-3.404191790346572`},{-2.2199522294033747`,-2.165363938790019`,-1.1058304243075487`,-1.467474453830802`,-1.5360263803422403`},{-1.2951450903392159`,-2.8630359120322533`,-1.1187777691522058`,-1.975798862501569`,-1.591021643899522`},{-2.623652434814024`,-1.8491680979934753`,-1.2793413909891924`,-1.7159998118893407`,-1.1644631142957311`},{-1.9244790184318261`,-2.950065970771863`,-1.7405694034408885`,-1.5445963295543954`,-0.8845656172408343`},{-1.672809640133569`,-2.3981158412688703`,-3.7664077816861186`,-0.47832138200449764`,-2.5454968561862223`},{-3.332161373953448`,-1.740389672897484`,-2.3040453650632635`,-1.1333684396793222`,-1.0023086744201022`},{-2.6457140941939272`,-2.0301012216267296`,-1.4533429502034183`,-0.8697664184319972`,-1.9318063667547483`},{-1.8555626163844854`,-2.4150599694302306`,-1.4016726963854207`,-1.4957638179408588`,-1.25874278844075`},{-1.0741421672558165`,-4.82761702444879`,-1.3318220358145685`,-2.2233660006087232`,-1.279545097906563`},{-3.0993628635763946`,-0.5354023033164174`,-1.8594849265946207`,-3.467644513463172`,-1.7007579119388319`},{-1.186597843062643`,-1.649234578954735`,-1.2922387976437544`,-2.18523963143796`,-2.15901285077849`},{-0.9214238099691323`,-2.4201944538017113`,-1.684829262714032`,-1.8236149269794355`,-1.7944042722769677`},{-1.873864816631622`,-2.0221051407931236`,-1.2646272407975137`,-1.2971513728003246`,-1.842375623108011`},{-2.2914932278103293`,-2.0624048315781653`,-0.8888492825537598`,-1.7878955880195497`,-1.643530825684711`},{-2.0979321086930387`,-1.9383833071136713`,-1.5173077182802317`,-1.187201103018319`,-1.5655255050524262`},{-3.03792050423694`,-3.096338384735384`,-1.072726833441099`,-1.162915398041024`,-1.3775208106792785`},{-4.6039756369452505`,-1.2839350773091716`,-1.958300017088594`,-4.869921811651266`,-0.5722212692340088`},{-0.14840983215986678`,-2.996885482301265`,-5.5397601127176435`,-2.670529688952215`,-4.210639973856459`},{-1.8096955018347731`,-1.7623068800373587`,-1.178384111433053`,-1.7423654751121656`,-1.705033931362991`},{-1.037074864623818`,-1.6556747463278279`,-3.982772702511819`,-0.8648728499884006`,-4.212604791514437`},{-0.700204279250138`,-1.2730397851527706`,-3.4237761376173093`,-1.805658035721342`,-3.6275407554491377`},{-3.3231469244327783`,-0.4828991731588143`,-3.1933445654764423`,-1.284102306268512`,-3.539243344476437`},{-1.3928463300649616`,-2.6564976913360585`,-1.247915974264051`,-1.9908059784078602`,-1.3557604721394014`},{-4.683707493083811`,-0.22080341798013559`,-5.602265258152381`,-1.7532429920166046`,-4.424498313391561`},{-2.199640175843223`,-2.01912323007631`,-1.5395805764224078`,-1.4136186060706872`,-1.2084739783383325`},{-1.8362131343463346`,-1.2056683367696566`,-1.8897057350083941`,-1.550620751169338`,-1.7267826745761292`},{-2.235520702220035`,-3.2641919358311204`,-0.9958831363237527`,-2.011810875517941`,-1.0449982817959935`},{-2.140614897128195`,-2.141701509491906`,-1.5007966599922429`,-1.5277374956068273`,-1.1239791715597778`},{-1.5708552932946314`,-1.7056161259295708`,-2.521177697767956`,-1.0412186694159524`,-1.7311358833010175`},{-2.018938068268756`,-2.3154995658414146`,-2.5155951634306493`,-0.7897187723320925`,-1.453719236354281`},{-1.6549141125546`,-2.2474548429060217`,-1.626274052892458`,-1.2605564547799843`,-1.5002852625991294`},{-3.7570513355500696`,-2.3182868012522206`,-0.9187543688286935`,-2.076063639944283`,-1.0391176212614661`},{-2.5046751606509288`,-1.2005107666387318`,-1.304346281225259`,-1.353326803660866`,-2.4357926609643434`},{-2.776772621068946`,-4.672202158803061`,-0.8500654460128403`,-3.154830142831723`,-0.7800639654619921`},{-1.3500242443501613`,-3.0338023332620945`,-0.8891110290499712`,-2.5582360466544287`,-1.5887947034316354`},{-2.7284857256379693`,-1.2872367220275094`,-1.7230806109150623`,-1.587135735649805`,-1.2887195423201756`},{-2.0145278887587983`,-2.711581519355043`,-1.4133372542378497`,-1.2917024221688755`,-1.2656618728614122`},{-2.153533701890597`,-1.8639560653692546`,-1.8647054259146463`,-1.0983006946260443`,-1.4250780965876357`},{-1.2715318921342842`,-3.186728999212723`,-1.2818077875015719`,-1.6834195827256908`,-1.5370306380248597`},{-0.6161779786521563`,-3.5294361946915234`,-2.285007016058035`,-1.6249964261011511`,-2.025041061994207`},{-2.987044545496593`,-1.3049420154746083`,-1.2239746604738084`,-1.6874875138288554`,-1.6127800105894572`},{-0.7231509547953164`,-2.6811569328567457`,-2.5352532890866675`,-2.1299762669482116`,-1.3934663078576235`},{-1.369483566426747`,-1.3989592134578712`,-1.5371950892369133`,-2.0287517490269336`,-1.8810813197449605`},{-3.2100141109358127`,-2.9243081798043313`,-1.659203338622014`,-1.7778694927581926`,-0.6039395961031178`},{-1.343110431487199`,-3.8366346857695297`,-1.6919926666281968`,-2.727704903303397`,-0.759543185020742`},{-1.5611848638964145`,-2.8612314470704194`,-0.9417428687002367`,-2.312799765348686`,-1.4106561688664376`},{-2.8091672198398614`,-4.636049826173255`,-0.2701579423642242`,-3.238149383404583`,-2.0592189783525487`},{-0.5301759072998062`,-2.6039062608474377`,-2.143087686401352`,-2.6080624421478245`,-1.9204209043654665`},{-2.21984468006081`,-2.8283307293061197`,-1.2079903071679712`,-1.1613219649981166`,-1.5123412726655148`},{-4.376511396824538`,-0.18255570143305047`,-4.12126369987362`,-2.158005618348005`,-3.79364986149463`},{-2.695230015083297`,-0.569840144590994`,-2.326673062698994`,-1.5157263272977353`,-3.003991671588129`},{-1.5969320363970751`,-2.004274290001132`,-1.590088947711346`,-1.5080499491126982`,-1.4376870017925392`},{-0.5480007559422988`,-2.8587179016985793`,-2.4982250896907177`,-2.0843472921692303`,-1.8455765577890475`},{-2.336602682898261`,-1.1596651204071993`,-0.9580594856065409`,-2.4203293090824918`,-2.143665104147771`},{-4.800793704776102`,-0.15289160251893696`,-4.374950181645252`,-2.239589544124858`,-4.23615766342172`},{-1.7266306012442918`,-1.6173039662252384`,-1.1955899626794102`,-1.5291269163617554`,-2.259199471625396`},{-1.3067906194774153`,-2.523614390799117`,-1.7093193860246867`,-1.3587390846570289`,-1.555093036633856`},{-0.5350183877214701`,-2.847343023140865`,-2.3373978738383623`,-1.8566392906920992`,-2.2675272595286096`},{-2.634923799688197`,-2.13066546188924`,-1.23906650900959`,-1.742458424606`,-1.06486783608366`},{-2.031045341278226`,-2.7665280711531506`,-1.0679142473652383`,-2.3914825670518325`,-0.992353740631784`},{-1.3982452458754469`,-1.9596300869750012`,-2.0768677807477345`,-1.3387126960209397`,-1.493637694035255`},{-0.97797726956861`,-2.514073641793461`,-5.033197736392755`,-0.69166797095023`,-3.331679582031912`},{-2.541160396365484`,-2.270089289936792`,-0.7553658073126354`,-1.8712935809243678`,-1.6390779940361182`},{-2.011114705801857`,-3.5607607119771942`,-1.906055875496489`,-2.0023184656415225`,-0.5904896279647104`},{-1.7007944798310433`,-1.9541245078794591`,-1.0364200723621153`,-1.520153627733801`,-2.2791370980458012`},{-3.918812320231039`,-3.387037954805726`,-1.2744544973147884`,-1.9023777656127934`,-0.6586881475504969`},{-2.4703400459925824`,-1.3502282490526456`,-1.557319439148697`,-1.181376007379679`,-1.9753952196433515`},{-2.2656445960936593`,-3.1427631989966094`,-1.0198008769068476`,-1.6842167684802103`,-1.1815037239173758`},{-1.1872521311271496`,-2.7557384497804898`,-1.5886548821260136`,-1.7563868874250916`,-1.3684078612454842`},{-0.2977218335892204`,-2.687998380505743`,-3.0365613662249307`,-3.0380000981536917`,-2.3693138361580237`},{-2.1552383185718087`,-0.9313540039027`,-4.328324485536318`,-0.8048196824140137`,-3.5150470511826413`},{-4.207286097067115`,-0.18868419067827363`,-3.6464762173711254`,-2.2531674236743173`,-3.6528743469753167`},{-1.2473218574426836`,-2.88660674655611`,-1.592968283835167`,-1.7696290529504337`,-1.2614452494301993`},{-3.853993755704926`,-0.2998502744419859`,-3.6980657558322987`,-1.8137756462661068`,-2.9943904549107536`},{-2.8562245221327482`,-1.4959995209493795`,-0.9777088667564205`,-1.9573878448983701`,-1.6039966418018063`},{-1.4392842011324174`,-1.485672344932167`,-1.7734378929934032`,-1.5823582694340872`,-1.8244015703916252`},{-1.0635142185838309`,-2.50697143916837`,-2.6351350697159672`,-1.0825187778385148`,-1.8152677346318646`},{-1.3158607526872952`,-3.4179714004241144`,-1.8706140664633621`,-1.633629446586885`,-1.050596685004447`},{-0.8818162214847556`,-4.822677631698576`,-3.019155221792877`,-1.0757211871465022`,-1.6711518417454176`},{-0.7475640416989737`,-4.33796989079614`,-2.1734097612140766`,-2.0308237126277744`,-1.315269369092845`},{-0.8500191502881254`,-3.504933599046816`,-2.277837893966156`,-1.846096290747059`,-1.2651863166278134`},{-1.0387302799841074`,-2.011235726051897`,-5.371810643303792`,-0.7280350468352121`,-3.698102685945197`},{-0.8466671343549044`,-2.116339370612006`,-5.136615047766955`,-0.8880465402167632`,-3.400695636138286`},{-1.670206399405808`,-2.4733922063655696`,-0.7869683177716564`,-2.5662322465465377`,-1.632470559338465`},{-2.8773352459224415`,-1.430365002713992`,-1.068320189763002`,-2.127798401522723`,-1.4196052280709877`},{-3.7295200757666453`,-0.2860886749506355`,-3.951299683616498`,-1.7388946308490523`,-3.5113885394616142`},{-1.724026755788715`,-3.4150427513471895`,-1.8356727792634697`,-1.6864161912188202`,-0.8117273353865044`},{-2.0973066869276202`,-3.146500314090845`,-1.4976394067959862`,-2.1794050163291385`,-0.6982709954233032`},{-0.5739132114140225`,-4.4161853354346166`,-4.715372750126677`,-0.9260514052471326`,-3.9357123367044284`},{-1.127706663117245`,-3.549425369557929`,-3.462048703282824`,-0.5632432984512268`,-3.0627481468554083`},{-0.8309949934992712`,-2.422230358917781`,-2.7639188381661763`,-1.0519148020983762`,-2.7591071987928717`},{-1.5491564223561405`,-1.67460958463705`,-3.0381550336411847`,-0.6572051842564257`,-3.3822628564820523`},{-1.7194369290454325`,-1.3882998615046067`,-2.6587858521527235`,-0.8181104346244297`,-2.812810847632038`},{-3.2458088946557226`,-0.48813635035656333`,-2.2055087525189294`,-2.077580497908178`,-2.1904493666671163`},{-1.5037849899105868`,-1.9913364365563266`,-1.4424205648865984`,-1.6379716764346477`,-1.558407035825598`},{-1.8424686640747359`,-1.9433994037813846`,-1.8035682161601039`,-1.7053518625321475`,-1.044296475705196`},{-1.2428855614658223`,-2.192054245995597`,-1.6217288698114998`,-1.7911260885395892`,-1.4463271350472555`},{-2.1380898800891512`,-0.762638331203727`,-3.350696400280014`,-1.025564677164434`,-3.815251859181974`},{-1.1894786873786736`,-2.090945144829139`,-1.1692533208196145`,-2.4353232737263326`,-1.7493806395224742`},{-2.260506381922732`,-2.4788691630256445`,-0.8416625229191921`,-1.6716487465406045`,-1.6454069970534102`},{-1.8324077802225216`,-2.2687058613589515`,-1.0657316051996104`,-1.2791158787478742`,-2.1736003983446635`},{-2.5307362668605506`,-2.8378924947067348`,-1.3590481521976199`,-0.9363589555168641`,-1.5469666963106667`},{-2.5357400471612275`,-1.6329401271589519`,-1.0538716892212345`,-2.2721632181693545`,-1.2954738775814003`},{-0.758536714793578`,-2.871503540052886`,-1.771213970880395`,-1.8566371275511326`,-1.9057461005994918`},{-3.550938690920236`,-2.1141924674768764`,-2.3199537260474936`,-0.8173490108093406`,-1.1689511165980786`},{-1.8057712166087188`,-2.370812500845225`,-0.8885895542961`,-2.703156410814924`,-1.331736299568219`},{-2.0358704688098777`,-2.211874749645989`,-1.68379953198701`,-1.1578316593888456`,-1.3466729881408719`},{-2.487438120607889`,-1.5858658698771988`,-1.9461936774926005`,-0.8660881144899184`,-1.9058469547651324`},{-2.9863206195194385`,-1.2033180195280686`,-3.5197302211376593`,-0.6240324024464121`,-2.477609208296406`},{-2.908173311023777`,-0.8651474436125193`,-1.5514312247625965`,-1.79470989545865`,-1.9219926071067879`},{-0.58195343719724`,-2.9630422470223734`,-2.25458312442206`,-2.2690469985657993`,-1.708127254144916`},{-1.3266038384068117`,-1.1853927548939176`,-3.6726271339307033`,-1.0102829640553959`,-3.232180858152435`},{-2.7721831455481842`,-1.8782634893248962`,-1.4574368555549604`,-1.269114253278839`,-1.3067198307579153`},{-2.406955504945477`,-0.5463502167097909`,-2.0160334810039022`,-2.252097760993904`,-2.380650395662201`},{-0.3687871707977379`,-2.9956078333756992`,-2.914091304577521`,-2.5238712391910703`,-2.0873192325036247`},{-2.8549734241646787`,-2.7826405576126625`,-2.03858511403529`,-1.3952331630462425`,-0.6880011092084712`},{-0.15352863489531562`,-5.165563605048315`,-4.489461170896742`,-2.3950130978554713`,-3.375068467176417`},{-0.35107843029599645`,-4.408607617123628`,-2.6176989469994063`,-2.6235903465367567`,-1.977702472298759`},{-1.2327222439683272`,-1.1749968074670725`,-2.752207868581947`,-1.5223495753102765`,-2.1396452910493933`},{-1.5587115210914533`,-1.460994202861828`,-2.743748213643184`,-0.8679157579172814`,-2.611380952395213`},{-1.7331831213265345`,-1.88279782651911`,-1.3586039930819118`,-1.6065374674666213`,-1.5440483298431025`},{-2.241290751876205`,-1.7293649089866323`,-1.2599533435390171`,-2.19686561623963`,-1.134871218923099`},{-0.8792423876292824`,-3.5766684576596397`,-1.5016576079928527`,-1.9884596460619246`,-1.6231958646702984`},{-2.87560510103858`,-0.5655305796730866`,-2.035605834276945`,-1.6986982987967232`,-2.780032241249463`},{-1.8149421159700279`,-3.4775832831604254`,-1.2271256002999114`,-2.006259304092384`,-0.9711537174667916`},{-1.8011292701881538`,-0.4425952911480004`,-3.2788910316572135`,-2.2930597063018774`,-2.9207463461443375`},{-2.013662045862643`,-3.6300348966866793`,-0.9705132860560889`,-1.4476805014985923`,-1.4872984838433534`},{-1.691232657469396`,-2.0753379511036867`,-1.5573474497624966`,-1.570118943297015`,-1.3038699872341482`},{-3.5201090923172607`,-2.936103415406213`,-1.8365750548352486`,-1.451317080727601`,-0.6468213374640989`},{-1.9216970578510821`,-1.2793108845175292`,-2.224048687423105`,-1.1612602874881341`,-1.8698223740654543`},{-1.6721864726566185`,-2.3054669320418033`,-1.4047553049961299`,-1.4795449969224397`,-1.4301064083143529`},{-1.7222992580423564`,-1.4664348870367045`,-1.3844369852435323`,-1.80393702436105`,-1.7402057977159018`},{-2.9539703737544656`,-0.49268544336853826`,-2.566538470106016`,-1.6426470188062714`,-2.708809356585321`},{-2.0158361705893317`,-1.4162737431567893`,-1.4976713392579932`,-1.5303375589591963`,-1.6924842682861436`},{-1.5397580698650555`,-2.854546337838002`,-1.0673439931705675`,-1.9821849865721084`,-1.4012194255532329`},{-1.66096518652652`,-2.1696765746197064`,-2.186820686826029`,-1.058049972620366`,-1.4421255188339963`},{-3.8073449635016305`,-0.18782840025567774`,-2.9312332169371964`,-2.807135669136424`,-3.343104508969333`},{-2.0959525180651766`,-1.1503870599615447`,-1.0986243007025809`,-2.151653106838312`,-2.199021736815493`},{-8.700763251488691`,-0.005764254725658039`,-9.109606481539782`,-5.225793295778804`,-9.266668347256704`},{-0.945159970677063`,-1.6451758430623193`,-2.5487340161411156`,-1.854341258761831`,-1.694628993127391`},{-1.9766051209429032`,-2.16830627589915`,-1.4110334885784153`,-2.5776518128926895`,-0.8503933700048194`},{-2.3674709603405835`,-2.260776819464864`,-1.8258341596838332`,-1.408660172328617`,-0.9251819618453501`},{-1.722908129414848`,-1.7416526688284544`,-1.4976723253671318`,-1.5616255397984697`,-1.547504141195334`},{-2.5723236675761916`,-2.959878817399365`,-1.4126011249907997`,-0.9500766495086201`,-1.4204864987477004`},{-5.225305514368137`,-2.4869918521959926`,-0.37377314631001746`,-3.525794894456333`,-1.6404120420056993`},{-0.7550310978784418`,-1.213268228972493`,-4.081260833779939`,-1.6086824950104968`,-4.151397191904947`}},
"CountMatrix" -> {{20,1,4,5,10,0},{2,20,6,8,5,0},{6,3,20,7,8,0},{2,4,13,11,7,0},{9,2,10,4,15,0}},
"IndicesMatrix" -> {{{17,18,26,32,55,74,96,98,104,109,113,114,126,129,132,145,160,171,173,196},{170},{43,83,188,201},{33,37,56,117,192},{27,41,49,50,62,73,81,172,197,198},{}},{{77,202},{1,2,9,16,80,82,106,107,111,128,130,142,150,166,175,180,182,189,193,195},{22,44,54,131,159,162},{19,76,87,123,148,149,165,186},{20,40,52,60,152},{}},{{68,125,153,167,174,179},{12,66,92},{6,7,8,11,15,38,45,57,58,69,102,112,119,124,155,156,157,183,191,199},{24,63,71,86,94,163,200},{21,31,46,59,90,93,122,144},{}},{{34,139},{3,35,78,154},{5,14,23,36,48,72,79,121,140,141,177,187,194},{4,53,61,105,118,127,138,146,164,168,176},{39,42,47,51,115,181,184},{}},{{65,67,95,99,133,135,136,137,147},{89,190},{10,25,70,75,88,91,97,103,110,151},{85,158,161,169},{13,28,29,30,64,84,100,101,108,116,120,134,143,178,185},{}}},
"ExtendedClasses" -> {1,2,3,4,5},"Weights" -> SparseArray[Automatic,{202},1.`,{1,{{0,0},{}},{}}],
"BatchEvaluationTime" -> 2.53950495049505`*^-4,"SingleEvaluationTime" -> 0.00990175`,
"Version" -> {12.3`,1}]]],StandardForm],"Output",CellLabel -> "Out[142]= ",ExpressionUUID -> "a2215ba9-483d-4544-ba19-95e4230105bc"]},
Open],ExpressionUUID -> "5a28be81-9894-437a-af87-41c0b06a39ba"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cmESG","[","\"Accuracy\"","]"}]],"Input",CellLabel -> "In[146]:= ",
ExpressionUUID -> "735b1ae9-822d-4632-88a3-34fe0e71558b"],Cell[
BoxData["0.42574257425742573`",
StandardForm],"Output",CellLabel -> "Out[146]= ",ExpressionUUID -> "ee9762ad-ccb8-4f63-a48c-1189770302c3"]},
Open],ExpressionUUID -> "4d1f2bbf-f8a2-402e-ace6-520f8251d266"]},Open],ExpressionUUID -> "bc032aed-b5dd-4023-b02b-6eee2e3d409d"],Cell[
CellGroupData[
{Cell[
TextData[{"Decision"," ","Tree"}],"Subsection",ExpressionUUID -> "6a4880cd-48e5-48ba-83a9-bd00f9d10adc"],Cell[
TextData[
{StyleBox["Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"10",FontWeight -> Bold],StyleBox[RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold]}]],"\n","Using"," ","the"," ","same"," ","training","/","testing"," ","set"," ","and"," ","features"," ","as"," ","before",StyleBox[
RowBox[{","," "}]],"build"," ","a"," ","Decision"," ","Tree"," ","Classifier"," ","for",StyleBox[
RowBox[{" ","\""}]],"ESG"," ","Label",StyleBox[RowBox[{"\"."," ",StyleBox["[",FontWeight -> Bold]}]],StyleBox[
"1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox[
"]",FontWeight -> Bold]}],"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,
0.792156862745098`,0.9215686274509803`],ExpressionUUID -> "5c65c6f8-36a7-446e-8c47-16063de2c9c7"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cESGtree"," ","="," ",RowBox[{"Classify","[",RowBox[{RowBox[
{"trainingset","\[Rule]"," ","\"ESG Label\""}],","," ",RowBox[{"Method"," ","\[Rule]"," ","\"DecisionTree\""}]}],"]"}]}]],
"Input",CellLabel -> "In[147]:= ",ExpressionUUID -> "a4a30d00-8662-442b-a76c-99fb67645902"],Cell[
BoxData[
InterpretationBox[RowBox[{TagBox["ClassifierFunction","SummaryHead"],"[",DynamicModuleBox[
{Set[Typeset`open$$,False],Set[Typeset`embedState$$,"Ready"]},TemplateBox[{PaneSelectorBox[
{False -> GridBox[{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps",
"SummaryBoxOpener"]],RuleDelayed[ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,
BaseStyle -> {},Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},
ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[
AbsoluteCurrentValue[Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[
0.45`],PointBox[{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TemplateBox[{",","\",\"","1","2","3","4","5"},"RowWithSeparators"],"SummaryItem"]}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},
BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[
{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TemplateBox[{",","\",\"","1","2","3","4","5"},"RowWithSeparators"],"SummaryItem"]}]},{RowBox[
{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["\"DecisionTree\"",
"SummaryItem"]}]},{RowBox[{TagBox["\"Number of training examples: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"805","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],RuleDelayed[DynamicModuleValues,
{}],ExpressionUUID -> "f356fe4d-33df-48c3-8ad5-e9090813e929"],"]"}],ClassifierFunction[
Association["ExampleNumber" -> 805,"ClassNumber" -> 5,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12],
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"SynthesizeMissingValues",Association["Invertibility" -> "Perfect","Missing" -> "Imputed",
"StructurePreserving" -> True,"Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Distribution" -> LearnedDistribution[Association[
"ExampleNumber" -> 805,"Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],"f2" -> Association[
"Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],"f4" -> Association[
"Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],"f6" -> Association[
"Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],"f8" -> Association[
"Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],"f10" -> Association[
"Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],"f12" -> Association[
"Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],"Output" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Identity"],"ScalarFeature" -> False,"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Processor" -> MachineLearning`MLProcessor["Sequence",Association[
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 3346332041650992150,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 2555202630280471291,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 563830308113956072]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-2.1993376515110224`*^-4,0.9994632555953235`,0.0098512996093574`,0.0186792213802998`,0.019803452977484797`,-0.007019674434048915`,-0.009388351607216862`,-0.008984681867241554`,0.0035959655187020414`,9.69829299257879`*^-4,9.372657206434265`*^-4,-1.6938162353166193`*^-4,-0.0014470664717340812`},{-9.44052333395085`*^-6,0.01215649900875883`,0.01592374836784797`,-0.6592976146254711`,0.010540024763610644`,-0.03300566346257224`,-3.9604027107958343`*^-4,-0.017573384374654766`,-0.40460185020620076`,-0.08172864819223333`,0.030205233742012717`,-0.06137061865627779`,-0.6231812932812053`},{-7.563479222902561`*^-6,0.01237849154433496`,0.014763847869681629`,-0.59555236990131`,0.00974457300873843`,-0.036638832166690054`,-1.5427483179772844`*^-4,-0.00751020050920883`,-0.21902330797796327`,0.004035759740085371`,-0.007237954530394087`,0.03580471499344582`,0.7707986289278063`},{2.5516372102488407`*^-5,-0.0051444594967748735`,0.023325888464319572`,0.015702331498939095`,-0.27775497771191776`,-0.47015504123466123`,0.06324105329518447`,-0.7959747609581133`,0.055022834184087134`,0.025619381589764924`,0.015515502003880492`,-0.24360172448817136`,0.012150567113948145`},{4.508751240269394`*^-6,0.005249278472649762`,0.0021683565511631704`,0.0013418261667240458`,-0.21895454313857773`,-0.2761950777200422`,0.011051464078199678`,0.27419345321879696`,0.1376300150943208`,-0.8655809486443817`,0.05714827117219156`,-0.16422845840708833`,0.04502925786374607`},{1.2144787126430366`*^-5,0.005531810865719849`,0.028172475174952142`,0.007593066934605304`,-0.3321913570739404`,-0.43181072659953984`,0.023421424755792987`,0.1756684015852696`,-0.056177320176594596`,0.1152425745007101`,-0.5278669328638245`,0.6101714185354156`,-0.05923768256416605`},{2.2718390879647273`*^-6,0.0027493612833127522`,7.40148279402595`*^-4,-8.895011717978825`*^-4,-0.030412776662692657`,-0.029054894831490527`,-0.01711041138719006`,0.23252248527256272`,-0.017701724825533196`,0.1784183654235646`,-0.650030059057471`,-0.6990987515948798`,0.020926045980949107`},{-1.0375018281955322`*^-5,0.005058046909066427`,0.007980926030409712`,-0.45620203347888494`,0.016601918506654233`,0.01897627705097592`,-0.002947097128729851`,0.023266338772977704`,0.8730433718650656`,0.11976835937940561`,-0.03141049699255086`,0.04138469661369448`,-0.10656544154633696`},{1.963859852852306`*^-5,0.005656167172470062`,0.026374189527229776`,0.008269021653117877`,-0.3283924396740975`,-0.4136004664658877`,-0.06706774999393672`,0.4423405183791549`,-0.02165657089719686`,0.4270639657127903`,0.5404288026442414`,-0.21264204350172716`,0.001143653964753919`},{-3.862673936838115`*^-6,-0.010474951399302644`,0.004431479902646225`,0.0030127644004194994`,0.011196117594620452`,-0.026503589199492035`,-0.9949917258463197`,-0.07591416630011935`,0.0033307963032634625`,-0.03748591166168809`,-0.035982945054469896`,0.0234769238558354`,-2.1473664540046765`*^-4},{2.6339682495214836`*^-4,0.009904579568116956`,-0.9983184839336344`,-0.021019185441526395`,-0.0033738918121616114`,-0.05089558131387299`,-0.003632063178140594`,-1.98958907587299`*^-4,-0.002900135045946418`,0.012968518000441532`,-6.465848877120257`*^-4,0.005253939410644457`,-7.989999634730664`*^-4},{6.349301682747238`*^-6,0.0203608529523548`,-0.025876315193192435`,-0.036725360975635196`,-0.8091865451975263`,0.5815208727838391`,-0.020500934707983615`,-0.06245500951749808`,-0.013460515470216237`,-0.0010187371129548276`,2.115323763367767`*^-4,-0.00908449380416889`,0.005656569154355383`},{0.9999999403661488`,2.1722111434573294`*^-4,2.6418002788836516`*^-4,-6.231575248894953`*^-6,2.9397754465239527`*^-5,3.4350155190844186`*^-5,-5.448755839887982`*^-6,5.923829357065471`*^-6,4.357960163565671`*^-6,-9.782230949930894`*^-6,-3.238599982127123`*^-6,4.158172005116309`*^-6,-1.1670414848171227`*^-6}},
"Precisions" -> {2.851721770917354`*^-4,19.79369145023952`,25.320982128871325`,159.6185227654652`,256.4150911586925`,266.34257004620525`,807.3118434887785`,1628.5554109927136`,2313.1667073698777`,4484.201341904336`,6522.188725055776`,10991.04210735666`,22251.060053402027`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202485`,0.00976389468447205`,0.009359042981366458`,0.03264904022111801`,0.4762135888360247`,0.3022523669180126`,0.24808463417018625`,0.006140410412422362`,0.3815488083018635`,0.0018034680944099377`,0.2762726799950311`,0.06421183714658385`,112.73788819875777`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5339254760969378154]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.103374`,"MaxTrainingMemory" -> 602624,"DataMemory" -> 295936,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,20,25.800642`8.164205495032594},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.831769941189964`,0.831769941189964`,0.836214674434106`,0.8641046041812019`,1.080320095470623`,1.0945133942056497`,1.111861178739313`,1.2036823281037534`,1.2051548460079045`,1.2053046652399935`,1.225221154752178`},
"LeftBoundary" -> 0.836214674434106`,"LeftScale" -> 0.002222366622071037`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-13.855590947022097`,0.6637577739115287`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 7787366489183091386]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 9207115022020523744]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["LogRescaleNumericalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Indices" -> {1,2,4,6,7,9},"Centers" -> {3.58101`*^-4,3.2167350000000003`*^-4,0.474829433`,0.246863938`,7.865`*^-5,4.59139`*^-4},
"Cutoffs" -> {0.002081417000000222`,0.001259692500000222`,0.004296135000000201`,0.002232655000000222`,3.7080600000022204`*^-4,7.412800000022206`*^-5},
"Version" -> {12.3`,1},"ID" -> 7105653422396611129,"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]]]],MachineLearning`MLProcessor["Standardize",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Mean" -> {0.8215756881588108`,1.0300586351574321`,0.03264904022111799`,0.19323428704308138`,0.3022523669180126`,0.2782388700017806`,1.1757159882266064`,0.38154880830186316`,0.28314243881047935`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.9568468564147751`,1.1128305729696095`,0.03947591013111705`,0.7300190480810053`,0.03556566901688484`,0.7025480434502485`,1.3577239538966965`,0.036182945585849016`,0.8069321486662895`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 2821169592956478166]],MachineLearning`MLProcessor[
"IntegerEncodeNominalVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> 0,
"Version" -> {12.3`,1},"ID" -> 2589618746467031898,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Imputed"]]],"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Nominal"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["f1" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3605005846534147222]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association[1 -> 1,2 -> 2,3 -> 3,4 -> 4,5 -> 5]},"MissingCode" -> 0,"Version" -> {12.3`,1},
"ID" -> 6962735587533398820,"Output" -> Association["f1" -> Association["Type" -> "NominalVector",
"Weight" -> 1]]]],MachineLearning`MLProcessor["FromVector",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["f1" -> Association[
"Type" -> "NominalVector","Weight" -> 1,"SetSize" -> {5}]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Version" -> {12.3`,1},"ID" -> 5022934801110860942]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Nominal","Weight" -> 1,
"SetSize" -> 5],"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"ProbabilityPostprocessor" -> Identity,"Name" -> "class",
"Marginal" -> Association[1 -> 0.20864197530864198`,2 -> 0.18888888888888888`,3 -> 0.19753086419753085`,
4 -> 0.2037037037037037`,5 -> 0.20123456790123456`]],"LabelSplitter" -> MachineLearning`MLProcessor[
"FeatureLabelSplit",Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",
Association["Index" -> "ESG Label","Order" -> {"ESG Label","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> SparseArray[Automatic,
{5,6},0.`,{1,{{0,1,2,3,4,5},{{2},{3},{4},{5},{6}}},{1.`,1.`,1.`,1.`,1.`}}],"Threshold" -> 0,
"TieBreaker" -> RandomChoice,"PerformanceGoal" -> Automatic,"BatchProcessing" -> Automatic,
"Model" -> Association["Tree" -> MachineLearning`DecisionTree[Association["FeatureIndices" -> RawArray[
"Integer16",{1,2,8}],"NumericalThresholds" -> {0.18064677454117012`,-0.7238124706224518`,-1.0296416562534307`},
"NominalSplits" -> {},"Children" -> RawArray["Integer16",{{-3,-4},{-1,3},{-2,1}}],
"LeafValues" -> RawArray["UnsignedInteger8",{{1,1,3,1,1},{3,1,1,1,1},{1,2,1,2,1},{1,1,1,1,2}}],
"RootIndex" -> 2,"NominalDimension" -> 0]],"Processor" -> MachineLearning`MLProcessor[
"Sequence",Association["Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1,"SetSize" -> {20}],"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Weight" -> {0.25`,0.25`,0.25`,0.25`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["EmbedNominalVector",
Association["Invertibility" -> "Impossible","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Index" -> {Association[9 -> 1,10 -> 2,12 -> 3,19 -> 4,20 -> 5]},
"Output" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],
"EmbeddingVectors" -> {RawArray["Real32",{{0.`,0.`,0.`,0.`},{0.08032261580228806`,0.35884079337120056`,-0.7865994572639465`,0.22992275655269623`},{0.18064716458320618`,-0.20385244488716125`,-0.6042473316192627`,0.2068646103143692`},{0.39970120787620544`,-0.6340935230255127`,-0.7909403443336487`,0.1138736754655838`},{-0.11757543683052063`,-0.7238123416900635`,0.001889187260530889`,-0.34394127130508423`},{-0.9150440692901611`,-0.179880291223526`,-0.63040691614151`,0.765645444393158`}}]},
"Version" -> {12.3`,1},"ID" -> 1590267201122214206]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,4],Span[5,16]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.25`,0.25`,0.25`,0.25`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 3756275547698857618]],MachineLearning`MLProcessor[
"Values",Association["Info" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Weight" -> {0.25`,0.25`,0.25`,0.25`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Impossible","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Calibrator" -> MachineLearning`CalibratorFunction["TemperatureScaling",
Association["Theta" -> 0.6460857903456453`]],"Method" -> "DecisionTree","PostProcessor" -> MachineLearning`MLProcessor[
"Identity"],"Options" -> Association["DistributionSmoothing" -> Association["Value" -> 1,
"Options" -> Association[]],"FeatureFraction" -> Association["Value" -> 1,"Options" -> Association[]]]],
"TrainingInformation" -> Association["PanelCell" -> None,"TrainingFunction" -> Classify,
"EMIterations" -> Missing["KeyAbsent","EMIterations"],"ProcessorEntropyShift" -> 0,
"PreprocessingTime" -> 0.319293`5.9557343909120295,"LossName" -> "MeanCrossEntropy",
"BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[1.738841021283202`,
0.02383818744585073`],"Accuracy" -> Around[0.17350126469255586`,0.03086725768529034`],
"EvaluationTime" -> 4.051740567325357`*^-5,"TestSize" -> 300,"ModelMemory" -> 20136,
"ModelUtility" -> -1.2491097705217133`,"TrainingSize" -> 8,"TrainingTime" -> 0.03981071705534971`,
"TrainingMemory" -> 684056,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.738841021283202`,0.016856143994157077`]},"AccuracyHistory" -> {Around[0.17350126469255586`,
0.021826447225901373`]},"Configuration" -> {"DecisionTree","DistributionSmoothing" -> 1,"FeatureFraction" -> 1}],
TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory","Configuration"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}]}],
Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "DecisionTree",
"Options" -> Association["DistributionSmoothing" -> Association["Value" -> 1],"FeatureFraction" -> Association[
"Value" -> 1]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
1.738841021283202`,0.02383818744585073`],"Accuracy" -> Around[0.17350126469255586`,
0.03086725768529034`],"EvaluationTime" -> 4.051740567325357`*^-5,"TestSize" -> 300,
"ModelMemory" -> 20136,"ModelUtility" -> -1.2491097705217133`,"TrainingSize" -> 8,
"TrainingTime" -> 0.03981071705534971`,"TrainingMemory" -> 684056,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.738841021283202`,0.016856143994157077`]},"AccuracyHistory" -> {Around[
0.17350126469255586`,0.021826447225901373`]}],Association["MeanCrossEntropy" -> Around[
1.9846675245395213`,0.046824456860010376`],"Accuracy" -> Around[0.1542869309945935`,
0.036034185229358494`],"EvaluationTime" -> 3.9810717055349695`*^-5,"TestSize" -> 200,
"ModelMemory" -> 21864,"ModelUtility" -> -1.3833118418098547`,"TrainingSize" -> 40,
"TrainingTime" -> 0.015848931924611134`,"TrainingMemory" -> 108256,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.9846675245395213`,0.03310989097109029`]},"AccuracyHistory" -> {Around[
0.1542869309945935`,0.025480016730211517`]}],Association["MeanCrossEntropy" -> Around[
1.8405600460655425`,0.08117489138138348`],"Accuracy" -> Around[0.2772646370561242`,
0.044595043978896236`],"EvaluationTime" -> 3.1622776601683795`*^-5,"TestSize" -> 200,
"ModelMemory" -> 23784,"ModelUtility" -> -1.3120048587261017`,"TrainingSize" -> 150,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 181736,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.8405600460655425`,0.05739931615785769`]},"AccuracyHistory" -> {Around[
0.2772646370561242`,0.03153345800478984`]}],Association["MeanCrossEntropy" -> Around[
1.7611807330000073`,0.060942325730330295`],"Accuracy" -> Around[0.3057077247264808`,
0.025812758109157622`],"EvaluationTime" -> 4.032386502855071`*^-5,"TestSize" -> 322,
"ModelMemory" -> 28776.`,"ModelUtility" -> -1.266034358239212`,"TrainingSize" -> 644,
"TrainingTime" -> 0.0630957344480193`,"TrainingMemory" -> 527933.3333333333`,"ExperimentCount" -> 2,
"MeanCrossEntropyHistory" -> {Around[1.8017047424690105`,0.06791110897056998`],Around[
1.720656723531004`,0.06133132508043342`]},"AccuracyHistory" -> {Around[0.308953195746906`,
0.03633014925170191`],Around[0.3024622537060556`,0.03610106384548327`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 4.032386502855071`*^-5,"MeanCrossEntropy" -> Around[1.7611807330000073`,
0.060942325730330295`],"ModelMemory" -> 28776.`,"TrainingMemory" -> 527933.3333333333`,
"TrainingTime" -> 0.11868038511537382`],"Index" -> 1]],TypeSystem`Assoc[TypeSystem`Struct[
{"Value","Options"},{TypeSystem`Atom[String],TypeSystem`Assoc[TypeSystem`Atom[String],
TypeSystem`Struct[{"Value"},{TypeSystem`Atom[Integer]}],2]}],TypeSystem`Struct[{"Experiments","PredictedPerformances","Index"},
{TypeSystem`Vector[TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Real],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Real],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,TypeSystem`AnyLength],TypeSystem`Vector[
TypeSystem`AnyType,TypeSystem`AnyLength]}],4],TypeSystem`Struct[{"EvaluationTime","MeanCrossEntropy","ModelMemory","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Real]}],TypeSystem`Atom[Integer]}],1],Association[]],"MaxTrainingSize" -> 805,"PreprocessorEvaluationTime" -> 5.296875`*^-6,
"PreprocessorMemory" -> 169872,"InputDimension" -> 13,"OutputDimension" -> 1,"BaselineLogProbability" -> -1.6088861227806173`,
"VariableBudget" -> True,"CheckpointingInfo" -> Association["Checkpointing" -> False],
"UserStop" -> False,"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[
{Association["TrainingSizes" -> 8,"TimeBudgets" -> 0.0012637087407085005`,"ElapsedTimes" -> 0.052352`,
"ExperimentCounts" -> 1],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.006318543703542505`,
"ElapsedTimes" -> 0.026837`,"ExperimentCounts" -> 1],Association["TrainingSizes" -> 150,
"TimeBudgets" -> 0.03159271851771252`,"ElapsedTimes" -> 0.03572`,"ExperimentCounts" -> 1],Association[
"TrainingSizes" -> 644,"TimeBudgets" -> 0.1579635925885626`,"ElapsedTimes" -> 0.148231`,
"ExperimentCounts" -> 2]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 1062634423780467029],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 2697888825753646059],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 4390545778314233251],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 7859983553761447368],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 3089725660433575125],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 1008303147355534593],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 1518583176177866902],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 3563442707916780119],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 3578761887586607854],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 1532540027029927309],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7850202920507084811],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 455290226604561252],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 7412303335201218563]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.601426`,"MaxTrainingMemory" -> 1490312,"DataMemory" -> 1657112,
"FunctionMemory" -> 277488,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,20,26.246891`8.171652849752851},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]],Selectable -> False,Editable -> False,
SelectWithContents -> True],StandardForm],"Output",CellLabel -> "Out[147]= ",ExpressionUUID -> "756f1d02-ef9d-4571-8f1a-0086c020ee06"]},
Open],ExpressionUUID -> "b5181eb2-c20f-432f-97d0-8bee3b56aaf6"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["11",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","is"," ","the"," ","accuracy"," ","on"," ","the"," ","training"," ","set","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["0",FontWeight -> Bold],StyleBox[".",FontWeight -> Bold],StyleBox[
"5",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],"]\n",StyleBox[
"What",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["is",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["the",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"accuracy",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["on",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["the",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"testing",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["set",FontWeight -> Plain],StyleBox[
"?",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["[",FontWeight -> Bold],StyleBox[
"0",FontWeight -> Bold],StyleBox[".",FontWeight -> Bold],StyleBox["5",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],
"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,0.792156862745098`,
0.9215686274509803`],ExpressionUUID -> "251a7072-b5b4-423c-a354-b90636952bf0"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[",RowBox[{"cESGtree",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[151]:= ",ExpressionUUID -> "800e590f-fd47-4bdf-9bdd-e75b6febc6cf"],Cell[
BoxData[
InterpretationBox[TemplateBox[{"0.174","0.031"},"Around",SyntaxForm -> PlusMinus],
Around[0.17350126469255586`,0.03086725768529034`]],StandardForm],"Output",CellLabel -> "Out[151]= ",
ExpressionUUID -> "f5c5737b-1e8c-443f-a65b-d74988cb5005"]},Open],ExpressionUUID -> "117d3768-6f60-40e8-8625-470c78c8d06b"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cESGtree",",","testset",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[154]:= ",ExpressionUUID -> "265f9604-94ca-4cf7-9a39-e3da39c8d03e"],Cell[
BoxData[
"0.1485148514851485`",StandardForm],"Output",CellLabel -> "Out[154]= ",ExpressionUUID -> "c6499911-3840-41d3-9b46-d0eb81698f5d"]},
Open],ExpressionUUID -> "3967278b-3894-42c3-b688-18dcb3d2321e"],Cell[
TextData[{"It"," ","is"," ","important"," ","to"," ","always"," ","check"," ","the"," ","confusion"," ","matrix",StyleBox[
RowBox[{"."," "}]],"Here",StyleBox[RowBox[{","," "}]],"our"," ","classifier"," ","performs"," ","extremely"," ","poorly"," ","to"," ","identify"," ","class"," ","3","...","\n","The"," ","accuracy"," ","is"," ","actually"," ","even"," ","lower"," ","than"," ","the"," ","baseline","."}],
"Text",ExpressionUUID -> "c6ee3ead-85fc-47a1-be9a-f596b8e0f251"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cESGtree",",","testset",","," ","\"ConfusionMatrixPlot\""}],"]"}]],
"Input",CellLabel -> "In[153]:= ",ExpressionUUID -> "3b3f693e-faad-4511-997a-1a2f40c0c89b"],Cell[
BoxData[
GraphicsBox[RasterBox[CompressedData["1:eJxTTMoPSmVmYGBghWIQe3pwVfu2NW/s/z0KdHv+9Jn9phqhll/aV+xxiTOAwQcM+rEum5PC8Xf2V1ZwHH3od9d+jt/XmBr1eHtuiXmSUoxv7dO9d6V+Cnth3/pbT63y+k17LrsuscMBb+298qSXpi19aZ9kyHZDJfu+/YMH3xn+/Xptfy9tQt6VvIf2ffpzVObPrcRp77pTRsnvmd/Y6wg1sl9kfmIv9m9T/a+VB+2V+8O+BkW8sZ9a9VLtTslT+72/Xx/+znDW3qNuN+v3aW/tk+8mf1u77pX998/f50xNfwQ372GVyDr3h7egfBjAtBeX+VZs/Be717+2P7RS4sXRSY/sDzC+ePvFe6X9HQavv4/t39nv1Pg1kVH3rf0M5aNebx+/wOl+XPbiCh9c4T/vgATfhp9v7Rfs3OiwS/mNfZDHBclXhs9ItvdYNE+LQ99b+xPX/tyu3nPffi7Y/Hyc7gEAIEULqA=="],
{{0,0},{5,5}},{0,1}],Epilog -> CompressedData["1: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"],
Frame -> True,FrameLabel -> {FormBox["\"predicted class\"",TraditionalForm],FormBox[
"\"actual class\"",TraditionalForm]},FrameTicks -> CompressedData["1:eJxTTMoPSmNiYGAoZgESPpnFJWg8VtxyRQxgIOQAEWYHEm75RblO+RUQAW4gEZRfkliSmZ8HFAxmBPINEUYEleakgtUA5WDKoEYCVfADiZCixJRMkHBiDshgrLbzkGK7EbVtZyHFdmNq2/7DngTbTaht+wNSbDelxHay0mAwSMDEgJKEBDHCkJLUADHChJIoBRthbE5JvBAdFkQENdHRDhI0IpTqJHRdQn4r/rSnfpoHCZpaUtt6kjK8AbVtJ7qwAwmaESpvSLae6JIeHPZmlFhPxXRITLVDu2RITLVD21RI9WRAUpVL9QKApOYGoWoHn+0AIpYY+Q=="],
FrameTicksStyle -> 13,GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageSize -> 228.`,
Method -> CompressedData["1:eJylUttKAzEQrfWGeEGkT775DX5AqVarYGXpFt/j7qQNppkyk0Crv+GL/oEv/pPf4A+YWdHWZVsRA1lOdnLOnBzm6BZ7eqNWq/Fa/FwZ9rr+deoFC+l2BK2J4UTluXEDvSJVIaSZspDTQ+O183b/2CzRGhG0Qatg/QkGlyuapn5qgbdEL3gcKW+yEulwRuqQGg9NxpfOA6nMG3R6dYnNzQhugDjeo+NivZctHUTQj1p3XQwMCbIpVOvzqgXoUwBej+BcWYaKRmdaQ+Z5qSF554UZDG3c/jO1BTelE8U00Mj/UnFvXiZB4/6hJZbahGNrHPDPd1dEpQlAI41OAzFSF3P4DqdCd2xVBiNwfqmuWJ+kElvL2oraNJXjNbpyi/3ZZCQW/e+jtCuEWDHuj4O7I0C5ASziPT/Jeml+ACDqxdw="],
PlotRangePadding -> None],StandardForm],"Output",CellLabel -> "Out[153]= ",ExpressionUUID -> "d167e186-a71e-4b79-a562-f893787f7887"]},
Open],ExpressionUUID -> "40f3c573-0d1f-478e-91db-d6ff7bca29fe"],Cell[
TextData[{"Evaluate"," ","the"," ","tree"," ","depth"," ","influence"," ","on"," ","the"," ","Decision"," ","Tree"," ","Classifier"," ","testing"," ","accuracy"," ","by"," ","varying"," ","the"," ","number"," ","of"," ","feature"," ","used"," ","from"," ","1"," ","to"," ","10","."}],
"Text",CellFrame -> 2,Background -> RGBColor[0.8941176470588236`,0.8745098039215686`,
0.8745098039215686`],ExpressionUUID -> "39803dbe-8a37-46d7-9066-58987b9453cb"],Cell[
TextData[
{"We"," ","first"," ","create"," ","a"," ","function"," ","with"," ","argument"," ","the"," ","fraction"," ","of"," ","feature"," ","that"," ","returns"," ","a",StyleBox[
RowBox[{" ","("}]],"trained",StyleBox[RowBox[{")"," "}]],"classifier",":"}],"Text",
ExpressionUUID -> "4a30d291-b3fd-4643-b06e-83ba501490a3"],Cell[
BoxData[RowBox[{RowBox[
{RowBox[{"cESGtreedepth","[","f_","]"}]," ",":="," ",RowBox[{"Classify","[",RowBox[
{RowBox[{"trainingset","\[Rule]"," ","\"ESG Label\""}],","," ",RowBox[{"Method"," ","\[Rule]"," ",RowBox[
{"{",RowBox[{"\"DecisionTree\"",","," ",RowBox[{"\"FeatureFraction\""," ","\[Rule]"," ","f"}]}],"}"}]}]}],"]"}]}],";"}]],
"Input",CellLabel -> "In[155]:= ",ExpressionUUID -> "5b00c589-12a0-484f-b971-256c2407186f"],Cell[
TextData[
{"Now"," ","we"," ","compute"," ","the"," ","accuracy"," ","on"," ","the"," ","testing"," ","set",StyleBox[
RowBox[{","," "}]],"first"," ","mapping"," ","our"," ","classifier"," ","function"," ","on"," ","the"," ","number"," ","of"," ","features",StyleBox[
RowBox[{" ","("}]],"converting"," ","the"," ","actual"," ","number"," ","of"," ","features"," ","into"," ","a"," ","fraction",StyleBox[
RowBox[{"),"," "}]],"then"," ","applying"," ","ClassifierMeasurements",":"}],"Text",
ExpressionUUID -> "a92cdaac-eb5f-4cfb-b5a6-d88517220862"],Cell[
BoxData[RowBox[{RowBox[
{"cmESGtreeAccu"," ","=",RowBox[{RowBox[{RowBox[{"ClassifierMeasurements","[",RowBox[
{RowBox[{"cESGtreedepth","[","#","]"}],",","testset",","," ","\"Accuracy\""}],"]"}]," ","&"}],"/@"," ",RowBox[
{"(",RowBox[{RowBox[{"Range","[","10","]"}],"/",RowBox[{"(",RowBox[{"ncol","-","1"}],")"}]}],")"}]}]}],";"}]],
"Input",CellLabel -> "In[156]:= ",ExpressionUUID -> "b44f5f21-f8d8-4cf7-96a8-5092cbf2eb37"],Cell[
TextData[
{"We"," ","create"," ","an"," ","association"," ","between"," ","our"," ","number"," ","of"," ","features"," ","and"," ","testing"," ","set"," ","accuracy",":"}],
"Text",ExpressionUUID -> "2998e526-13cd-4667-9909-beeacc782fd2"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cmESGtreebestdepth"," ","=",RowBox[{"AssociationThread","[",RowBox[
{RowBox[{"Range","[","10","]"}]," ","\[Rule]"," ","cmESGtreeAccu"}]," ","]"}]}]],
"Input",CellLabel -> "In[157]:= ",ExpressionUUID -> "4dd4a8b0-5ba0-45f6-94c6-b0fc6c8edcef"],Cell[
BoxData[
RowBox[{"\[LeftAssociation]",RowBox[{RowBox[{"1","\[Rule]","0.3118811881188119`"}],",",RowBox[
{"2","\[Rule]","0.3415841584158416`"}],",",RowBox[{"3","\[Rule]","0.4158415841584158`"}],",",RowBox[
{"4","\[Rule]","0.3613861386138614`"}],",",RowBox[{"5","\[Rule]","0.3712871287128713`"}],",",RowBox[
{"6","\[Rule]","0.40594059405940597`"}],",",RowBox[{"7","\[Rule]","0.3712871287128713`"}],",",RowBox[
{"8","\[Rule]","0.3613861386138614`"}],",",RowBox[{"9","\[Rule]","0.4207920792079208`"}],",",RowBox[
{"10","\[Rule]","0.40594059405940597`"}]}],"\[RightAssociation]"}],StandardForm],
"Output",CellLabel -> "Out[157]= ",ExpressionUUID -> "67a68e58-dc68-4019-a8bb-d2a0b0323909"]},
Open],ExpressionUUID -> "ec1c7296-d613-41b1-9f2f-5ede8502d7d8"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["12",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","number"," ","of"," ","features"," ","gives"," ","the"," ","best"," ","testing"," ","accuracy","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "82d97cbc-de2e-406d-8870-f0a2e63acdf9"],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"TakeLargest","[",RowBox[{"cmESGtreebestdepth",",","1"}],"]"}]],"Input",CellLabel -> "In[158]:= ",
ExpressionUUID -> "c8aced19-45cf-4e3d-b1aa-35fdc62cc702"],Cell[
BoxData[RowBox[{"\[LeftAssociation]",RowBox[
{"9","\[Rule]","0.4207920792079208`"}],"\[RightAssociation]"}],StandardForm],"Output",
CellLabel -> "Out[158]= ",ExpressionUUID -> "64b46e6e-68d8-4d48-8018-0c6d8c43c26a"]},
Open],ExpressionUUID -> "3bc09ac7-c10e-42d6-8c4b-c581f574ed6b"],Cell[
TextData[{"By"," ","manually"," ","modifying"," ","the"," ","number"," ","of"," ","features",StyleBox[
RowBox[{","," "}]],"we"," ","got"," ","a"," ","better"," ","accuracy"," ","than"," ","with"," ","the"," ","default"," ","classifier",".","\n","Indeed",StyleBox[
RowBox[{","," "}]],"the"," ","default"," ","classifier"," ","is"," ","not"," ","only"," ","optimizing"," ","the"," ","accuracy",StyleBox[
RowBox[{","," "}]],"but"," ","also"," ","the"," ","training"," ","time"," ","for"," ","instance",StyleBox[
RowBox[{"."," "}]],"It"," ","also"," ","cannot"," ","check"," ","all"," ","the"," ","configurations"," ","of"," ","parameters","...","\n","It"," ","is"," ","thus"," ","good"," ","practice"," ","to"," ","explore"," ","what"," ","is"," ","happening"," ","when"," ","you"," ","modify"," ","the"," ","parameters"," ","of"," ","your"," ","model","."}],
"Text",ExpressionUUID -> "556dd560-8ce0-4c41-a1fb-a6d218ded480"]},Open],ExpressionUUID -> "0c324647-84cd-4b13-9b03-3bee6b137de8"],Cell[
CellGroupData[
{Cell[
TextData[{"Nearest"," ","Neighbors"}],"Subsection",ExpressionUUID -> "c1d5c215-4129-4604-baa7-558d15abca18"],Cell[
TextData[
{StyleBox["Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"13",FontWeight -> Bold],StyleBox[RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold]}]],"\n","Using"," ","the"," ","same"," ","training","/","testing"," ","set"," ","and"," ","features"," ","as"," ","before",StyleBox[
RowBox[{","," "}]],"build"," ","a"," ","kNN"," ","Classifier"," ","for",StyleBox[
RowBox[{" ","\""}]],"ESG"," ","Label",StyleBox[RowBox[{"\"."," "," ",StyleBox["[",
FontWeight -> Bold]}]],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "afe2ec8b-383f-4c5a-b53d-f65fac176d3e"],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"cESGkNN"," ","="," ",RowBox[{"Classify","[",RowBox[{RowBox[{"trainingset","\[Rule]"," ","\"ESG Label\""}],","," ",RowBox[
{"Method"," ","\[Rule]"," ","\"NearestNeighbors\""}]}],"]"}]}]],"Input",CellLabel -> "In[159]:= ",
ExpressionUUID -> "6ed0f6c8-731b-4d1c-846f-fe10919ff28a"],Cell[
BoxData[InterpretationBox[
RowBox[{TagBox["ClassifierFunction","SummaryHead"],"[",DynamicModuleBox[{Set[Typeset`open$$,
False],Set[Typeset`embedState$$,"Ready"]},TemplateBox[{PaneSelectorBox[{False -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxOpener"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[
{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TemplateBox[{",","\",\"","1","2","3","4","5"},"RowWithSeparators"],"SummaryItem"]}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},
BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[
{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox[TemplateBox[{"\"Mixed\"",StyleBox[TemplateBox[{"\" (number: \"","13","\")\""},
"RowDefault"],GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],TagBox[RowBox[
{"{",RowBox[{"\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Numerical\"",",","\"Nominal\""}],"}"}],
Function[Short[Slot[1],10]]]],Function[Annotation[Slot[1],Short[{"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
10],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TemplateBox[{",","\",\"","1","2","3","4","5"},"RowWithSeparators"],"SummaryItem"]}]},{RowBox[
{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["\"NearestNeighbors\"",
"SummaryItem"]}]},{RowBox[{TagBox["\"Number of training examples: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"805","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],RuleDelayed[DynamicModuleValues,
{}],ExpressionUUID -> "a644f3de-aae8-4dbf-ab81-f64df714374b"],"]"}],ClassifierFunction[
Association["ExampleNumber" -> 805,"ClassNumber" -> 5,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["mv" -> Association["Type" -> "Numerical"],
"mc" -> Association["Type" -> "Numerical"],"tobin" -> Association["Type" -> "Numerical"],
"roe" -> Association["Type" -> "Numerical"],"oia" -> Association["Type" -> "Numerical"],
"ois" -> Association["Type" -> "Numerical"],"assets" -> Association["Type" -> "Numerical"],
"roa" -> Association["Type" -> "Numerical"],"sg" -> Association["Type" -> "Numerical"],
"lev" -> Association["Type" -> "Numerical"],"div" -> Association["Type" -> "Numerical"],
"ind" -> Association["Type" -> "Numerical"],"country" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["FromDataset"],MachineLearning`MLProcessor[
"FromNamedFeatures",Association["FeatureNames" -> {"mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],MachineLearning`MLProcessor[
"Transpose",Association["FeatureNumber" -> 13]],MachineLearning`MLProcessor["WrapMLDataset",
Association["FeatureTypes" -> {"Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Numerical","Nominal"},
"FeatureKeys" -> {"f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["SynthesizeMissingValues",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],
"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 805,"Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical"],
"f2" -> Association["Type" -> "Numerical"],"f3" -> Association["Type" -> "Numerical"],
"f4" -> Association["Type" -> "Numerical"],"f5" -> Association["Type" -> "Numerical"],
"f6" -> Association["Type" -> "Numerical"],"f7" -> Association["Type" -> "Numerical"],
"f8" -> Association["Type" -> "Numerical"],"f9" -> Association["Type" -> "Numerical"],
"f10" -> Association["Type" -> "Numerical"],"f11" -> Association["Type" -> "Numerical"],
"f12" -> Association["Type" -> "Numerical"],"f13" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Identity"],"ScalarFeature" -> False,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical","Weight" -> 1],
"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],"f9" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical","Weight" -> 1],
"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Processors" -> {MachineLearning`MLProcessor["Threads",
Association["Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 8927362174464244881]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 1153006799963119603]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,"DK" -> 6,
"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,"IT" -> 14,
"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"MissingCode" -> Indeterminate,
"Version" -> {12.3`,1},"ID" -> 3346332041650992150,"Output" -> Association["f13" -> Association[
"Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["NumericalizeNominalVector",
Association["Invertibility" -> "Approximate","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {20}]],"Boundaries" -> {{-0.5`,-0.45`,-0.4`,-0.35`,-0.3`,-0.25`,-0.2`,-0.15000000000000002`,-0.09999999999999998`,-0.04999999999999999`,0.`,0.050000000000000044`,0.09999999999999998`,0.15000000000000002`,0.19999999999999996`,0.25`,0.30000000000000004`,0.35`,0.4`,0.44999999999999996`,0.5`}},
"Version" -> {12.3`,1},"ID" -> 2555202630280471291,"Output" -> Association["f13" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]]]],MachineLearning`MLProcessor["MergeVectors",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,1],Span[2,13]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 563830308113956072]]},
"Invertibility" -> "Approximate","StructurePreserving" -> True,"Missing" -> "Allowed"]],
"PerformanceGoal" -> "DirectTraining","BatchProcessing" -> Automatic,"Model" -> Association[
"RotationMatrix" -> {{-2.1993376515110224`*^-4,0.9994632555953235`,0.0098512996093574`,0.0186792213802998`,0.019803452977484797`,-0.007019674434048915`,-0.009388351607216862`,-0.008984681867241554`,0.0035959655187020414`,9.69829299257879`*^-4,9.372657206434265`*^-4,-1.6938162353166193`*^-4,-0.0014470664717340812`},{-9.44052333395085`*^-6,0.01215649900875883`,0.01592374836784797`,-0.6592976146254711`,0.010540024763610644`,-0.03300566346257224`,-3.9604027107958343`*^-4,-0.017573384374654766`,-0.40460185020620076`,-0.08172864819223333`,0.030205233742012717`,-0.06137061865627779`,-0.6231812932812053`},{-7.563479222902561`*^-6,0.01237849154433496`,0.014763847869681629`,-0.59555236990131`,0.00974457300873843`,-0.036638832166690054`,-1.5427483179772844`*^-4,-0.00751020050920883`,-0.21902330797796327`,0.004035759740085371`,-0.007237954530394087`,0.03580471499344582`,0.7707986289278063`},{2.5516372102488407`*^-5,-0.0051444594967748735`,0.023325888464319572`,0.015702331498939095`,-0.27775497771191776`,-0.47015504123466123`,0.06324105329518447`,-0.7959747609581133`,0.055022834184087134`,0.025619381589764924`,0.015515502003880492`,-0.24360172448817136`,0.012150567113948145`},{4.508751240269394`*^-6,0.005249278472649762`,0.0021683565511631704`,0.0013418261667240458`,-0.21895454313857773`,-0.2761950777200422`,0.011051464078199678`,0.27419345321879696`,0.1376300150943208`,-0.8655809486443817`,0.05714827117219156`,-0.16422845840708833`,0.04502925786374607`},{1.2144787126430366`*^-5,0.005531810865719849`,0.028172475174952142`,0.007593066934605304`,-0.3321913570739404`,-0.43181072659953984`,0.023421424755792987`,0.1756684015852696`,-0.056177320176594596`,0.1152425745007101`,-0.5278669328638245`,0.6101714185354156`,-0.05923768256416605`},{2.2718390879647273`*^-6,0.0027493612833127522`,7.40148279402595`*^-4,-8.895011717978825`*^-4,-0.030412776662692657`,-0.029054894831490527`,-0.01711041138719006`,0.23252248527256272`,-0.017701724825533196`,0.1784183654235646`,-0.650030059057471`,-0.6990987515948798`,0.020926045980949107`},{-1.0375018281955322`*^-5,0.005058046909066427`,0.007980926030409712`,-0.45620203347888494`,0.016601918506654233`,0.01897627705097592`,-0.002947097128729851`,0.023266338772977704`,0.8730433718650656`,0.11976835937940561`,-0.03141049699255086`,0.04138469661369448`,-0.10656544154633696`},{1.963859852852306`*^-5,0.005656167172470062`,0.026374189527229776`,0.008269021653117877`,-0.3283924396740975`,-0.4136004664658877`,-0.06706774999393672`,0.4423405183791549`,-0.02165657089719686`,0.4270639657127903`,0.5404288026442414`,-0.21264204350172716`,0.001143653964753919`},{-3.862673936838115`*^-6,-0.010474951399302644`,0.004431479902646225`,0.0030127644004194994`,0.011196117594620452`,-0.026503589199492035`,-0.9949917258463197`,-0.07591416630011935`,0.0033307963032634625`,-0.03748591166168809`,-0.035982945054469896`,0.0234769238558354`,-2.1473664540046765`*^-4},{2.6339682495214836`*^-4,0.009904579568116956`,-0.9983184839336344`,-0.021019185441526395`,-0.0033738918121616114`,-0.05089558131387299`,-0.003632063178140594`,-1.98958907587299`*^-4,-0.002900135045946418`,0.012968518000441532`,-6.465848877120257`*^-4,0.005253939410644457`,-7.989999634730664`*^-4},{6.349301682747238`*^-6,0.0203608529523548`,-0.025876315193192435`,-0.036725360975635196`,-0.8091865451975263`,0.5815208727838391`,-0.020500934707983615`,-0.06245500951749808`,-0.013460515470216237`,-0.0010187371129548276`,2.115323763367767`*^-4,-0.00908449380416889`,0.005656569154355383`},{0.9999999403661488`,2.1722111434573294`*^-4,2.6418002788836516`*^-4,-6.231575248894953`*^-6,2.9397754465239527`*^-5,3.4350155190844186`*^-5,-5.448755839887982`*^-6,5.923829357065471`*^-6,4.357960163565671`*^-6,-9.782230949930894`*^-6,-3.238599982127123`*^-6,4.158172005116309`*^-6,-1.1670414848171227`*^-6}},
"Precisions" -> {2.851721770917354`*^-4,19.79369145023952`,25.320982128871325`,159.6185227654652`,256.4150911586925`,266.34257004620525`,807.3118434887785`,1628.5554109927136`,2313.1667073698777`,4484.201341904336`,6522.188725055776`,10991.04210735666`,22251.060053402027`},
"NoisePrecision" -> None,"Processor" -> MachineLearning`MLProcessor["Center",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202485`,0.00976389468447205`,0.009359042981366458`,0.03264904022111801`,0.4762135888360247`,0.3022523669180126`,0.24808463417018625`,0.006140410412422362`,0.3815488083018635`,0.0018034680944099377`,0.2762726799950311`,0.06421183714658385`,112.73788819875777`},
"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Type" -> "NumericalVector",
"Weight" -> 13.`]],"Version" -> {12.3`,1},"ID" -> 5339254760969378154]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 13.`],
"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 13,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Mean" -> {-0.026151619476202478`,0.009763894684472056`,0.009359042981366453`,0.03264904022111799`,0.4762135888360247`,0.3022523669180126`,0.24808463417018636`,0.006140410412422356`,0.38154880830186316`,0.0018034680944099377`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.22504320836030237`,0.0532531911259286`,0.04787094568855051`,0.03947591013111705`,0.02645131540578834`,0.03556566901688484`,0.01254077869926174`,0.04055045653907415`,0.036182945585849016`,0.035213100001882165`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Method" -> "NaiveSampler","VectorLength" -> 13,"Output" -> Association["(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association[
"Type" -> "NumericalVector","Weight" -> 13.`]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4630375964541562211]],"InputDimension" -> 0,"OutputDimension" -> 13,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {2.39117`*^-4},"ID" -> 1449091454103215577],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {2.99086`*^-4},"ID" -> 2141535694769614540],
"f3" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.038342574`},
"ID" -> 8624177578675590133],"f4" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.477811494`},"ID" -> 4199880557605108228],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.313401518`},"ID" -> 5802325227587035704],"f6" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.247285071`},"ID" -> 1905255249589443713],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 4377155100787093259],
"f8" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},
"ID" -> 7426704785730102173],"f9" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {4.81377`*^-4},"ID" -> 7859392980116919133],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.131773399`},"ID" -> 567023840820812934],"f11" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 7613797098408711240],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 3289831931683983051],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 8040148429486402670]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.104657`,"MaxTrainingMemory" -> 602784,"DataMemory" -> 295936,
"FunctionMemory" -> 103408,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,32,18.80923`8.026946001300201},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {0.8327768979188243`,0.8327768979188243`,0.8336397868909836`,0.8649430350054735`,1.0838357484868892`,1.0908394284622789`,1.111307200408472`,1.2034248050603287`,1.2049710961435143`,1.207043998817354`,1.2290044942007556`},
"LeftBoundary" -> 0.8336397868909836`,"LeftScale" -> 4.3144448607967956`*^-4,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[-13.860322438813336`,0.6663451347169365`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],
"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],
"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],
"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 5199739729984741578]],MachineLearning`MLProcessor[
"Threads",Association["Input" -> Association["f1" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f2" -> Association["Type" -> "Numerical","Weight" -> 1],"f3" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f4" -> Association["Type" -> "Numerical","Weight" -> 1],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1],"f6" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f7" -> Association["Type" -> "Numerical","Weight" -> 1],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f9" -> Association["Type" -> "Numerical","Weight" -> 1],
"f10" -> Association["Type" -> "Numerical","Weight" -> 1],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f12" -> Association["Type" -> "Numerical","Weight" -> 1],"f13" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12],"f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor["ToVector",Association[
"Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1],"f2" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f3" -> Association["Type" -> "Numerical","Weight" -> 1],
"f4" -> Association["Type" -> "Numerical","Weight" -> 1],"f5" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f6" -> Association["Type" -> "Numerical","Weight" -> 1],"f7" -> Association[
"Type" -> "Numerical","Weight" -> 1],"f8" -> Association["Type" -> "Numerical","Weight" -> 1],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1],"f10" -> Association["Type" -> "Numerical",
"Weight" -> 1],"f11" -> Association["Type" -> "Numerical","Weight" -> 1],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1]],"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 4127632422337069064]],MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f13" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 376786679257572822]]},"Invertibility" -> "Perfect","StructurePreserving" -> True,
"Missing" -> "Allowed"]],MachineLearning`MLProcessor["LogRescaleNumericalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Indices" -> {1,2,4,6,7,9},"Centers" -> {3.58101`*^-4,3.2167350000000003`*^-4,0.474829433`,0.246863938`,7.865`*^-5,4.59139`*^-4},
"Cutoffs" -> {0.002081417000000222`,0.001259692500000222`,0.004296135000000201`,0.002232655000000222`,3.7080600000022204`*^-4,7.412800000022206`*^-5},
"Version" -> {12.3`,1},"ID" -> 998961203922532257,"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association[
"Type" -> "NumericalVector","Weight" -> 12]]]],MachineLearning`MLProcessor["Standardize",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Mean" -> {0.8215756881588108`,1.0300586351574321`,0.03264904022111799`,0.19323428704308138`,0.3022523669180126`,0.2782388700017806`,1.1757159882266064`,0.38154880830186316`,0.28314243881047935`,0.27627267999503113`,0.06421183714658385`,112.73788819875777`},
"StandardDeviation" -> {0.9568468564147751`,1.1128305729696095`,0.03947591013111705`,0.7300190480810053`,0.03556566901688484`,0.7025480434502485`,1.3577239538966965`,0.036182945585849016`,0.8069321486662895`,0.19905042821008406`,0.06230774565134687`,59.21699955700291`},
"Output" -> Association["(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector",
"Weight" -> 12]],"Version" -> {12.3`,1},"ID" -> 4224959804544403250]],MachineLearning`MLProcessor[
"EmbedNominalVector",Association["Invertibility" -> "Impossible","Missing" -> "Allowed",
"StructurePreserving" -> True,"Input" -> Association["f13" -> Association["Type" -> "NominalVector",
"Weight" -> 1]],"Index" -> {Association["AT" -> 1,"BE" -> 2,"CH" -> 3,"CZ" -> 4,"DE" -> 5,
"DK" -> 6,"ES" -> 7,"FI" -> 8,"FR" -> 9,"GB" -> 10,"GR" -> 11,"HU" -> 12,"IE" -> 13,
"IT" -> 14,"NL" -> 15,"NO" -> 16,"PL" -> 17,"PT" -> 18,"SE" -> 19,"TR" -> 20]},"Output" -> Association[
"f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"]],"EmbeddingVectors" -> {RawArray[
"Real32",{{0.`,0.`,0.`,0.`,0.`,0.`},{-0.297664612531662`,-0.15135522186756134`,0.055695172399282455`,0.3686859607696533`,0.13803435862064362`,0.8453794717788696`},{-0.12085814774036407`,-0.3311799168586731`,0.13494490087032318`,-0.2784625291824341`,-0.07486412674188614`,-0.008707592263817787`},{0.850235641002655`,0.02360658533871174`,-0.27705198526382446`,-0.38314196467399597`,-0.21273453533649445`,0.10175155848264694`},{0.3767968416213989`,-0.10140053927898407`,-0.27055948972702026`,0.30234938859939575`,0.8440420031547546`,-0.8547330498695374`},{-0.03693236783146858`,0.40930768847465515`,-0.1437256783246994`,-0.32837361097335815`,-0.3948705494403839`,0.21859881281852722`},{-0.27260756492614746`,-0.2338666021823883`,0.5389256477355957`,-0.419556200504303`,0.7740651369094849`,-0.2787778973579407`},{-0.02874654345214367`,0.3140849173069`,0.8285291194915771`,0.010499303229153156`,-0.5293681025505066`,0.264029324054718`},{0.16827335953712463`,-0.34274688363075256`,-0.16042856872081757`,-0.19669659435749054`,-0.05070009082555771`,0.27549126744270325`},{-0.42898115515708923`,-0.13039757311344147`,-0.6897872090339661`,-0.8380780816078186`,0.35405147075653076`,-0.07226528227329254`},{0.008581237867474556`,0.2263442724943161`,0.17453348636627197`,-0.16736607253551483`,-0.40919598937034607`,0.19438496232032776`},{0.1702403426170349`,-0.3060764670372009`,0.3001331090927124`,0.185198575258255`,-0.21563425660133362`,-0.46092838048934937`},{0.0875907689332962`,0.03878721594810486`,0.6575491428375244`,0.18105629086494446`,-0.2873818874359131`,-0.4286987781524658`},{-0.886788547039032`,0.01573818176984787`,-0.1983335167169571`,-0.5857574939727783`,0.29684025049209595`,0.3547218441963196`},{0.011217430233955383`,0.28576284646987915`,-0.34565263986587524`,1.0427803993225098`,-0.21504907310009003`,-0.7426312565803528`},{0.024220159277319908`,0.31866583228111267`,-0.3238298296928406`,0.08364823460578918`,-0.15590693056583405`,-0.24802498519420624`},{-0.4495404064655304`,-0.31875452399253845`,0.5191961526870728`,-0.051596008241176605`,0.5928149223327637`,0.307113379240036`},{-0.05585400387644768`,-0.19572226703166962`,0.013029597699642181`,-0.1585976779460907`,-0.049470286816358566`,0.714141845703125`},{0.3318862318992615`,-0.3905484080314636`,-0.20523269474506378`,0.07787758111953735`,-0.2352791726589203`,0.4611585736274719`},{-0.043521951884031296`,0.23752106726169586`,-0.2690742611885071`,0.4173439145088196`,0.08015140891075134`,-0.31789883971214294`},{0.13919471204280853`,0.275917649269104`,0.2931984066963196`,0.3536943197250366`,-0.5458059310913086`,0.20733734965324402`}}]},
"Version" -> {12.3`,1},"ID" -> 8853968865078333022]],MachineLearning`MLProcessor[
"MergeVectors",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f13" -> Association["Weight" -> 1,"Type" -> "NumericalVector"],
"(f1f2f3f4f5f6f7f8f9f10f11f12)" -> Association["Type" -> "NumericalVector","Weight" -> 12]],
"Spans" -> {Span[1,6],Span[7,18]},"Wrappers" -> {Identity,Identity},"Output" -> Association[
"(f13(f1f2f3f4f5f6f7f8f9f10f11f12))" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"]],"Version" -> {12.3`,1},"ID" -> 5213208287252233354]]},
"Invertibility" -> "Impossible","StructurePreserving" -> False,"Missing" -> "Imputed"]]],
"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",
Association["Input" -> Association["f1" -> Association["Type" -> "Nominal"]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Nominal"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["f1" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 3605005846534147222]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association[1 -> 1,2 -> 2,3 -> 3,4 -> 4,5 -> 5]},"MissingCode" -> 0,"Version" -> {12.3`,1},
"ID" -> 6962735587533398820,"Output" -> Association["f1" -> Association["Type" -> "NominalVector",
"Weight" -> 1]]]],MachineLearning`MLProcessor["FromVector",Association["Invertibility" -> "Perfect",
"Missing" -> "Allowed","StructurePreserving" -> True,"Input" -> Association["f1" -> Association[
"Type" -> "NominalVector","Weight" -> 1,"SetSize" -> {5}]],"Output" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Version" -> {12.3`,1},"ID" -> 5022934801110860942]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Nominal","Weight" -> 1,
"SetSize" -> 5],"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"ProbabilityPostprocessor" -> Identity,"Name" -> "class",
"Marginal" -> Association[1 -> 0.20864197530864198`,2 -> 0.18888888888888888`,3 -> 0.19753086419753085`,
4 -> 0.2037037037037037`,5 -> 0.20123456790123456`]],"LabelSplitter" -> MachineLearning`MLProcessor[
"FeatureLabelSplit",Association["Processor" -> MachineLearning`MLProcessor["KeyIndexSplit",
Association["Index" -> "ESG Label","Order" -> {"ESG Label","mv","mc","tobin","roe","oia","ois","assets","roa","sg","lev","div","ind","country"}]],
"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> SparseArray[Automatic,
{5,6},0.`,{1,{{0,1,2,3,4,5},{{2},{3},{4},{5},{6}}},{1.`,1.`,1.`,1.`,1.`}}],"Threshold" -> 0,
"TieBreaker" -> RandomChoice,"PerformanceGoal" -> Automatic,"BatchProcessing" -> Automatic,
"Model" -> Association["NeighborsFunction" -> MachineLearning`PackageScope`NeighborsFunction[
"BruteForce",{{{0.29766431966401236`,-0.8502361720670562`,0.4495410846909536`,0.4289808381663607`,-0.008581942492550102`,0.4289819060403578`,-0.008581678079570774`,-0.008582046965352303`,0.03693279676561713`,0.028745998444533082`,0.043521720040507375`,0.04352287395251846`,-0.008580835285024756`,0.44953979934924543`,-0.1682740618176172`,-0.008582170451762964`,-0.008580734235679462`,0.05585332258807445`,0.27260754097731915`,-0.01121793387905646`,0.12085813147231408`,-0.008581403324088887`,0.03693163421959234`,0.4495401727759829`,-0.008582042720191672`,-0.011217836912198888`,-0.8502355328935093`,-0.008581435220551971`,0.04352145150012237`,-0.008582126922579822`,-0.008582055555881518`,-0.008582237843495539`,-0.008580878257583637`,-0.00858043753600226`,-0.00858062425393045`,-0.011216685236432992`,0.03693285297466362`,-0.16827431447521954`,0.12085732230791017`,0.03693255999624914`,0.44953999573917647`,-0.011216951192209366`,-0.011217675528749678`,-0.02422076317987722`,-0.16827433127683`,-0.16827237789567803`,-0.008581654020840023`,-0.13919413541640388`,-0.008581125110948936`,0.42898043720969303`,0.028746902245473546`,0.03693139609209346`,-0.024220471031505743`,0.03693184766000307`,0.03693163180487327`,0.12085726006466459`,-0.008581495396549966`,-0.00858028668592449`,0.27260846510564446`,-0.011216706269524914`,-0.011218024348227289`,0.03693326292813401`,-0.00858106601420442`,0.04352177243334509`,-0.011216923721781652`,-0.008581909331206734`,0.036932550672840674`,0.028746933733878866`,0.043521488294441926`,-0.008581964242859437`,-0.00858123290153901`,-0.8502350643538257`,0.028746228325002725`,-0.008582016359292127`,-0.16827358482684818`,-0.8502365600711325`,-0.00858023806816159`,-0.008580477298047251`,0.03693323491840713`,0.028746256468467662`,-0.024220507916514478`,-0.008581052004441361`,0.03693263750200969`,-0.008580359394578558`,-0.8502352461423291`,0.028745954647606656`,-0.008580771957330313`,0.42898162159028996`,-0.16827265276238818`,-0.011216899266915412`,-0.008581241144372755`,-0.008581833956635771`,0.05585365887068771`,-0.008580844241727684`,-0.00858152190006356`,0.42898170507680355`,0.42898213663487084`,0.4289810086026178`,-0.011217402539115006`,-0.008581757127666635`,0.4289815481896779`,0.27260817141764454`,-0.008580798410571126`,-0.008581150378365227`,-0.008580450027974449`,-0.00858149260850797`,0.04352108504792641`,-0.8502348079670893`,0.04352177513097946`,-0.17023936029894177`,-0.01121647111234597`,0.29766554764538383`,0.4289802425904941`,-0.13919534398434366`,0.04352161675865848`,0.03693295147848284`,0.4289802489688921`,-0.008581811071049326`,-0.008581409717518012`,0.036931451613652265`,0.2976643915107048`,-0.00858039254983234`,-0.00858040799899724`,-0.17023976566171115`,-0.008580778305075077`,0.04352100660206157`,0.03693217110123159`,0.028746259675592356`,-0.008580387443810114`,0.036933014905974816`,0.12085815150637647`,-0.008581657615808968`,0.036932500648101066`,0.4289812352656802`,-0.17024071798207405`,0.04352214010704049`,0.2726074758767437`,0.42898184011678503`,-0.008581357886473616`,-0.008582137551524047`,0.42898161762724535`,0.03693294222482634`,-0.008581479415680153`,0.4289801706355145`,-0.008581897995971406`,0.42898047651537546`,-0.008580985492700668`,-0.01121676779393103`,0.42898209135942833`,-0.011216713832780058`,-0.00858027824053937`,-0.008581735877254443`,-0.008580785159167385`,0.12085825909940505`,-0.16827367132045978`,0.42898118306732774`,-0.008581832869063128`,-0.17024102609764596`,-0.024219395508532672`,-0.17023985697174532`,0.04352151030784747`,-0.0085804190452658`,-0.00858094701560713`,-0.008581095736184248`,-0.008581648172006337`,0.028746417877660798`,0.03693177205569339`,0.4289807619585102`,-0.008580813471481924`,-0.011218111386818112`,0.12085877526292434`,0.05585356042283398`,-0.8502354834792727`,0.03693264842778934`,0.42898156686624`,-0.008581687771447827`,0.2976638717554187`,0.0558548084895372`,0.42898186199110483`,-0.008581356066918783`,0.02874613607311045`,-0.008581000293500497`,-0.3767963659072044`,0.12085717955692218`,-0.008582169799604753`,0.055853777812967194`,-0.008581825852388267`,0.05585429648584792`,0.028746754252902674`,0.4289811977621089`,0.04352104450889202`,-0.0242194838178206`,0.12085888985851359`,0.4495399989998066`,0.028745604818434464`,0.05585399568709843`,-0.008581940742920843`,0.05585431215429488`,0.44953984215340087`,-0.024221144114109344`,0.02874745715798858`,-0.008581371729596464`,-0.008582037965535977`,-0.024220028916006508`,0.29766460323609634`,-0.011216535248980322`,-0.011217836440610439`,-0.008581785476178999`,-0.008581507691181085`,0.036933365562708875`,-0.16827429730047685`,0.4289808123133725`,0.03693210229150526`,-0.008582224215161744`,0.03693240563621003`,-0.011217305643325083`,-0.008580632432195888`,-0.008581916128749248`,-0.02421994436002652`,0.42898146170734563`,0.05585476144571665`,0.4289814521860953`,-0.008581499387091624`,-0.008581505695580437`,0.03693222144455055`,0.2726083624324127`,-0.008581863372372064`,-0.8502354765998271`,0.4495407927053116`,0.4289804162200086`,-0.008581855156855618`,-0.008581708586482252`,0.028746726748500966`,0.2726084905634982`,0.27260788560347754`,0.449540943127141`,0.4289804112769568`,0.03693326251132864`,-0.8502362219808199`,0.42898129563111365`,-0.008581666255198189`,-0.00858148549347603`,-0.008581743940254329`,0.42898107269864016`,0.428981905041232`,-0.011216986250965245`,0.42898212166288635`,-0.008580943890009728`,-0.011216986563569908`,-0.8502348288095917`,-0.008580284361442002`,-0.008581432925213179`,0.8867885457753716`,0.036931648607727484`,-0.0085810268562524`,0.4289805167675864`,0.12085807882695561`,-0.011218265277894622`,-0.011217014730166156`,0.036932814103271996`,-0.00858143014803728`,0.12085800590591411`,-0.008581903007658832`,-0.00858028708439528`,0.4495400037222314`,-0.008580363200662865`,-0.008580312037142974`,-0.331885810583186`,0.12085729052969428`,-0.008580431955769106`,0.03693160941060517`,0.12085734794070116`,-0.008580468346837738`,-0.008582141236061658`,-0.008581377488879488`,-0.16827246983291624`,-0.008581124683089398`,-0.13919537572597704`,-0.8502350001415302`,0.1208578519734002`,0.03693171820815395`,-0.008580318610462179`,-0.011216784176342696`,0.4289808904850101`,-0.008581293724887766`,0.42898118958423576`,-0.008581767982980867`,0.043522245470555374`,0.04352144654144427`,-0.008580380359837336`,-0.16827343476225748`,-0.008580697636668156`,0.03693321368319613`,-0.008581203985395072`,0.2726071899894291`,-0.8502346729797704`,-0.008581337025320277`,0.4289803747601942`,0.12085740344102917`,-0.008580566536270703`,-0.008580916283390236`,-0.02421924969607825`,-0.008581474356332181`,0.05585384977049188`,-0.008580365527302014`,0.028747538622045123`,-0.008581087110986383`,-0.008580861720176355`,0.04352197240561065`,-0.008580573433675973`,0.03693317334616229`,0.04352158308756707`,0.4495401110489098`,0.4289812366742681`,0.028745638702258144`,0.27260831422087267`,-0.3318855267357198`,-0.00858099940404431`,0.0369327830529819`,-0.02422021236703709`,-0.008581136784347212`,-0.024219308627800012`,-0.13919498299941593`,-0.008582140192285714`,0.03693185680999592`,-0.08758980922188353`,-0.008581366372238535`,-0.008581837667420036`,-0.008581659122472664`,-0.008581886850778602`,-0.008581478633394014`,-0.024221122538097675`,0.03693288077339569`,-0.0242200708822384`,-0.011216527352132731`,0.8867882466032267`,-0.008581136102998396`,-0.008581263740896483`,0.03693281215270453`,-0.024219620823739785`,0.12085847305526547`,0.0369329212392944`,0.055854546344027936`,-0.17023942273741666`,0.03693180509423275`,-0.008581273181071044`,0.03693179276811733`,-0.008582104437149298`,0.03693238180612135`,-0.3767969899422455`,-0.011218111152167202`,0.04352212067015892`,-0.00858192531934134`,0.27260782213256335`,0.42898101287542006`,0.028746886610695462`,0.12085913393657853`,0.05585361204363245`,0.04352172804246549`,0.12085717891022826`,-0.008580719432518476`,0.2976649525881394`,0.8867887868923532`,-0.8502350112292432`,0.428980195773948`,0.04352254785979793`,-0.008580624060220187`,-0.0085811051668128`,0.2726078057356287`,-0.008581368144453884`,-0.008581191397201227`,-0.008581579943102585`,-0.008580503501914652`,-0.13919423626365351`,0.03693150560617098`,-0.17024060056685278`,-0.008582188653898828`,-0.00858080604430891`,-0.8502355472247053`,-0.008582101699302732`,-0.17024120970328308`,-0.008580272252149291`,-0.008581063119290994`,0.03693175957918061`,0.03693261592164181`,0.05585494204315501`,0.03693275542580025`,-0.00858212063037879`,-0.008582163006069104`,0.4289804080849185`,0.42898137636601247`,0.2726075322738428`,-0.008581881978275202`,-0.008582172100612157`,0.03693308294734105`,0.028746251896112518`,-0.008580263776213385`,0.028747171767562214`,-0.0085804436232336`,-0.00858029404484076`,0.028747349375638855`,0.04352235272730109`,0.04352176074557323`,0.043521559480999304`,0.043520956577012555`,0.42898191971850336`,-0.08759132550188978`,0.04352169583625092`,-0.008580596582918655`,-0.008580646893753588`,-0.13919377209220077`,-0.011217483253439478`,0.036932652921001535`,-0.008581096338573933`,-0.008581451655061113`,-0.0085803317172699`,0.04352142720080212`,0.028746147516642267`,-0.008582017211426277`,0.42898117720835044`,0.12085838381969892`,-0.008581136912584879`,-0.008580869491170998`,-0.16827265262536817`,-0.008581452511816107`,-0.008580306877529592`,-0.008580915557911187`,-0.00858030712898018`,-0.13919395890481848`,-0.008581168134518879`,0.055854998873755154`,0.04352225164558771`,-0.008581863555878696`,0.03693162487662406`,0.12085717836277905`,0.028746448889763156`,-0.008580473633439938`,0.036932900810583896`,0.44953995151970005`,0.0558550018117998`,0.428981521822138`,0.036932424752942936`,-0.1682732252762813`,-0.008581941957140682`,0.428981394924916`,0.04352104451176226`,-0.008581367288771331`,-0.008581581451824019`,-0.8502350168715513`,-0.8502358123422067`,0.4289807816857814`,-0.33188707015528646`,-0.1682725876747727`,-0.8502349511230597`,-0.008580721793469645`,0.02874621910829852`,-0.8502349304979866`,-0.3767959550193916`,-0.13919460315349547`,-0.008582149267353109`,0.4289806511524684`,0.05585384852022456`,0.4289812411362161`,-0.8502349848528038`,-0.13919415194211154`,-0.008581038077632379`,0.028747480119228636`,0.028746012941617972`,0.04352278838102333`,0.04352201889059436`,0.03693318984881367`,-0.008581607345536379`,0.4289810675228081`,-0.008580287921792029`,-0.139195381473726`,-0.008581671365354664`,0.4289816057721889`,0.44954129163972983`,0.4289814700687556`,0.42898085981655626`,-0.008580758553839803`,-0.024221004606972407`,0.42898123797165316`,-0.011217055245157976`,-0.008580256732997942`,0.2726069098520352`,0.42898038554918`,-0.008581509333610805`,0.4289808663183155`,0.4289815391858451`,-0.008581461451011038`,0.04352152521179014`,-0.00858160093006353`,0.4289818969685303`,-0.008581700464838138`,0.04352162216755859`,-0.011218369310120534`,-0.008581415778376029`,0.2726072319468522`,-0.008582074104193205`,-0.008580882311489887`,-0.024220492774351704`,0.05585475249366495`,0.043521582703929036`,0.4289820874645247`,0.04352282136018227`,-0.1391937289768682`,-0.02421972971588042`,0.043522409675683736`,-0.008582126853473754`,0.42898141855603494`,0.03693283396554549`,0.4495402169414991`,0.05585311265176478`,-0.008580449251692962`,-0.011217806004255128`,0.028746252698373904`,0.04352293381972913`,-0.008581611679080352`,0.05585383023823531`,0.449540500396501`,-0.8502363134232087`,-0.011217695411321898`,0.4289812882614219`,-0.17023995376960283`,0.4289807887234019`,0.428981155557023`,-0.008581852559811873`,-0.8502360467536692`,-0.011216682419244218`,0.05585361380065312`,-0.008581155344737513`,0.04352289465640864`,-0.8502359042444395`,-0.8502358644397681`,0.028747408340192064`,-0.008581794034260622`,-0.008581594575501374`,-0.00858067206862245`,0.028747047771924838`,-0.8502361007761786`,-0.008581868594654398`,-0.01121784084543227`,-0.00858151829360317`,0.03693316524010307`,0.055854588986381806`,-0.3318854915815892`,0.03693277428064732`,-0.008580593345159097`,0.03693282183342666`,-0.0875914160596151`,-0.1682740281371474`,-0.008582088641928462`,-0.008581538632537671`,-0.00858199506768532`,-0.008581216616078666`,0.03693318083485186`,-0.1682725606614776`,0.05585409730260566`,-0.00858094258240507`,0.2726067464508608`,-0.008581479888561975`,-0.008581871246739368`,0.4495413462855608`,-0.011217050787381902`,0.036932966393773005`,0.02874555356368998`,0.028746105069308345`,-0.1702393710710946`,0.4289804404845182`,0.2726079179920719`,-0.008580644959937432`,-0.008580741610785021`,0.42898036231553793`,0.04352157567093966`,-0.008580854760097824`,0.05585311414518758`,-0.008581250298057336`,-0.02421971264936727`,-0.008580303507287154`,-0.024219898348706564`,-0.00858134178314902`,0.03693165362311277`,0.03693156653979481`,-0.008580772553324921`,-0.00858085640159179`,-0.008580351832553823`,0.03693145512793643`,-0.8502348388694925`,-0.008581839528653308`,-0.1682724428190764`,-0.008580351787434961`,0.4289813611434436`,0.27260670261184855`,-0.011217525607939502`,-0.008581126507716159`,0.12085861719029688`,-0.00858127682531297`,-0.011216533568742268`,-0.008580578396604142`,-0.008581449736943823`,-0.008581895624795789`,0.29766475124790537`,0.42898080627951274`,0.4289806520984718`,-0.008580641418972544`,-0.008581097445022529`,0.12085803752047487`,0.02874624330038059`,-0.01121650414538312`,0.03693231036942573`,0.04352173618928277`,-0.008580618390051899`,0.02874615116748476`,0.036931659886210076`,0.036932629059869916`,-0.008580858399936475`,0.1208578899175697`,-0.008581642108182427`,-0.008580555056634527`,0.0558542803040233`,0.8867891387257725`,-0.008582041049120156`,-0.8502352765951082`,-0.011218109832011122`,-0.16827305937385958`,0.02874655078198041`,-0.024219221025283667`,0.043522568860863566`,0.42898117431733757`,-0.850235290202609`,0.42898032617297643`,-0.8502352714671916`,-0.024219480344801456`,0.028747406803434128`,0.055854239894272475`,-0.8502365356380123`,0.8867875723774917`,0.4289818161451114`,0.8867890795985112`,-0.008581648534977285`,-0.8502362353186768`,0.036932559999255196`,-0.008581910657084704`},{0.1513548597657042`,-0.0236060388357862`,0.3187535593462395`,0.13039844209777904`,-0.22634363906186272`,0.13039680253089173`,-0.22634470310446303`,-0.22634422876695748`,-0.40930719176161656`,-0.3140845883130448`,-0.2375219771081996`,-0.23752197894665728`,-0.22634334594077862`,0.3187549215827042`,0.34274746548606533`,-0.22634381399404593`,-0.22634434760002964`,0.19572224428373286`,0.2338658389776099`,-0.28576271204928644`,0.33117996911580955`,-0.22634414599673017`,-0.40930763366771905`,0.31875483770105467`,-0.22634379963934162`,-0.28576366313641105`,-0.023607315034883797`,-0.22634411904137058`,-0.23752137393862116`,-0.22634367886519982`,-0.22634490809915137`,-0.2263434398054396`,-0.22634413755583432`,-0.2263447968583879`,-0.2263434561163714`,-0.2857631991823085`,-0.4093078816841306`,0.3427478037570361`,0.33117940837635335`,-0.40930841127388407`,0.31875449337133466`,-0.285761856769339`,-0.2857629468549541`,-0.3186658694088902`,0.3427476182247341`,0.34274679483891446`,-0.22634357303811758`,-0.2759174805587525`,-0.22634451735657596`,0.13039735247233653`,-0.31408549408284403`,-0.4093074515296509`,-0.3186656960024959`,-0.40930804661548287`,-0.4093082747988374`,0.33117915871467546`,-0.22634423985086613`,-0.2263443324587597`,0.23386647400117436`,-0.2857624038868359`,-0.2857627046657609`,-0.40930687960954315`,-0.2263445905561433`,-0.2375220361975314`,-0.28576376084413013`,-0.22634465665280265`,-0.4093078043972808`,-0.3140845256680726`,-0.23752188989521617`,-0.22634469439335167`,-0.22634485759566597`,-0.02360658654270668`,-0.3140843602413173`,-0.22634402457688155`,0.34274650114195837`,-0.02360745222541774`,-0.2263438057653566`,-0.2263435334181246`,-0.4093085726412819`,-0.3140840968942795`,-0.31866496064624567`,-0.22634459068819984`,-0.4093084806095926`,-0.22634418688308855`,-0.02360708087579853`,-0.3140842298686521`,-0.22634391077336946`,0.13039712618592306`,0.34274751968842454`,-0.2857633631387432`,-0.22634342631658108`,-0.22634411899686407`,0.19572266524499218`,-0.22634380256845374`,-0.22634365797096848`,0.13039704197341478`,0.13039789743880378`,0.13039705058733464`,-0.28576192732254707`,-0.22634373369983035`,0.13039779847943297`,0.2338665501432454`,-0.22634475569085674`,-0.22634523686244615`,-0.2263450365565481`,-0.2263436286929365`,-0.23752168818816766`,-0.02360705393427172`,-0.23752099209195246`,0.3060754978433615`,-0.28576215315898074`,0.15135480971373735`,0.1303984816711909`,-0.2759172043755694`,-0.23752069390800232`,-0.4093080522024073`,0.13039823794087227`,-0.22634486449619978`,-0.2263435551123956`,-0.4093081458079057`,0.15135436637635574`,-0.2263452703152842`,-0.22634446142882272`,0.306076541164164`,-0.22634519869404215`,-0.23752040446339873`,-0.4093080666596204`,-0.31408473662269093`,-0.22634341676150876`,-0.4093073444737851`,0.3311792985974948`,-0.2263435036821763`,-0.4093070966391362`,0.13039762389186693`,0.30607661670678715`,-0.23752128166991365`,0.23386726937212735`,0.13039744731212732`,-0.2263448828008424`,-0.22634471245506335`,0.13039826144379285`,-0.4093081339652195`,-0.22634397230381698`,0.1303978622029606`,-0.2263449638191422`,0.13039712897081143`,-0.22634379710573077`,-0.2857632371941617`,0.13039794793254705`,-0.2857631082423682`,-0.22634387679607837`,-0.22634331234275779`,-0.22634424649012574`,0.3311808475744784`,0.34274591929049564`,0.13039813325194413`,-0.2263435830123102`,0.30607734636129635`,-0.3186655370832886`,0.306076828867707`,-0.23752172629483345`,-0.22634382463184674`,-0.22634408396563785`,-0.2263450895462916`,-0.22634526880876024`,-0.31408533566117397`,-0.4093077825408007`,0.1303976767697104`,-0.22634354093114267`,-0.2857621675972185`,0.3311795723448325`,0.19572160358683657`,-0.02360629064862619`,-0.4093083000898078`,0.1303980629768678`,-0.22634356087387153`,0.1513549480809428`,0.1957227869799336`,0.13039812597633027`,-0.22634497000957865`,-0.3140840940918204`,-0.22634446605474515`,0.10139961123938782`,0.33117985980666564`,-0.2263446514202115`,0.19572275673035094`,-0.22634377574961326`,0.19572288697260926`,-0.31408582361149534`,0.1303979026034151`,-0.2375214329215315`,-0.3186648992832939`,0.3311793828763659`,0.31875550612407655`,-0.31408465292192006`,0.195722553258058`,-0.22634338703688414`,0.19572148016871244`,0.31875543521149174`,-0.3186665353846104`,-0.31408405550458374`,-0.2263450666922296`,-0.2263435194930532`,-0.3186662175354991`,0.15135435131852937`,-0.28576197609224613`,-0.2857628784116759`,-0.22634476592224187`,-0.22634407983755575`,-0.40930813942900096`,0.3427470872593161`,0.13039661642213196`,-0.40930745076497954`,-0.22634341905439118`,-0.40930848690615745`,-0.28576311731107856`,-0.22634391581992938`,-0.22634441203988437`,-0.31866658082416743`,0.13039722126545655`,0.19572128466089397`,0.13039839326085045`,-0.2263436424441654`,-0.2263448541308097`,-0.4093072244539815`,0.23386620701319538`,-0.226344091119937`,-0.02360565212862885`,0.31875508787201706`,0.13039852745149189`,-0.2263445988131203`,-0.22634476160435896`,-0.31408571586699596`,0.23386753043573036`,0.23386704998406815`,0.31875521432329157`,0.130396925538901`,-0.4093077274421101`,-0.023606398833272608`,0.1303974240377231`,-0.2263441891648816`,-0.22634353975758628`,-0.22634396709866558`,0.1303975372768679`,0.1303971609882327`,-0.2857638043988547`,0.1303981008384918`,-0.2263451436329044`,-0.2857630763463796`,-0.023606537498545868`,-0.22634329084462507`,-0.22634341791466628`,-0.015738875389236903`,-0.40930731250225055`,-0.2263440919644707`,0.13039726360828768`,0.33117956889187644`,-0.28576298810240985`,-0.2857622790152319`,-0.4093078500225176`,-0.22634352708067548`,0.33118005672522877`,-0.2263442077243789`,-0.22634357377007205`,0.3187553110782683`,-0.22634442308889824`,-0.2263452691521349`,0.3905483036524531`,0.33118035152330255`,-0.226344529224293`,-0.40930753796875663`,0.3311800152879045`,-0.22634403752674687`,-0.22634456990936683`,-0.22634474049394054`,0.3427468119742903`,-0.22634417692277956`,-0.2759179256471222`,-0.023607308489998906`,0.33117917290058874`,-0.40930801850284976`,-0.22634382801635436`,-0.2857622608116369`,0.13039823219323196`,-0.22634492626287406`,0.13039828607272244`,-0.22634432749926317`,-0.23752097374768655`,-0.23752035519309092`,-0.22634376289882144`,0.34274695093076524`,-0.22634408082764676`,-0.4093073257495409`,-0.2263436367202547`,0.23386608508157844`,-0.02360631114494513`,-0.22634337936764717`,0.13039701606740373`,0.33117979460934033`,-0.22634343988396335`,-0.2263443417229046`,-0.3186657489801544`,-0.2263439732330474`,0.19572240305342997`,-0.226344890823767`,-0.3140856372166745`,-0.22634382296616373`,-0.22634452940756558`,-0.2375218432095617`,-0.22634443657674885`,-0.4093082469307907`,-0.23752158794275705`,0.3187553656007274`,0.13039722150064728`,-0.31408577319575215`,0.23386689075030098`,0.3905491999029138`,-0.22634426843696284`,-0.4093072382845808`,-0.318665544135381`,-0.22634445633740613`,-0.31866602218396717`,-0.2759186192714307`,-0.22634466871327819`,-0.40930814929798665`,-0.038786540082917736`,-0.2263449527542282`,-0.22634459656207748`,-0.22634359995459874`,-0.2263439700187854`,-0.22634376906423398`,-0.3186661771906866`,-0.4093078351004628`,-0.31866534694800236`,-0.28576208456960767`,-0.015738277475411816`,-0.22634524302892678`,-0.2263452634328411`,-0.4093078968880674`,-0.31866618647306383`,0.3311801164087154`,-0.4093074950904631`,0.19572134447797057`,0.3060767064951802`,-0.4093070621062702`,-0.22634421284299777`,-0.4093069787638097`,-0.22634503860716387`,-0.40930683719818467`,0.10140003615801797`,-0.28576221605558116`,-0.2375213031141387`,-0.22634400636123964`,0.2338666588755582`,0.13039733123693908`,-0.3140841591646445`,0.33117985660125077`,0.19572231397155937`,-0.23752150723209398`,0.33118000431529293`,-0.2263448514723971`,0.1513559577197392`,-0.015738548983525`,-0.023605939425540696`,0.13039825443313297`,-0.23752049249244267`,-0.22634355205230633`,-0.22634512404840185`,0.23386686202907894`,-0.22634411000842658`,-0.22634424327446145`,-0.22634397548063817`,-0.22634476340530016`,-0.275916870336978`,-0.4093073811135043`,0.30607707671214174`,-0.22634333982432378`,-0.22634482399454792`,-0.023607241951826414`,-0.22634393998510113`,0.30607625327695287`,-0.2263437257537565`,-0.22634495565218876`,-0.4093075431129288`,-0.40930767148948033`,0.1957229063111987`,-0.4093083776940011`,-0.2263437378565933`,-0.22634358742705382`,0.1303970350207702`,0.13039712501286618`,0.23386627860983877`,-0.22634456045395301`,-0.2263440889636902`,-0.40930714897080883`,-0.3140841731420425`,-0.22634334933164718`,-0.3140858070452462`,-0.2263451329631556`,-0.22634408867853514`,-0.31408540491902975`,-0.23752129242554465`,-0.2375216121940547`,-0.23752123200231087`,-0.2375209051946406`,0.1303978392400451`,-0.03878773664523258`,-0.2375201160056148`,-0.22634420174820535`,-0.22634489235014424`,-0.2759185465327243`,-0.2857624451661728`,-0.40930742968831013`,-0.22634514139240355`,-0.22634337942654423`,-0.2263437802934471`,-0.2375203882835423`,-0.31408506316075135`,-0.22634379806033705`,0.1303966733860337`,0.331179698467808`,-0.2263450566449109`,-0.2263436435369674`,0.3427466758733828`,-0.2263442251199517`,-0.22634483759822474`,-0.22634339651533536`,-0.22634441624271276`,-0.275917329837181`,-0.22634368487271042`,0.19572297567089342`,-0.23752143303966514`,-0.22634526947775108`,-0.4093084257584694`,0.33118051897652445`,-0.31408468736745226`,-0.2263448858193749`,-0.4093067371077902`,0.318754106977618`,0.19572184609016222`,0.1303978110913416`,-0.40930736234373655`,0.34274592245297325`,-0.22634366584617516`,0.130397584542293`,-0.23752144891449714`,-0.22634418321660907`,-0.2263443553233892`,-0.023605818056111158`,-0.02360654146616244`,0.1303974166251954`,0.3905487484224197`,0.34274644879797567`,-0.023607020446032745`,-0.226344669576066`,-0.31408565417190526`,-0.023605600939628907`,0.10140116162431347`,-0.2759176349482539`,-0.226343301429677`,0.1303966562745672`,0.1957224373322585`,0.1303970974877935`,-0.023606294271356663`,-0.27591750662034037`,-0.22634450452435398`,-0.31408542814542784`,-0.3140856843925052`,-0.2375212857093211`,-0.23752010340209748`,-0.4093067472681684`,-0.22634485703853652`,0.13039705081250105`,-0.22634467004286193`,-0.27591679181917916`,-0.22634396531782777`,0.13039734790439414`,0.3187535992499312`,0.13039728832602338`,0.13039717205462314`,-0.2263437232208203`,-0.3186653572626773`,0.1303983151944869`,-0.285763727605567`,-0.22634454638398424`,0.23386755083857616`,0.1303977761641904`,-0.22634370870774384`,0.13039708679837975`,0.13039821468649204`,-0.22634370943966733`,-0.23752186135030728`,-0.22634355934644063`,0.1303969694063563`,-0.22634343744230478`,-0.2375215727801531`,-0.28576379691403925`,-0.22634493192887492`,0.23386742940341132`,-0.22634442317176287`,-0.22634349350512456`,-0.31866680696703786`,0.1957213399267721`,-0.23752007249961724`,0.13039657838063273`,-0.23752129947678954`,-0.27591749947013766`,-0.31866563289581656`,-0.23752089713364552`,-0.22634455522223118`,0.13039664775767043`,-0.4093084184861539`,0.31875431807173016`,0.19572295336977683`,-0.22634467028017707`,-0.2857631743300075`,-0.31408525771587015`,-0.23752035646021558`,-0.226344761932214`,0.19572150918045492`,0.3187549684462804`,-0.023606520949028924`,-0.28576250650017593`,0.1303976417300813`,0.3060754866101138`,0.13039743702854362`,0.13039811637589094`,-0.22634472494462315`,-0.02360612915073012`,-0.2857625077018619`,0.1957228967523609`,-0.2263445110801555`,-0.2375213436729259`,-0.02360645476994176`,-0.023605977899272986`,-0.3140844793787228`,-0.22634451667329342`,-0.22634452159236734`,-0.2263437828056509`,-0.31408549317710854`,-0.02360689147363397`,-0.2263440729312301`,-0.2857627940881799`,-0.22634335579810194`,-0.4093077604918999`,0.1957229870161334`,0.39054863811892965`,-0.40930827318207547`,-0.2263444615544493`,-0.4093074623792719`,-0.03878775695080261`,0.34274689364154853`,-0.2263448519582966`,-0.22634472195861222`,-0.22634434926024577`,-0.22634386444764357`,-0.409307043012872`,0.34274615217126014`,0.1957221049287962`,-0.22634429429133196`,0.23386746190950192`,-0.22634498366402`,-0.22634329651604448`,0.3187551355821531`,-0.2857620226691344`,-0.4093079355656154`,-0.31408402991939616`,-0.3140857333404654`,0.3060774498271136`,0.13039680878307583`,0.2338674150704096`,-0.2263451662121191`,-0.22634432419154038`,0.13039836857110904`,-0.23752128296181457`,-0.22634462230408517`,0.1957215112257656`,-0.22634365581495255`,-0.3186656381819761`,-0.22634450620107985`,-0.31866488868563586`,-0.22634446633765934`,-0.4093081481264111`,-0.40930699351070127`,-0.22634347132592048`,-0.22634347594704662`,-0.2263449205702229`,-0.40930773874742404`,-0.023606627653513304`,-0.2263433328758178`,0.34274744150325853`,-0.22634505877990327`,0.1303985287644226`,0.23386564837932863`,-0.28576202578047555`,-0.22634348324976417`,0.33117964690160306`,-0.22634462851996384`,-0.28576186445327534`,-0.22634464919216385`,-0.2263447199961576`,-0.22634394626549512`,0.15135496293098014`,0.13039773598060458`,0.13039815612901584`,-0.22634482983761614`,-0.22634362894235696`,0.3311801625005702`,-0.31408420660770964`,-0.285762458459131`,-0.4093077952035419`,-0.23752150239980643`,-0.2263433292504044`,-0.31408501089435226`,-0.40930695613609236`,-0.4093083336805522`,-0.22634347831646595`,0.3311789193801132`,-0.22634522492575548`,-0.22634406881120214`,0.19572251517446387`,-0.015737598128505136`,-0.22634509702292688`,-0.023606270849721774`,-0.2857621214568659`,0.3427468718198792`,-0.314084204964159`,-0.3186652482832429`,-0.23752120484839304`,0.13039772412107775`,-0.02360637821070069`,0.13039752024043294`,-0.02360681719756997`,-0.3186652181000538`,-0.3140847431662306`,0.19572131945883228`,-0.023606221755067148`,-0.015739007733336193`,0.13039816764765216`,-0.015738648334063347`,-0.22634445707808828`,-0.023606286585493148`,-0.4093085019049701`,-0.22634366216582466`},{-0.05569609573424547`,0.2770510224421811`,-0.5191960864460468`,0.6897874228579176`,-0.17453390248314893`,0.6897875223217793`,-0.17453372046972365`,-0.17453415864202904`,0.14372526024011648`,-0.8285296461232217`,0.2690747536549341`,0.2690746099675324`,-0.17453375997179887`,-0.5191960158994114`,0.160428897531428`,-0.17453355803792517`,-0.1745343586677469`,-0.01303022037835633`,-0.5389266411601016`,0.34565319827181573`,-0.13494419553501932`,-0.1745338477595928`,0.1437255744316518`,-0.5191967587087681`,-0.17453265185505937`,0.3456519512652228`,0.2770513674957705`,-0.17453273203970338`,0.26907414258769796`,-0.17453267113878568`,-0.17453320605364003`,-0.1745335332737223`,-0.17453273095559163`,-0.1745325111822134`,-0.17453253592277118`,0.3456529968435014`,0.14372633761373502`,0.1604293329995329`,-0.13494515401119556`,0.14372538027047255`,-0.5191955432435464`,0.34565251088064963`,0.3456529617917062`,0.3238299133474461`,0.1604292021855938`,0.16042791998839467`,-0.17453410500979066`,-0.2931979579803275`,-0.1745339865981924`,0.6897869040828264`,-0.8285281863762372`,0.14372575906376836`,0.32382944740803504`,0.14372481090567757`,0.14372519296731437`,-0.13494511982152121`,-0.17453312725530434`,-0.174532768654243`,-0.5389252398940659`,0.3456531008950518`,0.3456529563207792`,0.1437248803032865`,-0.1745343494704145`,0.26907327793300667`,0.34565324319495255`,-0.17453347057306295`,0.14372479881372904`,-0.8285283718446219`,0.26907421580159824`,-0.17453436764258048`,-0.17453260067390614`,0.27705221459700885`,-0.8285285091044083`,-0.17453401013643144`,0.16042818370130765`,0.27705289092226454`,-0.1745341938942628`,-0.17453403046165503`,0.1437252184930962`,-0.8285296463345903`,0.32383058758070116`,-0.17453425232498468`,0.14372549039321503`,-0.17453432349397627`,0.27705186603459475`,-0.8285285329687206`,-0.17453377238214882`,0.6897869705416505`,0.1604292785718084`,0.34565230910345807`,-0.17453394700789598`,-0.17453381556994438`,-0.013030414658199277`,-0.174532927150424`,-0.17453349765212461`,0.6897876591838642`,0.6897872912454315`,0.6897879083369761`,0.3456526090483223`,-0.1745344368656093`,0.6897874216010628`,-0.5389253351644818`,-0.17453392660510722`,-0.17453261007090426`,-0.17453296410981978`,-0.17453291923617328`,0.26907407679243467`,0.27705271181820745`,0.269073693782375`,-0.30013341611280664`,0.3456528304042`,-0.055696126111534024`,0.6897875893788032`,-0.29319745347132303`,0.26907412384132307`,0.1437265520657425`,0.6897876383874366`,-0.1745342129386033`,-0.1745339285722933`,0.1437260954977334`,-0.055695317849176015`,-0.1745330882146099`,-0.17453423199951473`,-0.3001334895062617`,-0.17453358598148472`,0.26907335567793567`,0.14372582099330147`,-0.8285285789234325`,-0.17453382203478468`,0.1437246911772098`,-0.13494508285345136`,-0.17453396765225457`,0.14372537005719047`,0.6897866418640357`,-0.3001327141805047`,0.26907379630420025`,-0.5389258953197732`,0.6897877630416186`,-0.17453392710916946`,-0.17453371223572423`,0.6897876949772193`,0.1437261827664799`,-0.17453261587085148`,0.6897862879717491`,-0.1745344320466932`,0.6897880633899207`,-0.17453289233598812`,0.34565238667644027`,0.6897864117659734`,0.345653237410623`,-0.17453268423438836`,-0.17453283164743627`,-0.17453422282365846`,-0.13494503243574735`,0.16042874923786063`,0.6897876988065584`,-0.17453398950763083`,-0.3001338268180286`,0.3238295453522676`,-0.300132811265281`,0.2690742685748245`,-0.17453362719180748`,-0.17453253594966472`,-0.17453405870633126`,-0.17453349194781967`,-0.8285296753193433`,0.14372641920896168`,0.6897876387159287`,-0.17453343076353314`,0.3456529805265984`,-0.13494476025086816`,-0.013028938148655847`,0.2770515518199879`,0.14372642836327404`,0.6897867238984341`,-0.1745338251319637`,-0.055694435920734024`,-0.013029181159439438`,0.6897866408973875`,-0.17453318505235044`,-0.8285285375451622`,-0.17453369614491304`,0.2705600872869094`,-0.1349452500687836`,-0.17453285035013644`,-0.013028636371360777`,-0.1745329809275928`,-0.013029382856997554`,-0.8285285130947019`,0.6897866151320778`,0.26907458085949554`,0.323829525859175`,-0.1349450577688925`,-0.5191968005092511`,-0.8285299013584848`,-0.013030178533497245`,-0.17453332727110124`,-0.013029861162624806`,-0.519195649699354`,0.3238305091182315`,-0.8285286488228006`,-0.17453372847236762`,-0.17453258205548378`,0.3238303432148045`,-0.0556942480113741`,0.3456524828215149`,0.3456519931815465`,-0.17453414730935582`,-0.17453280726854778`,0.14372653239844174`,0.16042760454032334`,0.6897876839377568`,0.14372525544692208`,-0.17453420312570844`,0.14372619332163944`,0.3456527614546071`,-0.17453427467052954`,-0.17453428800366458`,0.323829366969535`,0.6897875333356478`,-0.013030481814520227`,0.6897862773903762`,-0.17453260676035365`,-0.17453338366974688`,0.14372522134308785`,-0.5389256867704921`,-0.1745343038528447`,0.2770528730887501`,-0.5191963088406435`,0.6897879450672815`,-0.17453379288787027`,-0.17453416900027313`,-0.8285297124980612`,-0.5389256105224294`,-0.5389257213817825`,-0.5191954744571508`,0.6897881548653746`,0.14372499105593753`,0.27705171807850987`,0.6897862184412753`,-0.1745341383930809`,-0.17453358970232372`,-0.17453420157425167`,0.6897882051244916`,0.6897878877283111`,0.3456516980101367`,0.6897881186189438`,-0.17453319435943654`,0.3456536069524727`,0.2770516368421791`,-0.17453387022419664`,-0.17453416744771272`,0.19833321672125517`,0.14372530197781153`,-0.1745334453667442`,0.6897872442834869`,-0.13494589897217443`,0.34565253178542726`,0.34565222373818355`,0.14372565200227203`,-0.17453375100123913`,-0.13494482789248757`,-0.1745333361468091`,-0.17453421854227125`,-0.5191968733495215`,-0.17453364056099605`,-0.1745326087237023`,0.20523294724894806`,-0.13494438615397517`,-0.17453377806239917`,0.14372521765335733`,-0.13494488148911668`,-0.17453366618564128`,-0.17453305188355997`,-0.1745341521057699`,0.16042814159182361`,-0.1745328520200254`,-0.2931993262776511`,0.2770529181448078`,-0.1349450616600509`,0.14372612024621867`,-0.174532487846152`,0.3456531220946128`,0.6897866732622623`,-0.1745336090409306`,0.6897878009641086`,-0.17453426574107508`,0.2690747316040371`,0.2690736059424647`,-0.1745326116825908`,0.16042812740796783`,-0.17453314211372672`,0.1437250706075712`,-0.1745344665787782`,-0.5389256733160175`,0.27705294521883633`,-0.1745334042622002`,0.6897877948211845`,-0.1349439805924771`,-0.17453407547767466`,-0.1745327550763721`,0.32383076187976334`,-0.17453332043760084`,-0.013030110021739125`,-0.17453295186416712`,-0.8285296829434755`,-0.17453315221336413`,-0.17453320724376317`,0.2690734522654363`,-0.17453287283226834`,0.14372601491339734`,0.2690733294556649`,-0.5191952841614055`,0.6897867347740907`,-0.8285284098832049`,-0.5389255871742346`,0.20523208522659137`,-0.17453254621351055`,0.14372664844693522`,0.3238297726192945`,-0.1745327299616519`,0.32382991795332267`,-0.293198585906199`,-0.17453338649291886`,0.14372632911202596`,-0.6575492643854137`,-0.17453283675926673`,-0.174533341711212`,-0.17453311264811128`,-0.17453427690020976`,-0.1745332589591762`,0.3238295029711123`,0.14372521795217783`,0.3238299161398383`,0.3456524492306513`,0.198333940665742`,-0.174533777475926`,-0.1745329882437469`,0.1437266125816096`,0.32383040777298`,-0.13494432977572168`,0.14372496025952275`,-0.013030176987359705`,-0.3001326679405938`,0.14372657000310465`,-0.1745327385004044`,0.14372528060240855`,-0.17453272310139994`,0.14372533606589108`,0.2705594010404682`,0.3456534278732878`,0.2690742933581272`,-0.17453381800847287`,-0.5389248474942618`,0.6897869132777774`,-0.8285295429036851`,-0.13494396572658532`,-0.013029946700940764`,0.2690739501185169`,-0.13494429361551047`,-0.17453372428432232`,-0.055695505892035646`,0.19833369884046398`,0.2770521841939976`,0.6897877652688649`,0.26907458463008843`,-0.1745336849444384`,-0.17453299940283454`,-0.5389258880825538`,-0.17453345340218973`,-0.1745343841778578`,-0.17453327200141494`,-0.17453314958238916`,-0.29319888103373903`,0.1437261105409452`,-0.30013318420907054`,-0.17453362153327603`,-0.17453267379771592`,0.27705187955739724`,-0.17453318761024983`,-0.30013324941012715`,-0.17453265629029968`,-0.17453429999534145`,0.1437263323753956`,0.14372605980724656`,-0.013029877568762279`,0.1437260159096148`,-0.17453379669546482`,-0.1745327068391246`,0.6897870940696376`,0.6897879239570774`,-0.5389251939705813`,-0.17453383625489985`,-0.17453362857379578`,0.14372621152706622`,-0.8285289273175444`,-0.1745325406340062`,-0.8285296630473135`,-0.17453444543584115`,-0.17453430153374752`,-0.8285282812958872`,0.2690746055883333`,0.2690742486724109`,0.26907402623956045`,0.2690748608974539`,0.6897871235000245`,-0.657549489762127`,0.2690750232040522`,-0.17453352959972016`,-0.17453318283019156`,-0.29319929523520744`,0.3456518971464458`,0.14372628304276375`,-0.1745334421597998`,-0.1745332096473161`,-0.1745338804411122`,0.26907402087996213`,-0.8285300794061786`,-0.17453446077682874`,0.6897864614107503`,-0.13494396056639074`,-0.17453292634177184`,-0.17453295418636663`,0.16042883788177248`,-0.17453353915857928`,-0.17453419345166674`,-0.17453315671788205`,-0.17453342342575867`,-0.29319917325382183`,-0.17453436124829028`,-0.01302872349790008`,0.26907499992518036`,-0.17453309468249503`,0.14372580725708778`,-0.13494525491623516`,-0.8285296787480305`,-0.1745328984219805`,0.14372528203970641`,-0.5191964232086073`,-0.01302882530296856`,0.6897868376825502`,0.14372543231916532`,0.16042869103519852`,-0.1745325589028589`,0.6897868608259405`,0.2690743654320483`,-0.17453301868906756`,-0.1745332309478852`,0.2770519712545007`,0.2770523756422999`,0.6897872718782069`,0.20523234319499692`,0.16042953447569636`,0.277052266602756`,-0.17453336638514758`,-0.8285289127366732`,0.2770512969481207`,0.2705600676889317`,-0.2931989108007255`,-0.17453257852006515`,0.6897868920732577`,-0.013030250102919487`,0.6897865331271844`,0.27705295322471757`,-0.29319915938753505`,-0.1745338419309846`,-0.8285285971569373`,-0.8285281925532398`,0.2690749891593097`,0.2690746038400666`,0.14372475928527434`,-0.17453351643420625`,0.689788071946102`,-0.17453385486137976`,-0.293197496654532`,-0.17453322726412496`,0.6897864345681234`,-0.5191958373180832`,0.689787764245514`,0.6897863126695873`,-0.17453254017419897`,0.3238296402117795`,0.6897866805104609`,0.34565324842949313`,-0.17453321525181806`,-0.5389247843333893`,0.6897867540601319`,-0.17453396113165434`,0.6897865677830487`,0.6897864264879399`,-0.17453322665626256`,0.26907383929395234`,-0.17453342762475826`,0.6897863716627954`,-0.17453360123540576`,0.2690748499875537`,0.34565248822372774`,-0.17453365145797678`,-0.5389265092883878`,-0.17453303836453404`,-0.17453315191479907`,0.32382985985573365`,-0.013029182639408566`,0.26907488702679766`,0.6897872859230273`,0.2690743039881664`,-0.29319822903719867`,0.3238296229460283`,0.2690733758697108`,-0.17453321896020113`,0.6897869438016658`,0.14372483313171114`,-0.5191968604323066`,-0.013028936589863262`,-0.1745325671867727`,0.34565248650500546`,-0.8285290306641004`,0.26907437240272447`,-0.17453278991494114`,-0.013029730685240822`,-0.5191961161296893`,0.27705234106684684`,0.34565357610705233`,0.6897863261500209`,-0.30013350213350376`,0.6897864111045405`,0.6897877093635532`,-0.17453395140556863`,0.2770517774816358`,0.345653330129434`,-0.013030462031193525`,-0.17453267973797654`,0.2690738584269544`,0.2770513734792509`,0.27705101496979095`,-0.8285291396409035`,-0.1745331175890196`,-0.17453302202914994`,-0.1745326751524957`,-0.8285288446710679`,0.2770525899368799`,-0.17453384933039257`,0.3456520645301139`,-0.17453434044021676`,0.14372487931749067`,-0.013030169608001844`,0.20523280253163684`,0.14372554819623098`,-0.1745338108541351`,0.14372471271957132`,-0.6575490205688865`,0.16042775904324927`,-0.17453387838041376`,-0.1745344397382569`,-0.1745325981916089`,-0.17453387185669744`,0.1437258539545303`,0.16042866814105916`,-0.013030357551900061`,-0.17453291770660748`,-0.538926342820363`,-0.17453440249882798`,-0.17453266161125708`,-0.5191960875373227`,0.3456521351097305`,0.1437259638973178`,-0.8285283574997637`,-0.8285285292903611`,-0.3001335392775083`,0.6897872680557072`,-0.5389257940419442`,-0.17453329763382452`,-0.1745343418001977`,0.689787913123515`,0.2690738564249801`,-0.17453446972675446`,-0.013029061498681622`,-0.1745341744291555`,0.3238297018310271`,-0.17453306096329596`,0.3238304402986537`,-0.17453269453073594`,0.14372547581383494`,0.14372515854594523`,-0.17453288288368568`,-0.1745326981831939`,-0.1745330363883192`,0.1437258195171628`,0.2770514855788606`,-0.17453371893113362`,0.16042822658238837`,-0.17453421315717801`,0.6897871150316354`,-0.5389265913878742`,0.34565210850652384`,-0.17453303039166296`,-0.13494393487943285`,-0.17453252953957116`,0.34565269325898007`,-0.17453324082243665`,-0.17453289765807725`,-0.1745328232439506`,-0.05569609545561574`,0.6897875271328914`,0.6897876916821296`,-0.174534478061483`,-0.17453276610686663`,-0.13494460874361275`,-0.8285283922361129`,0.3456522735666899`,0.1437248366704653`,0.2690744328937285`,-0.1745340609109552`,-0.8285288498775853`,0.14372539756361077`,0.14372513959856686`,-0.17453353204987535`,-0.1349448149539059`,-0.17453448092134108`,-0.1745332175854604`,-0.013028617388972258`,0.19833407904289285`,-0.1745331956864658`,0.27705236742960343`,0.34565292239329`,0.16042794029135937`,-0.8285299013805633`,0.3238297817497337`,0.26907506931069824`,0.6897881186953684`,0.27705158774485394`,0.6897871359940024`,0.27705267103144077`,0.32382958123685035`,-0.8285294523337301`,-0.013030049657017269`,0.2770511761316014`,0.1983331120400548`,0.6897871577457605`,0.19833391171508064`,-0.17453414710930118`,0.2770522292306098`,0.14372572424817917`,-0.17453380040578703`},{-0.3686857959299465`,0.383141205378331`,0.05159614499421018`,0.8380772481073228`,0.1673664298310366`,0.8380782584731729`,0.16736615005952024`,0.16736621650466882`,0.328374336610271`,-0.010498408277816796`,-0.41734364340364566`,-0.41734401335540244`,0.16736625061773683`,0.051596644517006726`,0.19669718038885736`,0.16736563888887726`,0.16736602584348473`,0.1585970468412861`,0.41955637089824965`,-1.0427799138961875`,0.2784624073991376`,0.16736640206799175`,0.32837300915399104`,0.05159524923934184`,0.16736660807280473`,-1.0427813477241157`,0.3831421593242723`,0.1673656214367987`,-0.4173435951557384`,0.1673657912552794`,0.16736534795205824`,0.16736604162627375`,0.167365179876085`,0.167367001398608`,0.16736644826497105`,-1.0427800143454165`,0.32837345558966563`,0.19669690976011056`,0.2784634664131315`,0.3283743353075764`,0.051596687776979525`,-1.042780449608009`,-1.0427799664171877`,-0.0836475199473822`,0.19669570887688162`,0.19669665951874127`,0.16736534657235935`,-0.35369437312204427`,0.1673661876862838`,0.8380789183062779`,-0.010499281333704372`,0.3283733020218882`,-0.08364902630992369`,0.32837447906744943`,0.3283726124056372`,0.27846271520936183`,0.16736666853711193`,0.16736555179269`,0.4195556131631784`,-1.0427809810170507`,-1.0427796850250521`,0.328373492836785`,0.16736558226563586`,-0.41734301995259465`,-1.0427809501166299`,0.16736671996719502`,0.32837402737069765`,-0.010498881175366997`,-0.4173437651900755`,0.16736540494096028`,0.16736648997081283`,0.38314294583142866`,-0.010500136953184365`,0.16736530067456495`,0.1966969627574619`,0.38314102815044465`,0.16736594235258292`,0.1673659939902248`,0.328374342080031`,-0.010499205646249178`,-0.0836481742077636`,0.16736557907565072`,0.3283741046875099`,0.1673654086934163`,0.38314208254477755`,-0.01049931249997916`,0.16736596948780325`,0.8380781980602646`,0.19669684696669007`,-1.0427796439066528`,0.16736682916030973`,0.16736640254333549`,0.15859813410629714`,0.167365770060857`,0.16736701513486302`,0.8380790748357582`,0.8380774318532115`,0.8380788889824147`,-1.0427799006808802`,0.1673665104209671`,0.838078643061611`,0.41955566705169967`,0.16736515611428154`,0.16736627851101965`,0.16736609941509487`,0.16736674538517415`,-0.4173434259904002`,0.38314255583304035`,-0.4173436577005571`,-0.18519952935370984`,-1.0427804241304572`,-0.3686851541988188`,0.8380785546829356`,-0.35369382167994046`,-0.4173443048579141`,0.32837375320667744`,0.8380786454692979`,0.16736683505117386`,0.16736691731022252`,0.32837372757444766`,-0.36868685600593337`,0.16736685369558885`,0.16736550870150196`,-0.18519762586036426`,0.16736622251012723`,-0.417343243877748`,0.3283743510513366`,-0.010498999416186058`,0.16736566622031893`,0.3283744182178104`,0.2784619412348714`,0.1673655739879032`,0.3283734049975665`,0.8380785167944195`,-0.18519839685677658`,-0.4173438448668668`,0.4195555514615104`,0.8380790460025724`,0.16736563817988312`,0.16736705798331697`,0.8380789970093525`,0.32837395638221667`,0.16736699697891036`,0.8380785805252638`,0.16736643200294135`,0.8380784579339945`,0.16736637170822932`,-1.0427801274735393`,0.8380789480550773`,-1.0427803110332998`,0.1673662268253347`,0.16736632082142236`,0.1673658537893055`,0.2784627308855156`,0.19669732526077127`,0.8380789523293121`,0.16736665085429836`,-0.18519798752871197`,-0.08364836916653051`,-0.18519811285053167`,-0.41734387235815423`,0.16736509943987285`,0.16736706814344998`,0.16736566788927978`,0.16736702366264378`,-0.010499768885516892`,0.328373057893464`,0.8380790159598475`,0.16736687316888907`,-1.0427801753300787`,0.27846343884098745`,0.15859703792616928`,0.3831411857770428`,0.32837288821304195`,0.8380771143774399`,0.1673651449518193`,-0.36868501512161556`,0.1585970858642988`,0.8380774649466278`,0.16736638252862462`,-0.010499160474937992`,0.16736700699344767`,-0.3023502353924761`,0.2784618767320748`,0.1673658208110295`,0.15859816150561004`,0.16736604146473763`,0.1585979371077246`,-0.010500001477347828`,0.8380772179790632`,-0.4173436264384314`,-0.08364810031867088`,0.27846188696705443`,0.05159550351638917`,-0.010499035407386899`,0.15859839801863307`,0.16736650134246706`,0.158598290710491`,0.05159507737375285`,-0.08364745888807444`,-0.010499540288091656`,0.1673664715686906`,0.1673664625775509`,-0.08364917114536709`,-0.3686867072438002`,-1.0427802328549756`,-1.0427794798716103`,0.16736571310565984`,0.1673658999449575`,0.3283729783409003`,0.1966965427673381`,0.8380776843853897`,0.32837454631892954`,0.16736689888422587`,0.3283726941377467`,-1.0427806443681462`,0.1673657419660127`,0.16736542744106522`,-0.08364785219148216`,0.8380788301035961`,0.15859854743738905`,0.8380775819388177`,0.16736609126347407`,0.16736568879455824`,0.328372853565922`,0.41955590032742374`,0.1673652165133089`,0.38314218254842386`,0.051595120046174586`,0.8380780202939748`,0.1673660244743429`,0.16736678688442283`,-0.010499015179031389`,0.4195565389580034`,0.4195570762665506`,0.051596269900086235`,0.838078461171382`,0.3283740545673612`,0.38314261567259283`,0.8380790052268672`,0.16736598204484354`,0.16736560950742835`,0.16736523594009717`,0.838078349644315`,0.838078882205022`,-1.04278013608406`,0.8380773690692953`,0.1673656956832928`,-1.0427805353807043`,0.38314279398208545`,0.16736528349766458`,0.16736657724968082`,0.585757746122106`,0.32837360854889835`,0.1673658184794438`,0.8380778810118439`,0.2784618679748562`,-1.0427804228320803`,-1.042781072239699`,0.3283731683636348`,0.16736571625719296`,0.27846343492661335`,0.16736601208947832`,0.16736621018802775`,0.05159566633759048`,0.16736589889315703`,0.16736564943642696`,-0.0778778961529782`,0.2784634888328275`,0.16736587284279225`,0.3283746071893969`,0.2784622853412993`,0.1673669043546356`,0.1673669273119516`,0.16736610237565155`,0.19669699862106016`,0.16736607700481138`,-0.35369377619833287`,0.38314168844692614`,0.27846258804612917`,0.328374261300929`,0.16736550916461695`,-1.0427801478791594`,0.8380785157459054`,0.16736665581190993`,0.8380783179476385`,0.16736586930264785`,-0.4173442849863297`,-0.4173432649106031`,0.16736515650201253`,0.19669648302364787`,0.1673654790838597`,0.32837362314385415`,0.16736705567128854`,0.4195564917051339`,0.38314123759467633`,0.16736621458551415`,0.8380786043600669`,0.2784619899741197`,0.16736653006930374`,0.16736568979020433`,-0.0836481514596742`,0.16736675329303907`,0.15859740593083144`,0.16736657409286154`,-0.010499464042621483`,0.16736536712154138`,0.16736614395405253`,-0.4173439368712649`,0.1673664368218813`,0.3283730891697988`,-0.41734456816894205`,0.05159604805407074`,0.8380783355827772`,-0.01049943352996317`,0.4195571462008266`,-0.0778779346531824`,0.1673660313725147`,0.328373818509669`,-0.08364841815350192`,0.167365660997493`,-0.08364770993212436`,-0.3536942013220894`,0.16736683964697663`,0.3283738516952116`,-0.18105574438527086`,0.16736621505263344`,0.16736536631506854`,0.16736701194172224`,0.16736557813428266`,0.16736634275193601`,-0.08364909929110982`,0.3283745159028349`,-0.08364871707696492`,-1.0427808589488619`,0.5857577617146706`,0.16736515629552606`,0.16736567769267272`,0.3283741428931713`,-0.08364800841375254`,0.27846235558770527`,0.3283731027873236`,0.15859814678153736`,-0.18519870513445622`,0.3283743479135479`,0.16736665868748427`,0.32837455131133086`,0.1673665128580657`,0.32837447391712304`,-0.3023490396597667`,-1.0427801641338856`,-0.4173439138079176`,0.16736620032346222`,0.4195557738481871`,0.8380777089249444`,-0.01049983918585378`,0.2784616471481879`,0.1585977896017698`,-0.41734390284326633`,0.27846299846333594`,0.16736588190422985`,-0.36868631367186294`,0.5857565365651274`,0.3831424402447437`,0.8380772639513998`,-0.4173439299762944`,0.16736656067816208`,0.16736588300429245`,0.4195563003429934`,0.16736586408989543`,0.16736589390197615`,0.1673656320351012`,0.16736668995217538`,-0.35369429712357564`,0.32837397891717823`,-0.18519908733659934`,0.16736551700767657`,0.1673668202407717`,0.38314223010853693`,0.1673657536278176`,-0.18519906621128235`,0.16736604986303055`,0.16736670869641368`,0.32837307812132355`,0.32837441559958613`,0.15859841545674638`,0.32837262394832833`,0.16736586169529066`,0.16736647025807097`,0.8380775657959566`,0.8380778266743539`,0.4195557999880997`,0.16736688116374132`,0.1673660481080243`,0.32837363691543`,-0.01049977163937022`,0.16736565053884084`,-0.010498559206056992`,0.16736547825916037`,0.1673664398967652`,-0.010498855007543863`,-0.4173440613438411`,-0.41734441728963234`,-0.4173430997630405`,-0.4173429612657164`,0.8380788061747869`,-0.18105631208400105`,-0.41734416770198807`,0.16736648916781538`,0.16736529328788624`,-0.35369353050779784`,-1.0427806522917722`,0.32837328057180476`,0.1673663302572644`,0.1673656662294961`,0.16736612033002854`,-0.4173443714243262`,-0.010500175609249256`,0.16736553093607387`,0.8380780606832134`,0.27846272944267497`,0.16736658949243086`,0.16736623466621506`,0.19669658387077404`,0.1673666245134184`,0.16736662744897515`,0.16736704638568026`,0.16736532678382676`,-0.35369509896113005`,0.16736601496827536`,0.15859833687070993`,-0.4173435345930484`,0.16736623241004167`,0.3283742963200616`,0.2784621822215024`,-0.010500177762069528`,0.16736674526853768`,0.32837431125018834`,0.051596147850960644`,0.15859731864526644`,0.8380786466573116`,0.32837336793545735`,0.19669595064565268`,0.1673652157148865`,0.8380776170938581`,-0.41734321730456697`,0.16736642009873953`,0.1673664579896196`,0.38314241134953686`,0.38314295303959617`,0.838077989509519`,-0.07787760680048919`,0.19669609246372105`,0.3831421684983217`,0.16736642789451883`,-0.010498914588022427`,0.3831413002186769`,-0.3023496814900356`,-0.3536946802785584`,0.1673663928226741`,0.83807744027156`,0.15859782088853286`,0.838077927349236`,0.3831429401667481`,-0.3536939962311255`,0.16736649503595497`,-0.010499247086778508`,-0.010499787046658422`,-0.41734419902812625`,-0.41734302469393025`,0.328373474173987`,0.16736529737057437`,0.8380778082726711`,0.16736656225644653`,-0.35369465745625567`,0.16736512895345915`,0.838078836062445`,0.05159682574699072`,0.8380780307098465`,0.8380771878775367`,0.1673651767062661`,-0.08364902353617973`,0.8380776459091965`,-1.0427802125234524`,0.1673658011649132`,0.4195564519182513`,0.8380783083546646`,0.16736550187056262`,0.8380778354739704`,0.8380785963599224`,0.16736672780268916`,-0.41734462263418337`,0.16736660072216983`,0.8380770852643891`,0.16736550144347584`,-0.4173440596518723`,-1.0427804590088836`,0.1673663777869661`,0.41955676472891984`,0.16736654294508874`,0.16736604338680075`,-0.08364920042186057`,0.15859708142669918`,-0.417343360029774`,0.8380782313560768`,-0.41734480074314023`,-0.35369520021500794`,-0.0836481252311566`,-0.4173437177911252`,0.1673663775827212`,0.8380778259478618`,0.32837389121553323`,0.05159674140959672`,0.1585974596271982`,0.1673670366611013`,-1.0427805342936578`,-0.010499614594607392`,-0.4173448571245259`,0.16736658812083147`,0.15859673159877385`,0.051596331238539565`,0.38314215640866384`,-1.042779741835923`,0.8380786155558384`,-0.18519881849862652`,0.8380784572249954`,0.8380785958823265`,0.16736561352108587`,0.3831410108813623`,-1.0427808996058847`,0.1585981801436698`,0.16736621075885239`,-0.41734463787446113`,0.38314117552624516`,0.38314144505278014`,-0.010499594498454022`,0.1673668289594749`,0.16736564209663465`,0.16736598558532056`,-0.010498310521722296`,0.38314245889698717`,0.16736596858703484`,-1.0427800389865964`,0.16736683758969043`,0.32837274653685045`,0.15859805791141532`,-0.0778776143895642`,0.3283739889390775`,0.16736627098225365`,0.32837310808092324`,-0.18105728200505436`,0.1966974345330762`,0.16736623499420555`,0.16736598570403521`,0.1673660687971985`,0.16736594049901662`,0.32837317207587713`,0.19669669398941703`,0.15859852521481174`,0.16736558046225225`,0.41955625589716977`,0.16736555462006053`,0.1673657501816667`,0.05159565087219469`,-1.0427794749812496`,0.3283745263938133`,-0.01049938307183656`,-0.010499728294117182`,-0.18519840663852305`,0.8380772560296771`,0.41955652119451625`,0.16736550247742776`,0.1673663613067093`,0.8380778800272762`,-0.41734350090063244`,0.16736559060708467`,0.1585983445818849`,0.16736542204606472`,-0.08364884367124162`,0.1673663844171989`,-0.08364902056754295`,0.1673668724901982`,0.3283739403508927`,0.32837325980535464`,0.1673670543155913`,0.16736526197304136`,0.16736540840053674`,0.3283738981546077`,0.3831417741515589`,0.1673667991069574`,0.19669607242722145`,0.16736621857262232`,0.8380774166031555`,0.41955529064926417`,-1.042779818790125`,0.16736524777690184`,0.2784623841998516`,0.16736662535614896`,-1.0427805037183382`,0.1673662501012163`,0.1673668640921818`,0.1673659900666804`,-0.36868656398642113`,0.8380782046797539`,0.8380772889767859`,0.16736585134244605`,0.16736622849321284`,0.2784625183690305`,-0.010500211054800401`,-1.0427806095323875`,0.32837278632440936`,-0.41734440695539404`,0.1673657147412424`,-0.010499331030940008`,0.328373101537172`,0.3283740036684986`,0.16736631432061974`,0.2784629134641125`,0.16736515215710515`,0.16736565445235882`,0.15859702491697836`,0.5857579728920833`,0.16736565976148107`,0.3831422259478321`,-1.042780702525562`,0.19669679873015422`,-0.010499273235626405`,-0.08364820445937754`,-0.41734309124809144`,0.8380778557127389`,0.3831410303571354`,0.8380774404318289`,0.38314264148513055`,-0.08364869354896724`,-0.010499551916214682`,0.15859675529024572`,0.3831419281307752`,0.585757445574582`,0.8380778872836594`,0.5857570341325872`,0.16736698613035092`,0.3831424769384426`,0.32837264680777556`,0.16736534930450217`},{-0.1380349545847599`,0.21273507634686162`,-0.5928140585135173`,-0.35405081133068045`,0.40919653355269375`,-0.35405077110638505`,0.4091967568500601`,0.4091968607128826`,0.3948715334208208`,0.5293677887597111`,-0.08015062778058113`,-0.08015155459003954`,0.4091966349021066`,-0.5928158378389785`,0.05070104377968043`,0.40919564102252703`,0.40919590115384846`,0.04947087332317722`,-0.7740645078140279`,0.21504974379220265`,0.07486511059189584`,0.4091955831399124`,0.394871367638094`,-0.5928153638736017`,0.40919682508886424`,0.2150499768505308`,0.21273417833206257`,0.4091969031892591`,-0.08015091913777779`,0.4091967590835226`,0.4091959671429188`,0.40919660137481567`,0.4091952632225935`,0.4091963521233321`,0.40919588779737137`,0.21504863301654442`,0.39487113703677884`,0.05069964237141097`,0.0748643473472556`,0.39487046571076884`,-0.5928158276484236`,0.21504958262361148`,0.21504927068717472`,0.15590746591846677`,0.05070050630173613`,0.05070036937941252`,0.4091960122816534`,0.5458050876922252`,0.4091952387445216`,-0.35405218676127986`,0.5293677658776037`,0.394870364216933`,0.15590695541593333`,0.3948708951715309`,0.3948706006951359`,0.0748636531109391`,0.40919663722358113`,0.40919554114884066`,-0.7740642912425758`,0.21504988444878123`,0.2150486334932009`,0.3948709571278284`,0.409196690453345`,-0.08015091889562448`,0.21504823898629044`,0.4091963619865713`,0.3948713630677428`,0.5293676348222343`,-0.08015232079580087`,0.40919667732175347`,0.40919690815481946`,0.21273353786326954`,0.5293686013930485`,0.4091967545127781`,0.050700747704856844`,0.2127342960424306`,0.40919582896545564`,0.4091965330293381`,0.3948705502805431`,0.5293689302483369`,0.1559064333321378`,0.40919606533544295`,0.39487098653678504`,0.40919627677960285`,0.21273408154801748`,0.5293677612698138`,0.4091962575744455`,-0.354051992250772`,0.05070047876141347`,0.2150481262111085`,0.40919523364617233`,0.40919688721379227`,0.04946950954270181`,0.4091951639962484`,0.40919585082029886`,-0.3540523295761306`,-0.35405093929947606`,-0.3540517849726747`,0.21504891992105304`,0.4091962332199762`,-0.35405047952427654`,-0.774064949908054`,0.40919644019175255`,0.40919551455936287`,0.40919697031524366`,0.40919564851613455`,-0.08015219789407341`,0.21273460313361545`,-0.0801513711206291`,0.21563422722761025`,0.2150491075069282`,-0.1380351178817499`,-0.35405169512882967`,0.5458065585308225`,-0.08015047559681947`,0.3948696476819295`,-0.354052004845355`,0.4091960774713097`,0.4091950412852024`,0.3948714200947831`,-0.13803438717442762`,0.4091961363581826`,0.40919698930500464`,0.21563429569555936`,0.40919600790477356`,-0.08015222175800746`,0.3948711421045091`,0.5293678063856494`,0.40919696656886784`,0.3948703554772332`,0.07486451288532132`,0.4091960645492654`,0.39487012519627024`,-0.35405105374940965`,0.2156351324493701`,-0.08015204856315214`,-0.774064372408653`,-0.354052022966123`,0.4091950783345546`,0.4091961732323404`,-0.35405112181821125`,0.39486998667374174`,0.40919530559549167`,-0.3540518966885107`,0.4091955266999953`,-0.3540522145511553`,0.4091954970332846`,0.21504941775656836`,-0.3540521176407202`,0.21504865705298706`,0.4091952921315787`,0.4091955312670026`,0.4091959845105849`,0.07486407209374844`,0.050699361978291`,-0.3540506659944899`,0.40919620041640226`,0.21563505183228468`,0.15590593922825857`,0.2156347476768783`,-0.08015062567359853`,0.4091968217985457`,0.409195510177994`,0.4091955564803056`,0.40919663052523514`,0.5293689127722787`,0.39487026295363115`,-0.3540518953814082`,0.40919632720323434`,0.21504826192499485`,0.07486347488152803`,0.04947063845649631`,0.21273358668163214`,0.39487094668977923`,-0.3540517300152269`,0.40919685954058294`,-0.13803354522372582`,0.04947069163894978`,-0.3540515023507174`,0.4091955882431465`,0.5293680804496899`,0.40919677596949616`,-0.844041979322765`,0.0748648310624456`,0.40919608066683966`,0.04947126039883653`,0.40919632928844185`,0.049471111641707276`,0.5293686217758595`,-0.3540518378573462`,-0.0801505032565351`,0.15590721592731988`,0.07486363453451012`,-0.5928150409907762`,0.5293671095878533`,0.04946994158193396`,0.40919536663600287`,0.04947025043882682`,-0.5928141572182605`,0.15590626092224602`,0.5293689369644217`,0.4091951160728588`,0.4091969071526937`,0.1559067593961412`,-0.13803507398121645`,0.21504949484522262`,0.2150491694640367`,0.40919610293956227`,0.4091967003929295`,0.39486961773705603`,0.050699968785773306`,-0.3540520132499871`,0.3948696271403232`,0.40919558517550053`,0.394871051645195`,0.2150498120699605`,0.40919569054440275`,0.4091958344797557`,0.15590691009356145`,-0.35405195748992296`,0.0494697483464648`,-0.3540518879783193`,0.409195707293988`,0.4091961454590709`,0.39487000550776014`,-0.7740660566932741`,0.40919535539501906`,0.21273500676382096`,-0.5928156956819076`,-0.3540521680782406`,0.40919508425952467`,0.4091953331018082`,0.5293688701661202`,-0.7740653427012989`,-0.774065500016527`,-0.5928152819960788`,-0.3540512423890215`,0.39487150367266866`,0.21273544521602214`,-0.3540523381240712`,0.409195890722821`,0.40919591527201565`,0.4091957619007589`,-0.35405074861065283`,-0.3540519957679537`,0.21504816006196234`,-0.3540524683878383`,0.4091951515178704`,0.21504982380168086`,0.21273452773381654`,0.4091957974790302`,0.4091952978048388`,-0.296839758394048`,0.39487138731174026`,0.4091963205452796`,-0.35405190122867075`,0.07486368915618535`,0.2150484137619485`,0.2150499985123443`,0.3948697595879241`,0.4091959467760648`,0.07486477875343137`,0.40919641748989866`,0.4091956973512401`,-0.5928155586852557`,0.40919624587534803`,0.4091966611180223`,0.23527818000406675`,0.07486319053932124`,0.40919604867855597`,0.394869847796795`,0.07486478959699737`,0.4091964704042837`,0.40919558020021557`,0.4091965869771044`,0.05070104617055973`,0.40919669676729`,0.5458068476349743`,0.21273378685960784`,0.07486430392765336`,0.3948711731004151`,0.40919619048286543`,0.21504953674560046`,-0.3540522899085423`,0.40919638827120824`,-0.3540508232495313`,0.40919582173838875`,-0.08015187335439479`,-0.08015152260648553`,0.40919620420442726`,0.0507001982976958`,0.40919576778787625`,0.3948706949936427`,0.40919689174840185`,-0.7740659229579816`,0.21273381688100296`,0.4091959974235333`,-0.3540514587766629`,0.07486383165187847`,0.40919530748043775`,0.40919534448399775`,0.15590780744307647`,0.40919641743799384`,0.04947100542250102`,0.4091954174981959`,0.5293672553069428`,0.4091963137442237`,0.40919657231496925`,-0.08015062558502223`,0.4091960635670823`,0.39487096854326137`,-0.08015093046756754`,-0.5928144205122621`,-0.35405169172688766`,0.5293681767140201`,-0.7740660063403972`,0.2352801516816521`,0.40919616673994696`,0.3948713756042015`,0.15590703030903658`,0.40919658074184767`,0.15590642502537175`,0.5458062027988202`,0.4091957737226383`,0.394870098138699`,0.2873827655850463`,0.40919579525502886`,0.40919507027047414`,0.4091966907592498`,0.40919531005057713`,0.4091953282440058`,0.15590603283722124`,0.39487022881773204`,0.1559067873801263`,0.2150485731165961`,-0.2968393496719876`,0.4091952420289448`,0.4091961553305303`,0.3948711665691001`,0.15590782134547304`,0.07486414721352265`,0.3948702394949734`,0.04947074855952103`,0.21563452007433678`,0.3948711344082791`,0.4091949926764738`,0.394870591367867`,0.40919584986899343`,0.39487099850076396`,-0.8440410926035055`,0.21504858492994072`,-0.08015182517111061`,0.4091958896866663`,-0.7740652253183165`,-0.3540505373016536`,0.529367680257736`,0.07486488050718379`,0.049470950929808306`,-0.08015049305806977`,0.07486365213486319`,0.40919536143547186`,-0.13803517414945873`,-0.29683931278014314`,0.2127336477728834`,-0.3540516382918064`,-0.0801506177596949`,0.4091959339603655`,0.40919640664573065`,-0.7740659973721526`,0.40919606124507985`,0.409195056370666`,0.4091962715633317`,0.4091950216097024`,0.5458066826502026`,0.3948704558784574`,0.21563367585473683`,0.40919606083573623`,0.4091959860532878`,0.2127335936728389`,0.40919562408491683`,0.2156344874904133`,0.4091960476833216`,0.4091966294240619`,0.39487023243718034`,0.3948713305322574`,0.04947072317258322`,0.39487033533737287`,0.40919634986471354`,0.40919558461182975`,-0.3540519096655391`,-0.3540507004796839`,-0.7740643966720895`,0.4091962600889782`,0.40919646720913566`,0.3948714791562534`,0.5293674018172949`,0.40919618253154855`,0.5293686791068638`,0.409195914538023`,0.4091967447743997`,0.5293686514730099`,-0.08015159188855137`,-0.08015233187335644`,-0.08015109755527235`,-0.0801511428750229`,-0.3540513504521339`,0.28738104098666745`,-0.08015062538860798`,0.4091969069678844`,0.40919569165845027`,0.5458050420675411`,0.2150499902320639`,0.39486967107312365`,0.40919606017258126`,0.4091955704618448`,0.4091969479534239`,-0.08015082990340117`,0.52936898077851`,0.4091958593072816`,-0.35405106737457553`,0.07486332093028246`,0.40919626440304063`,0.40919656634912493`,0.050700689195393334`,0.4091962220399224`,0.40919605654903324`,0.40919548071946715`,0.4091963220884149`,0.5458056894949169`,0.4091966896782273`,0.049471274141009346`,-0.08015162630047003`,0.40919523803261854`,0.3948696572117295`,0.07486478265813704`,0.529367554378736`,0.4091964752266693`,0.3948713691763549`,-0.5928147326608422`,0.04946946453420444`,-0.3540514650625295`,0.39487072854183297`,0.050700874127464726`,0.40919540399683874`,-0.35405078973959614`,-0.08015204852548445`,0.40919554446146067`,0.4091956023128209`,0.21273524697087418`,0.21273518009068848`,-0.3540523316198612`,0.23527962121996876`,0.05070030116746959`,0.21273532408223234`,0.40919519429977663`,0.5293680222907964`,0.2127355088127071`,-0.8440410267849172`,0.5458062874654045`,0.40919662429553716`,-0.3540511552648387`,0.04946973338922332`,-0.3540522432843117`,0.21273430105562388`,0.5458054396896125`,0.4091963438130142`,0.5293671991627988`,0.5293679540321691`,-0.08015080364488407`,-0.08015056776406249`,0.3948699120323161`,0.4091956067398954`,-0.35405167503482143`,0.4091958346508456`,0.5458068509750873`,0.4091950170186029`,-0.35405162690803665`,-0.592815488925745`,-0.3540506302631468`,-0.3540517868977856`,0.4091969483366359`,0.1559077661710893`,-0.3540520997415694`,0.21504862192269647`,0.4091969586374606`,-0.7740652818925131`,-0.35405226732457046`,0.4091960790839341`,-0.35405195861347366`,-0.3540507933222256`,0.4091957802636007`,-0.08015172942583812`,0.4091969426656641`,-0.35405148382934615`,0.4091951049247229`,-0.08015085520894984`,0.2150493761440503`,0.4091950369865664`,-0.7740644511654856`,0.40919662187762557`,0.40919553261725544`,0.15590708315849983`,0.04946998169158564`,-0.0801520018959722`,-0.3540509753943847`,-0.0801514668403749`,0.5458060573058494`,0.15590669242820135`,-0.0801516615415549`,0.4091955644260077`,-0.3540514376097852`,0.39486989924844274`,-0.5928144238607642`,0.04946951780435012`,0.4091968590196086`,0.21504976177322638`,0.5293679597155292`,-0.08015064304418351`,0.4091962330346186`,0.04947026432578377`,-0.5928144844148644`,0.21273502930635063`,0.2150495565230503`,-0.35405065306711286`,0.21563358166507743`,-0.35405162965043196`,-0.35405130470570073`,0.4091959880138305`,0.21273502352059664`,0.21504940864687322`,0.04946929558826252`,0.40919657518591324`,-0.0801506725607184`,0.21273488846324917`,0.21273367461932036`,0.5293681164161383`,0.4091964143946172`,0.40919582806085547`,0.4091951700507975`,0.5293690752024977`,0.2127351312498914`,0.40919593645164193`,0.21504938127555903`,0.4091952365824502`,0.3948701803864149`,0.049471209295890446`,0.2352789848589188`,0.3948711323820259`,0.40919621632292436`,0.3948712245780016`,0.2873819767897314`,0.05069979799922058`,0.4091951043981247`,0.40919547961064284`,0.4091953839197664`,0.40919588553982456`,0.39487138589640824`,0.050699402314379256`,0.04946941413224955`,0.4091955285443628`,-0.774066068651418`,0.409196585819695`,0.40919694480242713`,-0.5928151973325319`,0.21504971368761067`,0.394870688024202`,0.5293672240655087`,0.5293674377847994`,0.21563495646698289`,-0.3540518456927475`,-0.7740660092136242`,0.40919610526296196`,0.4091964540524881`,-0.3540523868945041`,-0.08015178955631347`,0.40919607909312916`,0.04947125913726895`,0.409195791475212`,0.15590743092029852`,0.40919631321289884`,0.15590771651489946`,0.40919505316556726`,0.3948700614521825`,0.3948715009278545`,0.40919642011184454`,0.40919513022064885`,0.4091960602458143`,0.3948698800646965`,0.21273437416737076`,0.4091959875775118`,0.05070052494645457`,0.4091955669759809`,-0.35405061106157953`,-0.77406464062445`,0.2150488756915197`,0.4091960323224706`,0.07486444529726623`,0.4091961812366357`,0.21504895280532468`,0.4091951715349727`,0.4091958798325863`,0.4091953229012952`,-0.13803373400511396`,-0.35405140676984576`,-0.35405161085416015`,0.40919675819952894`,0.40919558069702533`,0.07486472261562027`,0.5293689105459622`,0.21504881753275684`,0.39487099783095375`,-0.08015233788391661`,0.40919538923978455`,0.529367104662532`,0.39487044678744426`,0.39487144020704584`,0.40919602395220667`,0.07486409922051067`,0.40919575106728096`,0.40919520507504675`,0.049470204869868604`,-0.2968411167242456`,0.4091956679348329`,0.21273419360841722`,0.2150485240079368`,0.05069934877136294`,0.529367534597875`,0.15590680542070354`,-0.08015235266975121`,-0.35405132245284826`,0.21273369886914154`,-0.3540524562046314`,0.2127353228923935`,0.155906400444087`,0.5293682705627406`,0.04947119257496433`,0.21273489306594467`,-0.2968398521774694`,-0.35405077795372636`,-0.29683995305668154`,0.4091958189056194`,0.21273377320908868`,0.3948700400955143`,0.4091951660765351`},{-0.8453803583092377`,-0.10175096501415475`,-0.3071140890137829`,0.07226553468436785`,-0.19438441805676784`,0.07226485983034422`,-0.1943848613139549`,-0.1943859226092794`,-0.21859973512100506`,-0.26403015125257867`,0.3178980276818804`,0.3178981108276574`,-0.19438540478081298`,-0.30711344430841175`,-0.2754918612205322`,-0.19438524043662075`,-0.1943854905649373`,-0.7141419368650894`,0.27877809969575895`,0.7426305151560771`,0.00870761741878046`,-0.19438486613051034`,-0.21859863219338907`,-0.3071142542643147`,-0.1943853813800421`,0.7426316712794442`,-0.10175124271423375`,-0.1943847062298049`,0.31789853792014366`,-0.19438465644758726`,-0.1943851234508705`,-0.1943844325228223`,-0.19438580325088642`,-0.1943855417391946`,-0.19438407876893662`,0.7426310172678147`,-0.21859810037544228`,-0.27549150671865297`,0.008708281717308027`,-0.21859904444469036`,-0.307113603215161`,0.7426318105113343`,0.7426310551051287`,0.24802498723442779`,-0.27549167240992417`,-0.27549220780619543`,-0.19438582275024796`,-0.20733668190940896`,-0.19438548209363765`,0.0722645406353058`,-0.264028783956023`,-0.2185995039065907`,0.24802400081350096`,-0.21859950475734694`,-0.21859961674666206`,0.00870813657220904`,-0.19438519073191796`,-0.19438431629120217`,0.2787785907840836`,0.7426306378909048`,0.7426317707263576`,-0.21859885229285528`,-0.19438582495576362`,0.3178985358415416`,0.7426309938758165`,-0.19438586324140056`,-0.21859938332893525`,-0.26402988496527097`,0.31789807225195515`,-0.19438420543906365`,-0.1943858975085923`,-0.1017515692254736`,-0.2640294186507232`,-0.1943859569449714`,-0.27549141672814403`,-0.10175064174541303`,-0.19438582558771061`,-0.19438545458582834`,-0.21859900441974214`,-0.2640299866413645`,0.2480245380829756`,-0.19438558634593028`,-0.21859840069309144`,-0.1943854309204336`,-0.10175105417770733`,-0.264028642751832`,-0.19438506685227633`,0.07226555990265139`,-0.2754911514352666`,0.7426311832377517`,-0.19438538054984844`,-0.19438538664082053`,-0.7141413233922577`,-0.19438480232670266`,-0.19438498888465142`,0.07226627872264013`,0.0722659559247432`,0.07226523426399627`,0.7426317958201983`,-0.19438476813454306`,0.07226553918841594`,0.27877885160012084`,-0.194385654659885`,-0.19438410267254513`,-0.19438537566433278`,-0.19438410974091475`,0.31789890895177175`,-0.1017522301429623`,0.3178994666056303`,0.4609292901536534`,0.7426313801021562`,-0.8453797903871362`,0.0722649653365722`,-0.20733766581521815`,0.31789786377350926`,-0.21859828190052824`,0.07226512623724389`,-0.1943848725815711`,-0.19438467739748197`,-0.21859815985290948`,-0.8453789469989805`,-0.1943841008483826`,-0.19438487450201977`,0.46092921950690163`,-0.19438435326059117`,0.31789785334880544`,-0.21859915602842087`,-0.26403005013577174`,-0.19438442257652477`,-0.2185989092165467`,0.008707360804507111`,-0.19438571290931717`,-0.21859846430865917`,0.07226457735026906`,0.46092751909835883`,0.3178995820406326`,0.27877859658531184`,0.07226579768986283`,-0.19438483439107151`,-0.19438453658155677`,0.07226579722382674`,-0.21859885091151277`,-0.194384958341608`,0.07226480596488978`,-0.19438438838854757`,0.07226462852011326`,-0.19438398682949945`,0.7426305205499726`,0.0722662690345233`,0.7426304679017861`,-0.19438438947642425`,-0.1943840067004951`,-0.19438481967996538`,0.008708363738846306`,-0.2754917933334773`,0.07226447291375061`,-0.19438453322439717`,0.4609276946707433`,0.2480242108536892`,0.46092863031638054`,0.3178988324432`,-0.19438555546570802`,-0.19438572213002733`,-0.19438494934621647`,-0.1943856342450321`,-0.26402873701858015`,-0.218599513111406`,0.07226435958163202`,-0.19438579119623037`,0.7426313433747034`,0.00870806521666206`,-0.7141428440035774`,-0.10175129790844764`,-0.21859930969485328`,0.07226555030131471`,-0.1943843612631562`,-0.8453803370460531`,-0.7141409968198256`,0.07226574806168283`,-0.1943848813162987`,-0.2640283878881158`,-0.19438588275228544`,0.8547333818324158`,0.008708240290869484`,-0.19438531166649795`,-0.7141420328857068`,-0.19438527247385098`,-0.7141423049605651`,-0.26403011513079366`,0.07226441291542732`,0.3178987754664606`,0.24802594144920534`,0.0087082285349271`,-0.30711397890220643`,-0.26402888858129164`,-0.7141411508311062`,-0.19438429177720223`,-0.7141418692730239`,-0.3071137563303151`,0.24802440848831125`,-0.26402850157934465`,-0.1943845386895439`,-0.19438415471634565`,0.24802408209396126`,-0.8453803137785268`,0.7426304945747172`,0.742631160077649`,-0.19438422731136226`,-0.1943856595926549`,-0.2185986832452468`,-0.2754907426152185`,0.07226494995647197`,-0.21859789096086216`,-0.19438485886989615`,-0.21859946663919683`,0.7426314174561579`,-0.19438528401404676`,-0.19438411546218287`,0.2480253099490084`,0.07226599893501597`,-0.7141419374951686`,0.072264512588167`,-0.19438528115784248`,-0.19438500501487002`,-0.218599489180894`,0.2787777936736415`,-0.19438536694429848`,-0.10175155827576965`,-0.3071141607200854`,0.07226561890656193`,-0.19438512358676907`,-0.19438540853117728`,-0.2640294488732638`,0.27877799432068046`,0.2787769752469974`,-0.3071124181080157`,0.07226566559793661`,-0.2185991901609392`,-0.10175193822206155`,0.07226444091302246`,-0.19438481639676572`,-0.19438405335722686`,-0.19438486382545372`,0.0722643196719335`,0.07226531856523459`,0.7426302611136532`,0.07226444400328337`,-0.1943845591107897`,0.7426306241878519`,-0.10175169140252119`,-0.194385146912853`,-0.19438436492690095`,-0.35472101645055504`,-0.21859861198197778`,-0.19438570622910156`,0.07226454810008084`,0.008707926714542307`,0.7426313080916802`,0.7426321454312448`,-0.218598127501326`,-0.1943850062806996`,0.008707669755047824`,-0.19438432253794963`,-0.1943854761127959`,-0.30711363286635945`,-0.19438571771413868`,-0.19438484092681113`,-0.4611577486556924`,0.008706766294497986`,-0.19438585453124418`,-0.21859864892187042`,0.008707304722186808`,-0.19438431625614702`,-0.1943847198302597`,-0.19438540689079212`,-0.2754911472884087`,-0.19438588301562945`,-0.2073366763705238`,-0.10175115759469441`,0.008706775895508435`,-0.21859971313547338`,-0.1943856613082723`,0.7426314832909151`,0.07226511560031164`,-0.19438447583149057`,0.0722651535620169`,-0.1943842853241253`,0.31789836540476113`,0.3178991592628887`,-0.19438465716950487`,-0.2754922481479028`,-0.19438541366751108`,-0.21859862780123257`,-0.19438481280938252`,0.27877835955405716`,-0.10175077479365058`,-0.19438547147862778`,0.07226487782825368`,0.008706957698988571`,-0.19438522047757656`,-0.19438455983633063`,0.24802581855006467`,-0.19438511774394082`,-0.7141416768764669`,-0.1943854891042824`,-0.2640288625070939`,-0.19438428514915312`,-0.19438425217106356`,0.31789863224959825`,-0.19438432322940133`,-0.21859827097360265`,0.3178993133616759`,-0.3071138136882221`,0.07226477304873552`,-0.26402869594396966`,0.2787772757210844`,-0.46115932990826153`,-0.19438434652642003`,-0.21859808889751534`,0.2480249808099371`,-0.19438497430509305`,0.24802413791239816`,-0.20733819187442526`,-0.19438472290477596`,-0.2185986899037271`,0.4286990076057368`,-0.19438501730246732`,-0.19438496805193187`,-0.19438448669027047`,-0.19438426239814383`,-0.1943840872499239`,0.24802417732861828`,-0.21859934038853063`,0.24802519530148298`,0.7426314021526925`,-0.3547211452770152`,-0.1943845810171969`,-0.19438567010802635`,-0.21859834001548606`,0.24802420965290878`,0.008708279008986696`,-0.21859830582030135`,-0.7141418200531743`,0.4609290415569972`,-0.21859834469189604`,-0.19438495610557338`,-0.21859879884630343`,-0.194385945503983`,-0.21859782727043567`,0.8547337347376956`,0.7426319558308387`,0.31789933331907694`,-0.19438441610837143`,0.27877772017772423`,0.07226545213442334`,-0.26402866971272543`,0.00870754072388263`,-0.7141427699648444`,0.31789796370396406`,0.008707094856163946`,-0.19438477827273642`,-0.8453790491060944`,-0.3547222756568716`,-0.10175112174846383`,0.07226455360072581`,0.31789845402642225`,-0.19438511842625159`,-0.19438488367220777`,0.2787781690062979`,-0.19438485072214676`,-0.19438426366865005`,-0.1943853958706087`,-0.19438402526170026`,-0.20733833930358966`,-0.21859834333520345`,0.46092858661304187`,-0.19438505266335052`,-0.19438457697595612`,-0.1017515754393472`,-0.1943840018078375`,0.46092922137286013`,-0.1943858236351009`,-0.1943853181719149`,-0.21859895739752416`,-0.21859877954655063`,-0.7141410702046701`,-0.21859832103066684`,-0.19438418347780664`,-0.19438574843028666`,0.07226519636257331`,0.07226555182543155`,0.27877842158267885`,-0.1943859241758385`,-0.1943857683419974`,-0.2185986470224791`,-0.2640299609790502`,-0.1943842800354695`,-0.26402897664434677`,-0.19438498826950906`,-0.19438531725596334`,-0.26402875752686905`,0.3178981561739033`,0.317898153833772`,0.3178984039426518`,0.31789954410353793`,0.07226472638084737`,0.4286980932006051`,0.31789840640575334`,-0.19438509884966323`,-0.19438457889143296`,-0.20733667324505034`,0.7426304841930428`,-0.21859955935091296`,-0.19438409355281752`,-0.19438440385282107`,-0.19438585847395198`,0.31789933702172146`,-0.2640300834104856`,-0.19438587537852975`,0.07226566068561183`,0.00870826458411979`,-0.194384929445719`,-0.19438450695849205`,-0.275491803399956`,-0.1943851576328693`,-0.1943842810056732`,-0.1943840186025942`,-0.1943851257474267`,-0.20733750379767046`,-0.19438401577988496`,-0.7141416696297288`,0.31789832032300896`,-0.19438454719053122`,-0.2185987176559847`,0.008708568068450714`,-0.2640301927241898`,-0.1943840823477874`,-0.21859921700490823`,-0.3071134792721273`,-0.7141408782959906`,0.07226464925177654`,-0.21859803681579662`,-0.2754918819787257`,-0.19438525433763207`,0.07226499720414427`,0.317898979753626`,-0.19438591947895895`,-0.19438442104382292`,-0.10175210443781886`,-0.10175187667796641`,0.0722655719223069`,-0.46115947582096856`,-0.2754912364030704`,-0.10175136398863756`,-0.1943853641959494`,-0.26402905265852095`,-0.10175114924322445`,0.8547323526856768`,-0.207337020439402`,-0.19438574031943703`,0.07226449963705849`,-0.7141418463256892`,0.07226612319349177`,-0.1017522325936835`,-0.2073376854465528`,-0.19438525556440983`,-0.26402981372339024`,-0.26402872399985794`,0.31789920634251057`,0.3178991867798117`,-0.21859868529271345`,-0.19438413913796948`,0.0722661245891219`,-0.1943842176820359`,-0.20733824248382604`,-0.19438557481407917`,0.07226568428971085`,-0.30711263301761704`,0.07226474567014758`,0.07226551475442489`,-0.19438462466902817`,0.24802578577959158`,0.07226570701694886`,0.7426306494602418`,-0.19438537508697593`,0.27877879022811086`,0.0722657739961129`,-0.1943854442827239`,0.07226428389060845`,0.07226443763609137`,-0.1943848658630034`,0.31789803324722143`,-0.19438430643695134`,0.07226443273367791`,-0.19438538614627232`,0.31789788025914484`,0.7426313627119563`,-0.19438406518144652`,0.27877881214240285`,-0.19438576684569203`,-0.19438534807943844`,0.24802447087469043`,-0.7141421001535959`,0.317899834834291`,0.07226551684615636`,0.317898934617125`,-0.20733698553406812`,0.2480248703108084`,0.3178981501918307`,-0.19438498413290728`,0.07226431532029243`,-0.21859964492921663`,-0.30711425903633527`,-0.7141417986365848`,-0.19438516109795972`,0.742630717533706`,-0.2640292624074496`,0.3178988383982459`,-0.19438526505572468`,-0.7141414761605261`,-0.30711425699409695`,-0.10175182623067039`,0.7426317774024285`,0.07226624756510026`,0.460928712621156`,0.07226458418065841`,0.07226522083371749`,-0.19438532275146392`,-0.10175060900810594`,0.7426305039259623`,-0.7141414335884908`,-0.19438575852974696`,0.3178995808665003`,-0.10175123800277408`,-0.10175205845118016`,-0.26402845151337345`,-0.19438473141420812`,-0.194385671346875`,-0.19438562141954444`,-0.2640291859744459`,-0.10175148209596142`,-0.19438438881109824`,0.742631566257571`,-0.19438439529607957`,-0.21859868871854413`,-0.714141831497009`,-0.4611587418285423`,-0.21859877767412617`,-0.1943847850443652`,-0.21859957981665756`,0.428698972320104`,-0.27549137617354336`,-0.19438562643731366`,-0.19438425807784843`,-0.19438534464664994`,-0.1943848867810099`,-0.2185989227983928`,-0.27549104104014294`,-0.7141414623323841`,-0.19438452045060498`,0.2787784163712596`,-0.1943851468394181`,-0.19438495830023594`,-0.30711318359682377`,0.7426306381285643`,-0.21859935381134513`,-0.26402930017430276`,-0.26402855162196576`,0.46092810788373983`,0.0722654197650982`,0.27877810147504684`,-0.1943845653867009`,-0.19438473092226632`,0.07226570073847456`,0.3178996850271161`,-0.1943855744192312`,-0.714142741480407`,-0.19438447010791307`,0.248024619394681`,-0.19438441636362136`,0.24802520190633198`,-0.19438591478140962`,-0.21859901227182313`,-0.21859810396357235`,-0.19438436753847468`,-0.19438399901135828`,-0.1943848672726211`,-0.21859864945034824`,-0.10175204056174904`,-0.19438492204380048`,-0.27549224635383013`,-0.19438439977157612`,0.0722661273100183`,0.2787787855224458`,0.7426305029928372`,-0.1943849971521976`,0.008706669131915997`,-0.19438543823597654`,0.7426311671491305`,-0.19438563709315282`,-0.19438477835858456`,-0.19438456269243248`,-0.8453794691366666`,0.07226446422121865`,0.07226572785139802`,-0.19438500074595477`,-0.1943859268937464`,0.008706846042037211`,-0.26403018767729064`,0.7426309184471858`,-0.21859904383551976`,0.3178990814772077`,-0.19438463313191373`,-0.264029201115029`,-0.21859838555254776`,-0.21859790642709034`,-0.194384110355862`,0.008708481831790795`,-0.19438524032402568`,-0.19438441807817797`,-0.7141409677224095`,-0.3547210847010306`,-0.19438519218998734`,-0.10175060135770485`,0.7426304750723728`,-0.27549184072670097`,-0.26402852653106473`,0.24802494891527282`,0.3178988914461969`,0.07226523873253424`,-0.10175091326523955`,0.07226513819083419`,-0.10175179034871581`,0.24802402296887352`,-0.2640296131946283`,-0.71414132334404`,-0.10175157359564337`,-0.3547227872066982`,0.0722643377221914`,-0.3547225660957576`,-0.19438465808449057`,-0.1017515091738882`,-0.21859883771763694`,-0.19438533695962892`},{-0.318012623591489`,0.16329329275742932`,-3.1008410295211766`,0.05442725394278407`,0.13958720587348217`,0.14581410618802965`,0.834480514669348`,0.8141167686850187`,-0.04243273245951762`,0.12102995378953041`,1.004198200034303`,-0.29468134944528196`,0.9580534892258152`,-0.33934362341573365`,0.328396289722763`,0.06207649162826877`,0.46088837141031946`,0.7836402107936107`,-0.5721324189946229`,0.5611825258950321`,0.4800187164062606`,0.6294378663072397`,-0.47088172945348733`,0.507612960464613`,0.45915238412765325`,0.1354081925103216`,0.34244693725031505`,0.31216211659403287`,-3.193522384396185`,-2.2015399964406863`,0.8447883880254088`,0.793648378864672`,0.6406865060278063`,0.36732390575157825`,-0.07067999309925245`,0.16908957607062047`,0.7961205149972632`,0.6477435688400426`,0.9019915190091473`,-0.26198259601902696`,-1.6975022134639248`,0.8276707655879526`,0.43137504212142946`,0.41529771001959753`,-0.7781574758835721`,0.35318992589913106`,0.8255822296034117`,-0.705631775905073`,0.5857117146366274`,-1.0770479139183016`,0.5791314272785364`,0.8172310159603201`,0.6201921237040751`,0.31800425625625783`,-0.9832694007653886`,0.2736795847907222`,0.8996316596839065`,0.6310269374739411`,-0.9428622924009054`,0.9466482028822708`,0.7022095949986422`,0.5026749750445885`,0.7031056542137564`,-1.2460997334492565`,0.9851467750273194`,-1.3406697274184252`,0.24427512492636694`,0.05043979461840992`,-1.6294302495086528`,0.9262409133584384`,0.8997759236411758`,0.7245565231770797`,0.6809839907990592`,0.15526229488743873`,-0.4681812989539531`,-0.6134294153145881`,0.19155496359561844`,0.9514052998309434`,0.6976570337478877`,-1.425899600764484`,-0.7625908254187527`,0.9859698357980036`,0.12305158944523371`,0.8311472209022547`,-3.0145360371806293`,-0.09358330044873801`,0.8900155154380278`,0.6791002403805451`,0.5716039614683365`,0.9583466227749848`,0.9612808783631998`,0.372590244003138`,-0.8283577455507304`,0.776336499638093`,0.47651583794375657`,-0.23624685992299896`,-0.12082343197985462`,-1.2811341370923448`,0.35946431259631423`,0.6537038780592659`,-0.5642726804200252`,-0.4734655300177557`,0.530094931591543`,1.0085710113591269`,0.9800164736409178`,0.692269862368573`,-0.8308821351696345`,-0.2510066354516675`,-0.8585839044956334`,0.6582278644988434`,0.44095805081846323`,0.6851595931658252`,-0.49416928183047115`,0.6545966678994093`,-1.915448734154365`,-0.44641649420168034`,-0.3903414090401278`,0.4512482612478523`,0.870733386088159`,-0.7339073533670905`,0.6279608159091608`,0.9282892196178012`,0.8664590830432322`,1.0118911468286453`,-0.2667695346776232`,-1.164369176532121`,0.1992508221831129`,-0.7597703544379998`,0.9584351861940292`,-0.5425044094606222`,-0.006447528640774957`,0.8489664105123426`,0.7843630808198337`,0.14291818903317693`,0.7366817868342116`,0.2758842254119763`,-1.8038599193636518`,-0.1176281663414932`,0.9680826667156953`,0.7224542274614707`,0.8271617157009821`,-1.379965823609847`,0.8242875710852645`,0.9668389531032592`,-1.281214210815684`,0.8729758367150149`,0.9075246360877118`,0.9818969248089802`,0.6507273818524257`,-1.416128321126442`,-0.10020183238781266`,0.610187878758697`,0.9063192763905363`,0.28262345005190814`,0.618297441248467`,0.6007283118895701`,0.554677578597116`,0.5253493294864275`,0.7676152057177177`,0.906253026410782`,0.7557513001554933`,0.05341484518028493`,-0.0037037700751106416`,-0.6000894319573622`,-1.1009417697298598`,0.4871194523039307`,-2.016240935395106`,0.5148325415215032`,0.04057028071096554`,-1.5116016127133944`,0.7943678563559984`,-1.1249939325225775`,-0.39052253568955075`,0.36528953595809194`,-0.9836164805375284`,-0.43970230152933354`,0.7294522953402672`,0.8800055202712828`,-0.2566597563279779`,-1.5247926293282124`,0.8475877671550625`,0.7416416464527288`,-2.8619567004911897`,0.5874850258330928`,0.4068420101558728`,-0.0032462347484221825`,0.8341669884033257`,0.07754870165548157`,-0.21040817523368974`,-1.0177934074063009`,-1.2323001435890697`,-0.3091546915820633`,0.8795019500327795`,-0.9572794434765528`,-2.0273471863466854`,-1.2474729922075167`,0.9038102307541805`,-1.3202442717393201`,-0.288740125038904`,-0.5692255287377673`,0.5854278390690932`,-0.12466993672974466`,0.8771591783103225`,-1.6014121753435746`,0.20162493544413884`,-0.2570741908959533`,-0.9073162223693112`,0.7840133759107747`,0.9468760937167884`,-0.24938341594931157`,0.44684530307806464`,-1.8126699555046382`,0.6035536446151996`,0.9257972799505194`,-2.1393972202634135`,-0.3421871681548665`,0.8593665240381155`,0.3764907548919554`,0.5131213862215326`,-0.2943935524984451`,-0.7935471056766205`,0.19104472958161334`,-0.9344891179005523`,0.761279804342885`,0.01670978841617944`,-1.8408974356409598`,0.8739254017479685`,-0.6798217933955552`,-0.25651163263097165`,-2.3113800540998484`,0.04355458902677465`,0.7495502158236875`,0.5773351440874042`,-0.4748463995620695`,-2.422348890604198`,-0.8869482722275172`,-0.377866241155823`,0.6140828987158702`,-1.309948829085194`,-0.42048687360321046`,0.4010905198764886`,0.6093057434141093`,0.2757483298133768`,-0.09611160111612238`,-1.4285255335332643`,0.5403118084590378`,0.2049672180831999`,0.8210402786806609`,-0.34015487471495326`,-1.604252496212212`,0.9768193817143153`,0.5102251663928294`,0.7756181980029537`,-0.4580484119228236`,-1.3435944085257012`,0.3864687185656156`,0.8201885696663305`,0.1992822813615417`,0.17573110831314143`,-0.7024299788367825`,0.94113282808199`,1.01797828798695`,-0.1685957989071053`,0.33018634541552216`,-4.016525138246153`,1.005238487892402`,0.8470277860077097`,0.8142421114707689`,0.5808964059299633`,-0.5395797557809473`,0.40664639408213726`,-0.08752133547768519`,0.8799346525615614`,0.7058316501821941`,0.7202507103671745`,0.756357872856879`,0.9038337894963867`,0.1593616017854898`,0.6554745365324156`,-0.18293949546205018`,0.49778178672673085`,0.6886599820957578`,0.3754197269859887`,0.14486907070514946`,0.9335302033109478`,0.7499424333805376`,0.800225728924026`,-0.9046532885681168`,-1.6846459874698947`,0.7421225326249262`,0.7536062974138641`,0.2768345168528958`,-2.126508236321678`,0.9629879196994405`,-4.033598836815722`,0.43432649591826034`,0.8622962968438908`,-1.4590060084993994`,0.5504282332391416`,0.3915088582954698`,0.9614778141840136`,0.6770115494037732`,0.9107304623432098`,-0.2605826904321986`,0.723648744251404`,0.9149976819802849`,-1.7667363839669752`,0.9576357082081498`,-2.7017846829698136`,0.803935365883993`,0.7465802317873127`,-1.2925344460012722`,-2.1810822431885115`,0.8395814928832974`,-0.33742586827090126`,-1.6815419723082194`,0.7976753548806659`,0.7262891133020718`,0.7800307350293616`,-0.8752570237377961`,0.919809560755648`,0.42956397177023187`,-0.7388182718691395`,0.908810330446518`,-0.1887429736237046`,-5.498945586056267`,0.861209044212808`,0.7033970256263256`,0.33835058325637896`,0.02692472282492104`,0.9730360874266911`,-0.3187383804450389`,0.6878452562101591`,0.7803649669541237`,-0.05154143136544452`,0.2588078104931804`,0.7501392451188931`,0.9641360345203851`,0.13153897356661837`,-1.0893146136485379`,0.6177901937949881`,1.0319252464639377`,0.2179423975733785`,0.6275700041337358`,0.20947076119737237`,0.7920974563036526`,0.613393160597906`,0.7884000599679911`,0.933742909144967`,-3.182215138779687`,0.9682694509010614`,-1.1412219526963447`,0.7381519188017479`,-0.37273718832153624`,0.7183656282509241`,0.19012552683168693`,0.6132183678616718`,-1.2731148991537866`,0.07925320424924792`,-2.874918860307495`,0.4303789695722798`,0.6670044024551015`,0.9663529681966228`,0.20974121671462304`,0.2442826366184347`,-1.3534300671420487`,0.7100466875531857`,0.6328007213212149`,0.8906026352693475`,-2.061150326374437`,0.9415980347750543`,0.6319750939494236`,0.8420467570339363`,-0.9073859774622095`,0.6376774620824829`,0.7674364181916271`,0.4980101088348563`,0.8974241461220371`,0.03181693829674166`,-0.7416012961647107`,0.2956176517673613`,0.8149417765042772`,0.09861937555582748`,0.1851188988486869`,0.8072002156185653`,0.006890530591591396`,-0.41476918961984627`,0.6215834404364291`,0.9427675745688149`,0.7421512067612256`,-0.7649634014732255`,-2.015153558191425`,0.8873059500281006`,0.23460840706957936`,-0.7549315145576114`,-0.8598375018305306`,0.9536997449339711`,0.5584807600331166`,0.42603593643736015`,-1.6166590735749862`,-0.8178532043018392`,-2.920276328454761`,-2.8472373208038864`,0.09487259553277097`,0.192967918738096`,-1.1545480707942386`,-4.0295479999030395`,-0.8806415355934676`,0.8693208768491492`,0.2729786832325707`,-0.27787343094071176`,0.5899578041480202`,0.616749062840051`,0.6146300676858745`,0.9575508106307101`,0.9102758486474659`,-0.12783684345334273`,-0.7806327604288807`,0.8321802471193871`,0.29506392914385354`,-0.43698790414521826`,0.777752248220182`,-0.07555222338663659`,0.40840950813163096`,0.3147036701370387`,0.8249176774234872`,0.8962594811254745`,-0.463371110573596`,-0.38964449240003685`,-1.442665470470574`,0.07552847860950015`,-1.8999811954879398`,-1.3884071220637975`,0.5951996327373432`,0.7760823950507727`,0.4854479731518754`,0.6546646696077992`,0.14239913610663935`,0.4638767327197891`,0.27193942349785416`,0.1355587930233177`,0.9587904425731398`,0.29375056085301243`,0.9376157656181339`,-0.9360609718920181`,-0.8297885946895353`,0.7418662667879383`,0.6779898074115687`,0.8085064158506529`,0.4147030273059867`,0.5966907504602816`,-0.31007973935904487`,0.8348516784890347`,-1.1787136709054484`,0.745222748691385`,-0.21792550757291762`,0.8622053041948066`,-1.4814023829645502`,-1.285520883516535`,-0.39684528439178646`,0.25354370940301646`,-0.09707925966341822`,-2.3444949056802664`,0.5753807099271603`,-0.29429961564217183`,0.8618079558814827`,0.75271718113152`,-0.42591985220754536`,-1.768003966610486`,-0.7889843114192528`,-1.2170475459499834`,0.47333409616768046`,0.9615277601436454`,0.04312413579069699`,-1.2101554107118497`,0.8959040499153763`,0.3397299061338847`,-1.1413269663921655`,-1.4005327803921146`,0.511581677668534`,0.7752538156271223`,0.7320189488811447`,-0.24714927644316537`,0.6262315903500146`,-1.4908136954407587`,-2.4571672782587286`,-0.6667580703324222`,0.9758451201682206`,0.20007268539692957`,0.3772906195540025`,0.6341321414315849`,-1.174736806139874`,0.16979334002996277`,-0.6987487892622689`,0.40541929366198587`,-1.2082222569111134`,0.7432181350935522`,-0.6306976884022907`,-2.297590703120149`,0.8659592006311027`,-0.0039007130341452982`,-1.6979107915768363`,0.37245192715611347`,-1.9498315141459677`,0.556112784359994`,-1.2608761033422036`,-0.5517737595269153`,0.45458570618154825`,-0.5464777031243462`,0.5719253987188608`,0.02053078587693935`,-0.08637517266571679`,-1.1273148198606664`,0.012084791065214645`,0.8730282592305295`,0.6570366309116521`,0.3313658280696849`,0.2591538759393448`,0.5196822154428721`,-0.725254957257479`,-1.9670303781229534`,0.1506486749139775`,0.6960161104816982`,0.6139939885480146`,0.7366368643874553`,-1.423917313326871`,-1.1207668419495065`,0.8823374142862997`,-0.3857321468224243`,0.15757524889205082`,0.30498213411167563`,0.6709283898390664`,-0.29173905994417565`,0.4238589310924197`,-2.8291502748138697`,0.37336210950918286`,0.9554055696939031`,0.21609777248927872`,0.9165269290390798`,-0.1994888769778615`,0.5721145382698402`,0.4874785827997048`,0.4343132814845388`,0.5093127692624821`,-1.4062640190341489`,-0.5998306231731304`,0.566560852600608`,0.5408668394144155`,0.7354096530598832`,-1.733404093596276`,-4.855766297179462`,0.22865780009225903`,0.9973078216484603`,0.4853209610311838`,-2.180705665018476`,0.7849285133110365`,0.7283919069311896`,-1.0789695824225398`,0.962322788859104`,-0.5567856720820173`,0.25809975333955365`,0.8030413257714629`,0.8025293867020552`,0.2949541402105049`,-1.001905634680275`,0.5376863756086602`,0.38923549928531037`,-0.03921953501550521`,0.9848622763360094`,-0.29493209062165016`,-2.020724674579432`,0.8537079743492738`,0.7861993878889227`,-1.4769323613076213`,-2.7793081862901725`,0.9527014893204294`,0.15674528417715167`,0.024168382430216805`,0.2914855855978849`,0.8243944317443447`,-0.39777330503230196`,0.8162174270753059`,-1.044157928111795`,-0.14641131845144648`,0.2652493001036818`,0.1794366199547408`,0.16951464922762063`,0.30261113995911487`,0.1297438077381036`,0.1354065048466587`,0.18863576280902408`,0.8082599650508414`,0.35745873836471903`,-1.2537827860750164`,-1.7681593492973418`,-0.8837723237551491`,0.48966925450318805`,0.829529121118189`,0.4453162294485965`,0.8948758166950712`,0.15381260077776931`,0.9319390903781992`,-0.3958208166439324`,-1.0815621415499221`,-1.6209529636019682`,0.9897418255254189`,0.9796868953134014`,-1.0091412629237664`,0.7776184709019114`,0.3552120819236804`,0.8315381143799028`,-0.7773001786751167`,0.9598514938293973`,-2.3451423759062697`,-1.1423579687006675`,0.5784517377916216`,0.3577527043272933`,1.0235097308136685`,0.8844394468061462`,-1.7019211812864241`,0.20082082711791935`,0.2711790063406872`,0.9367643555744419`,0.27129313900054186`,-0.11346018352425193`,0.922143018757367`,0.5702828137288221`,0.42667971196541565`,0.5984734224854393`,0.41610910012419206`,0.32885435116990996`,0.09499982892976705`,0.5971035276592647`,0.7815813560468068`,-1.491374236557064`,-1.3563802137441807`,-0.566688869876806`,-0.03876879238548312`,0.7369941600039348`,-0.7106273970788328`,0.8656513131751136`,-0.19142136735418783`,-1.0007711877042305`,0.7937563020178303`},{-0.5857380004047303`,0.21824735945800863`,-2.8540629938645194`,-0.0903036514373814`,0.2293110203954496`,-0.04314730711851192`,0.8891016463504456`,1.0587285451134985`,0.07209488202593327`,0.18247801092662141`,1.069372372668505`,-0.37620376589879717`,1.0321407528976183`,-0.3372543172627238`,0.35060684906981376`,-0.08646408859178284`,0.45850040924171526`,0.8138228923758409`,-0.6102211783340222`,0.4864826578465977`,0.5418286183520905`,0.6872060318711578`,-0.4485168162729797`,0.9174619250852055`,0.28042015347617666`,0.009186369746581453`,0.3698209136721266`,0.1860694979348712`,-3.3457362074724197`,-2.7931592723160725`,0.9730678551139619`,0.8306509089212146`,0.6195267884177197`,0.37204843610605165`,-1.1249136320489166`,0.02136155758353931`,0.8790301966953774`,0.7531032158440851`,0.992425351396809`,-0.35416503597824434`,-1.7815266395149534`,0.7973978130179957`,0.4220609691026369`,0.30226072251301955`,-0.8104015381740314`,0.44181816693629916`,0.9176204130503748`,-1.1608849718303982`,0.6458621553846834`,-1.0565514018319795`,0.5109149741273681`,0.7155236119522643`,0.5843126565499308`,0.2724006241721618`,-1.0965221867965025`,0.25536980913125856`,0.9883149781714007`,0.5552595848224172`,-0.947486523677168`,0.35959535618356864`,0.7390776277096373`,0.32224944661492105`,0.7225177061263401`,-1.2611509361069533`,1.0472258795534175`,-1.2266474810310353`,0.15475678511370086`,0.06274253209841742`,-1.9448319692270808`,1.0391451141171741`,1.027096771667409`,0.785813980849148`,0.7009129171281068`,-0.05466949180004826`,-0.45634524900961254`,-0.7252727468039722`,0.18662890924651893`,1.0408630099030174`,0.7729195909762477`,-1.2777894297792969`,-0.8434586259282569`,1.093425185635892`,0.1579566647860455`,0.9026576560890938`,-2.628321809323503`,-0.5573362393518878`,0.9350696920892957`,0.6146951723840216`,0.5237866286301416`,1.0708359421819176`,1.0516006864139886`,0.46421485792630146`,-0.9362000912898707`,0.8115403658955604`,0.7507982988868235`,-0.3821130883813043`,-0.25488020204069584`,-1.2414214793131702`,0.42209817311719317`,0.7648154413997884`,-0.34981864787108563`,-1.2194192462578939`,0.4383210426853838`,1.1102712776640002`,1.0749739025124758`,0.6702681655153448`,0.2805770820050434`,-0.36772951179125546`,-0.5761728428926588`,0.8360410070315563`,0.34715110880416844`,0.6284806831473054`,-0.552343170361352`,0.788872550847361`,-1.8177860824714542`,-1.2334666418414146`,-0.3823039476526399`,-1.0023418450193418`,0.9198831265278195`,-0.6277320191172857`,0.6241066720661712`,0.9920498224635252`,0.9200916469444393`,1.1189972069596061`,-0.3679718943730278`,-1.1107279520328845`,0.2544204727774738`,-0.8199738149504043`,1.0377635907606244`,-0.6252166862099651`,0.10054432133907341`,0.8583853084392465`,0.9204674574925593`,0.21069977083761873`,0.7439136923707887`,0.27852292530590195`,-1.6505218959032226`,-0.4419556958442022`,0.9964764811009703`,0.3981700601306046`,0.9050585123465547`,-1.3580353931079734`,0.7976356585381161`,1.1162960920182814`,-1.0296532296866077`,0.9979347316712402`,0.9971341865272986`,1.0554388846991256`,0.2619157934974773`,-1.3938365000821364`,0.08531454431028165`,0.6891565552112808`,0.9882963006993061`,0.28898727728448237`,0.5392354455810879`,0.5897000814531497`,0.5818773455491456`,0.4906990256051703`,0.594311181250446`,1.0367212142258138`,0.6866348504343575`,0.13898274091438867`,0.010737881854514145`,-1.1576290877945052`,-1.639617252930618`,0.600881329660259`,-1.9073954611984685`,0.44770077697978183`,0.01179665441807905`,-1.4864942335197695`,0.9121552672228296`,-1.187090796811181`,-0.487579612000728`,0.22824970986191562`,-0.8959292006154362`,-6.489340079634243`*^-4,0.7978090064624017`,0.9015211130016608`,-0.504405150157822`,-1.72817103219052`,0.971407623415308`,0.8097526829059055`,-2.5362714687719485`,0.7110892943017115`,0.5825146652184352`,0.01664461253777188`,0.9274644538159593`,0.07097564172610336`,-0.19684449921573502`,-0.84685898781948`,-0.9908565933257414`,-0.3188411782546796`,0.9826053711255547`,-1.0171228753675885`,-1.9486760958702607`,-1.176290263333353`,0.921698666121025`,-1.5352573091047246`,0.9600562942467274`,-0.6251075780138365`,0.7180123397722364`,-0.05675159172382303`,0.9237658894310673`,-1.6469164668007834`,-0.17130543308006188`,-0.3154261881194758`,-0.8431180230565352`,0.8424809120307803`,1.051905899569608`,0.5032037259631366`,0.33860141119779535`,-1.6007209175047292`,0.45586536911294606`,1.0079256098669722`,-1.930001098548879`,-0.8987513197134257`,0.9201263777206963`,-3.040239106624286`,0.5026388798687371`,-0.34720939800868794`,-0.7967466704933092`,0.20644377470635145`,-0.8686926110536188`,0.8798559645828948`,-0.2067824391246336`,-1.9683976327229415`,0.9351998565676053`,-0.7260673756584142`,0.19065106682398458`,-2.077283572722894`,0.18411978512579144`,0.7796853489518684`,0.6704797967377865`,0.0037878982546872115`,-1.796302528388874`,-1.5444727088959396`,-0.24969052068702807`,0.549221241253783`,-1.366616112904699`,-0.47894965587132987`,0.5021553597839454`,0.5302487890353579`,0.44286050912607405`,-0.17447545447943597`,-1.357790577640146`,0.42133831340108086`,0.16313647625165978`,0.8440504096029571`,-0.4875792770940713`,-1.5517060627684127`,1.0803454844882037`,0.6584602048706378`,0.908026350838056`,-0.41393561646782273`,-1.0787708070212663`,0.21268030320572476`,0.8974167091750692`,0.2258457447744518`,0.1783127990268227`,-0.6155696371793142`,1.044961710521299`,1.1028303368846804`,-2.955028752533371`,0.4161388035519895`,-3.6142227480143125`,0.9032193323343027`,0.9339246919221206`,0.386843198388291`,0.6922678364601592`,-0.5361481849422323`,0.4004020485932801`,-0.027869022844378068`,0.9448957281690448`,0.8836576801289826`,0.9638992030215225`,0.694104706318467`,0.978517923590313`,-0.2919432961973263`,0.5976032829162031`,-0.09271026466676245`,0.4296373653194969`,0.6606022237534751`,0.38920193730255287`,-0.08406200873134279`,1.0368528751860364`,0.7837703486125446`,0.7821624006808359`,-1.2533256153331374`,-1.824800988411535`,0.808335176458116`,0.7575921612776653`,0.3471525639835518`,-1.8959418327291382`,1.0785213917494518`,-3.9181683885457903`,0.43170402251040113`,0.9455759947788854`,-1.3689409083130333`,0.478126084533244`,0.3646476904441489`,1.052211587576325`,0.7718098665416173`,0.9216117008704291`,-0.5308102061356402`,0.9013650167905816`,1.0183347047152782`,-1.6792443289848373`,0.371274119100266`,-2.570741181134923`,0.8123035969831879`,0.8154414352446419`,-1.2084776882772388`,-2.2645746982329027`,1.0274849583261767`,-0.31213368204191183`,-1.758962744370584`,0.8429711157377644`,0.7688283477218634`,0.752170152161895`,-0.9666323345407554`,1.015769923784162`,0.2943037527259265`,-0.7909622492278977`,0.9091664878316398`,-0.5018225432403008`,-4.688875993853888`,1.007507655333651`,0.5068439063269069`,0.17355761767857456`,0.04405504740128453`,1.0755779292252607`,-0.24359918188428006`,0.7072348568625546`,0.9031020243648528`,0.1942347319942304`,0.34554336715420203`,0.8111727599188275`,1.0830359937422391`,-0.059478665575202566`,-0.9948185683400289`,0.6663503588633204`,1.1172020276104637`,-0.1358936012803869`,0.6664173751063539`,0.060980785266296494`,0.845430353743538`,0.6872820809177894`,0.6386954022030564`,1.036722997103172`,-2.911446053187297`,1.020519378170566`,-0.9467936379444788`,0.7206738544255045`,-0.8041004378199174`,0.17592826269078196`,0.15117500817055224`,0.6519341338563793`,-1.1343808985611965`,0.23033434919341692`,-2.5775297668351307`,0.6578748488461187`,0.6428183275755214`,1.0710057413237464`,0.05403433844793053`,0.3208490762722861`,-1.3224468529495652`,0.693642868754868`,0.6972940876442956`,1.0335450954514844`,-1.6813148546140995`,0.9962090572110452`,0.5615020834127266`,0.9157694371009484`,-0.9552102106742655`,0.6021866986794755`,0.6564486960601368`,0.3587957909244674`,1.0074769668895913`,-0.009282671257235087`,-0.6210772047613807`,0.198609403515564`,0.7860247828131752`,0.1554775148083406`,0.13630242967803946`,0.7036402795672185`,-0.22083338601115493`,-0.33916733016138556`,0.6481600538072164`,1.0364843788204792`,0.5989566999942112`,-0.7611780527276183`,-1.65242659162218`,1.027940328082487`,0.33386172814844095`,-0.8353441389963739`,-0.6501262217979232`,1.067202516356968`,0.5739873281083747`,0.41313571433693413`,-1.4395803784702`,-0.785539461396398`,-2.620880004200189`,-2.554710971817863`,-0.4246295549389723`,0.213315031112645`,-1.1309943051226323`,-3.4389523558069883`,-0.9344278821210804`,0.9742238949846023`,0.5701038302695901`,-0.7418722452211842`,0.6952468214866022`,0.6701124180490258`,0.6411038106486423`,1.1045349922544996`,0.9422572844432225`,-0.38345058175212154`,-0.8969906853130014`,0.8862668230222087`,0.25533568818143554`,-0.4239300484261611`,0.8343237213587551`,0.008361789957533715`,0.5132238587839539`,0.3017904122132692`,0.9200398016821362`,0.9519076550230541`,-0.28035440441561693`,-1.0743572160205181`,-1.5512023675898143`,-0.22601818037794874`,-1.8759680280303657`,-1.1536278547711314`,-0.3112229220222026`,0.8720640604868618`,0.4889083594389151`,0.7180633662724503`,0.009963924062596167`,0.45705083826202486`,0.4468303273678268`,0.15038714746013152`,0.8559479093654759`,0.3472724825499717`,1.0618098024694533`,-0.8787617399423193`,-1.1855830362321007`,0.720936425988297`,0.6750698041642905`,0.9246176568515458`,0.19491335321725894`,0.6509028352565703`,-0.35837056705141057`,0.8464385300231103`,-1.3424023940605305`,0.8294584134726182`,-0.17566610243893535`,1.004458565298728`,-1.3049662538911335`,-1.4040064080741146`,-0.5110739251911643`,0.21504642995654907`,-0.287977699699532`,-1.954725239283734`,0.6010532562930481`,-0.4363728851472105`,0.9304884970460382`,0.7036385020159599`,-0.40845544858286376`,-1.6008205101665722`,-0.8626686629795616`,-1.1262119694567263`,0.39672344339707133`,1.0254717682783427`,-0.17781899639203308`,-1.2546487000769269`,0.9961490305377284`,0.31548609466496647`,-0.9678235271884709`,-1.2357016659618476`,0.15841231048856866`,0.5870414938535807`,0.7990918444833984`,-0.32943824756522017`,0.5480625307204642`,-1.450194231535476`,-2.3654622801409637`,-0.7232216813685628`,1.058273002627382`,-0.09640252885423393`,0.4080658846970141`,0.49144197470441037`,-1.1670317577802196`,0.1766808887720383`,-0.40969729170913904`,0.27243372601455806`,-1.2620523446657568`,0.8400598582084184`,-0.7683293562815923`,-2.130124542627896`,0.9391487291101641`,0.0713271454482945`,-1.610233974170944`,0.3237927879329964`,-1.8135050139932656`,0.6372696047188477`,-1.0966354788923183`,-0.8292057655770481`,0.5274493109231682`,-0.2884767298900386`,0.5435894409968165`,-0.09723947377686344`,-0.7430501312194007`,-0.915859362770848`,-0.18796011467020346`,0.9517118466679506`,0.6496449980703493`,0.40271849275743804`,-0.07847488016626561`,0.5339320062860972`,-0.7891336563405263`,-1.830154898076134`,0.1360398245626394`,0.5654025542246803`,0.6654899789039487`,0.6931177655869941`,-1.2538827225515037`,-1.1556121704483693`,0.8912673057827123`,-0.8427338315516693`,0.1784190303080005`,0.27016744554714367`,1.0007681510675837`,-0.2679276501045405`,0.23768034433245747`,-2.7146752826365224`,0.5294736376442117`,1.0831263546261027`,0.1661266598365679`,1.00725114346383`,-0.48362565582436035`,0.7463991216937774`,0.4713605442451173`,0.2553411108053195`,0.440192627931287`,-1.4368017581951102`,-0.528151278248877`,0.52133575503442`,0.15328460899893231`,0.7875035632120166`,-1.5692384977800389`,-4.302122284392114`,0.24227082988969992`,1.1166215725476816`,0.4961795320293732`,-2.179652229509866`,0.8720009112719432`,0.661046146683585`,-0.7588464436227847`,0.9260942974160302`,-0.4992675570967327`,0.3112746640679754`,0.8649737326088032`,0.8854802450233007`,0.33523373394948436`,-0.85416202235015`,0.16882762195304343`,0.34017296751039605`,-0.11626398190958605`,1.076346214134269`,-0.288260555045515`,-2.1668790667037396`,0.9232197084199425`,0.8533197158778576`,-1.383403181508606`,-2.984039025729693`,0.43734401235451775`,0.43071808652111265`,-0.17651448583335672`,0.38267231589575496`,0.9175335483525103`,-0.3146074620167708`,0.8608786256148973`,-1.4120791572358355`,-0.14582855510058934`,0.373121840484595`,0.040602899156933187`,-0.06736600799763579`,0.3958757159179314`,0.07882704313790638`,0.14919193703818304`,0.2491565251380356`,0.8940214682464259`,0.23680171649861034`,-1.3463097519874827`,-1.4482062818397228`,-0.8690961028164208`,0.38519690372821064`,0.898236668136293`,0.37726560899950257`,0.9896877889934746`,0.16753967156706803`,0.993987836279617`,-0.47213132369946015`,-1.438188743255133`,-1.6693175886917377`,1.0978586088257116`,1.0627418650732174`,-1.0144760272993034`,0.8507715362119659`,0.2998330960420878`,0.8752182112973522`,-0.36437995200823553`,1.0568335985421045`,-2.0083462520135273`,-1.1270407714032094`,-0.1632961097309279`,0.3343901838567657`,0.3667799312855778`,0.8704872812894122`,-1.5667391174582836`,-1.198997583927229`,0.1011664382269186`,0.9085294061452756`,0.21513739546935395`,-0.041859247288518836`,1.0297797128432944`,0.45659469557936294`,0.4352477854508724`,0.5578808354134742`,0.4762650726494176`,0.5654656861653163`,0.05286540894715202`,0.617643580647017`,0.900828219538005`,-1.414428670594117`,-1.3747853960736203`,-0.5017429982924199`,0.010986959020885322`,0.738927882847335`,-0.6086537619109695`,0.9760437950142746`,-0.6770910187111786`,-0.945211608593414`,0.9416777724150478`},{0.2859009300140345`,0.45567959985050754`,0.3785988826523653`,0.26962483829552836`,0.16756962867480796`,-0.43421245759902005`,0.10422260759146358`,-1.0102132929719063`,0.07669758499464202`,0.07821987185695423`,0.3068518814631792`,0.16690657772518475`,0.1882363813076468`,0.27190568604800913`,0.023789866580858514`,0.009966498908792146`,0.20453267298350428`,0.4737110419991331`,0.2319871845739069`,0.2354652900117192`,0.17960964930233506`,-0.14550301664507037`,0.27054519819814815`,0.2934616128612691`,0.14776460898968194`,-0.8838226230985214`,0.16864515159734525`,-0.6589773345716929`,-0.631873087339776`,0.2150816894378419`,0.3309793918216719`,0.1586360829777475`,-0.07894926970936109`,0.07368895582036387`,0.0778061583948364`,-0.029432462157138642`,0.30322492078359115`,0.14305438192377434`,0.39919540381626983`,0.1351208676006824`,0.16146694880362855`,0.4874968743327809`,-0.14965472894869392`,-0.035085480974176284`,-0.4614913937018327`,-0.08472493289970438`,0.3019313117075743`,0.22324038564516205`,0.1713909851799555`,0.03294485662712365`,0.14626094847679305`,-0.4614642180857406`,-0.12909885343095118`,-0.4104882794274068`,0.4706894165155257`,-0.15135540857745722`,0.09996560968336263`,-0.30311183390143137`,-0.2245508459117327`,0.33164731806001346`,0.30646042739853274`,0.32870377868146344`,-1.8201184140048636`,-0.0967236621899409`,0.3889105697382398`,0.09223283979324678`,0.14454188452688863`,0.4079493799250237`,0.17608629547510815`,-0.29155659694606084`,0.33326945004268677`,0.15946443379561648`,0.2333632913340791`,-0.6237649721178199`,0.27866502957488576`,-0.42961600342387873`,-0.0014150735283000211`,0.1897696272588061`,0.39742717087327367`,0.23703968010289556`,0.13756844742339802`,0.20745006898157187`,0.23091545305683894`,0.16081912475537524`,-0.0726136490911435`,-0.1108664162571692`,0.11740099078239423`,0.2614952972867876`,0.16644152022054767`,0.41110659288342427`,0.25679136747099623`,0.21529217531839703`,0.420084669289169`,-0.4858786698043986`,0.27169803586068947`,0.25463555559298995`,0.14430782701329403`,0.4123229123725971`,-0.797424352114405`,-2.1753026274027563`,0.26788580580159616`,-0.15685695074878048`,-0.048858319487553564`,-0.18326828418190588`,0.2696638488570539`,-0.4818945743914312`,-1.4534184002011905`,0.44728006950150967`,0.15945186198182543`,0.36021201940195724`,0.22246228328244305`,0.2792955600458775`,0.14089354034852078`,0.1666719681428689`,-0.002031297952927025`,-0.05222549378314326`,0.48132103780374885`,-0.2020178254995503`,0.1168664198613735`,0.2669811476261406`,0.10826553163829086`,0.17641578038368372`,0.4477732727419802`,0.44309621547743566`,0.5020568692162012`,-0.5013998656314567`,0.19530079666637815`,0.42275249252401054`,-0.1594968033826062`,0.7510934441899638`,-0.09738323011854308`,0.10100456420918594`,0.300611210374647`,-1.2428780850083783`,0.3701923339201081`,0.06700637290569766`,-0.6108856531107482`,0.24446120132012278`,0.45883587882401855`,0.15813927501284208`,0.23919096954425156`,0.06345208923798297`,0.07049925573690284`,0.26904770358275637`,-0.09292582233246131`,0.30183614313102136`,0.2382897628151598`,0.41652401111360216`,0.14171154765365584`,0.386612174288888`,-0.4283131129569439`,0.14593814538896102`,0.26681401970594104`,0.19827804044403816`,-0.020650901404882106`,-0.10283465533918387`,0.16194783119271483`,-0.08252522247345939`,-0.1558622919162218`,0.4019135798734565`,-1.6321156116861895`,0.2209477336396656`,-0.6858713067767617`,-0.47554873470450254`,0.13889112945734705`,0.13088101214898584`,0.4702278160981175`,-0.7875415127054823`,-0.47495256537295366`,0.26501446138317675`,0.13803327719659123`,0.3903207748924567`,-1.7015830165554298`,0.014406610965478482`,0.2409377785823762`,0.22951514094957276`,0.242943970178488`,0.4578439996129707`,0.05013373230357326`,0.13116963525561307`,-0.5167020182595932`,0.23618449417505175`,0.45230990254410813`,0.15875420291736192`,0.15057744318633276`,0.25167118940431016`,0.14033775425710962`,0.263580877145246`,0.3548963235601385`,0.30271355907229897`,-3.6464303101403986`*^-4,0.4730230502610468`,0.28221214109797826`,0.2506329369144901`,0.3978795117144708`,0.25278244539975625`,0.2309418718368855`,0.4275988081268675`,0.20191340385478476`,0.1007538382772461`,-0.3738505299315751`,0.22483867921489475`,-0.2741256253290261`,-0.47636222897791386`,0.4528884552853065`,0.3651808462895702`,0.4807785749348821`,0.32681413155809114`,0.3932111210044234`,0.3632499212591871`,0.09510519001230941`,0.46424789804458033`,0.026399660678818698`,0.18167620634651324`,0.027203993766183807`,-0.9698150085997759`,0.0901057814461699`,-0.2996831604087945`,0.12463006704588256`,0.19985052449649995`,0.3610661715247119`,0.34597908163491214`,-0.4886698616334795`,0.337609595479055`,0.4283719469772575`,-0.12675969531896303`,0.18056571815843941`,-0.5719808858216743`,0.2133771225657414`,-0.5213371692957345`,0.19979906631723252`,0.4677519326126643`,0.8228769803764738`,0.11236663729869183`,-2.2558528301102734`,-0.3344365829961217`,0.1525692252178912`,-1.2243479608583334`,-0.0016857645488397724`,0.4317573480681428`,0.071931310579925`,0.2407755786554594`,-0.13644470972101336`,-0.12367962274796111`,0.13102845554192125`,-0.05326730896821957`,0.1338944883911135`,0.09210825064695019`,0.25068952553009144`,0.0678104773300042`,0.41082673828829225`,0.2157562764844362`,0.42482015888559604`,0.1793629630544581`,0.08006397528084626`,0.12035059092777368`,0.2575196233647543`,0.43754406333921886`,0.1447444020306092`,0.2110346769095482`,0.24393668541958968`,0.47042889127830534`,-0.4498444082936461`,0.29833788803821065`,0.21933893036192675`,0.1341206145645483`,0.0915638863915882`,0.4215377548745555`,0.20399716494889622`,0.5027228891699128`,0.05423437328218528`,0.4651416879981429`,0.08731997265602015`,-1.0898375274265277`,0.2593729766359188`,0.011245671147487118`,0.15944975949978715`,0.1350948653009212`,-0.9798004275127785`,6.895845714750513`*^-4,-0.2575469340121389`,0.12637257562085105`,0.3824983972169546`,-0.23753568197060135`,0.02834649607350192`,0.22160887273340846`,0.2523219919952903`,-0.24437608989892795`,0.1991193635509321`,0.037793046803226274`,0.15902870783624495`,0.20110987582113032`,0.0299759207014866`,0.45151889084322894`,-1.9015527030776063`,-0.012246611185852166`,0.15946283908575093`,0.01381958847307917`,-2.2518874627761583`,0.12891518023789844`,0.06613004098273034`,0.16628274911286484`,-2.1238716319992363`,-0.5905117919082767`,0.3732061403932346`,-0.807405962106154`,0.013359640644329833`,-24.514561402960165`,-0.12549869885255413`,0.256534400678606`,0.31111332553953874`,0.1656389487450668`,0.26584063814569586`,0.23145273618973752`,0.3556309887707938`,-1.0827305453205682`,-0.10528737327958049`,-0.018701691574676327`,0.18017847941270831`,0.31850810193939044`,-0.33987857942562727`,0.4773500024422836`,0.46183905141169707`,0.1297828221557123`,0.4227377139954371`,0.2624815003861249`,0.19421105714642925`,0.1382303534812371`,-0.26696847542152535`,0.1463166094336115`,0.13280075291198606`,0.4822010076080234`,0.1164743716988357`,0.41724871255203627`,0.33047912640465976`,-0.19850750287079`,0.16469958584396815`,0.1282689787739106`,0.16027807257213708`,0.12122149634170919`,0.09605468624737978`,0.5138262857232849`,-1.3747541692228027`,-0.054839554440941435`,0.1354838053346615`,-0.24840079933245074`,0.18678813759599405`,-0.10191924321026329`,0.2019007333440742`,0.314994708669699`,0.3373880872845096`,0.1576975282602765`,0.2898791977454853`,-1.6501000135916395`,0.39828503387339226`,0.2693284862192056`,0.11680376580179358`,0.4331468838008806`,-0.027284844395248076`,0.04601014261468502`,0.028688076318491275`,0.26752374412963975`,0.34429498897736155`,0.22866843524894578`,0.2516445013846207`,0.18761544338589556`,0.07720651232557936`,0.18576635698350638`,0.3668367321410787`,-0.1364456149993977`,-0.0771586904244464`,0.3438460721492664`,-0.246516763076698`,0.26269249143115886`,0.4289211772854666`,0.34093252941816776`,0.34079507958818356`,-0.10548034734535518`,0.08932902918502844`,0.16140377980452084`,0.22804187064356124`,0.06043263394610312`,-0.12216803633780163`,-1.5405544343011435`,0.3099054110874425`,0.2813893711862495`,0.4144233953318085`,0.2115299747124528`,-0.06676224794740757`,0.3489079122785711`,0.18991389699677183`,-4.319265457447234`,-0.8780751934237357`,0.07261167449693326`,-0.2533325402906483`,0.16945871581051808`,0.2246720443332721`,0.29645934957692627`,-0.6908291488386017`,-0.5260731328164462`,0.31743648258537666`,-0.3272447677617314`,0.29426834405783203`,-0.1700431142699958`,0.11458581265355348`,0.3842394924904034`,0.22452488070394497`,-0.34961315504518753`,0.19432569286439477`,-0.050905680640236664`,-0.021291510009032066`,0.391147014826113`,0.3738716131926313`,-0.177665833987157`,0.42803775158988694`,-0.14226160458517992`,-0.09251809072010649`,-0.15578553595998604`,0.13113337255264929`,0.20086723495554`,0.24349508737318026`,-0.12371211019788325`,0.252484911062974`,0.20071906842847487`,-1.5884221885133043`,0.2832825159145892`,0.19727692056022653`,-0.02286020959342764`,-0.0312144973309548`,0.26357256728325373`,0.46018963067523266`,-0.01893924421056388`,0.4615646568664932`,-0.9499626725311813`,0.2370749346787972`,0.25297396427306057`,0.24096876306717754`,0.0734511740779287`,0.3371920448668755`,0.28199441560393823`,0.3751176946594365`,0.35297132242574414`,-1.5368110272136197`,0.39318595087366087`,-0.22061382394393864`,0.16696129046719083`,0.02299905550769894`,-0.7451929040466426`,0.051102786905537344`,0.20000505568004148`,-0.11441896980276395`,0.046797669338165274`,0.21990906050493156`,0.49600820732366235`,0.14115166649080932`,-0.024766532401592777`,0.13195203842945263`,0.44282118058760184`,0.24438180170829393`,0.29883853931554294`,0.06706873314622697`,-0.8569455838245587`,0.10165183516057846`,0.12710331766078747`,0.2231611787531519`,0.05449665545031288`,0.1833012614789542`,0.2022271869507597`,0.20062619367866477`,0.0992532903431909`,-0.2632258957582109`,0.14790406084185778`,0.3218307554323716`,0.19468932255411864`,0.39706395019540036`,0.13380598607116395`,-0.1413908747718365`,-0.36596943525725484`,0.1925948784387489`,0.20705267129021707`,-3.521430676947743`,-0.2060564139517202`,0.08504723719932591`,-0.0898058932989336`,0.45496390852966084`,0.16067375486226496`,0.35884466556073064`,0.24498978161841012`,0.30380107611996277`,0.10148229162860309`,0.21875219944836655`,-0.1235352914325592`,0.36873284270232376`,0.2845754351623918`,0.43924433278407593`,0.1510059167476099`,0.45276201915450803`,0.26473577639532536`,-2.537657324270093`,0.07625447250177297`,-0.17437205433737826`,0.4287228724248003`,0.19438255480564548`,0.21024226739577168`,0.05474973522468619`,0.12002246651093282`,-0.5451778020890353`,0.1844616743549999`,-0.1617514467995325`,-0.6082301693391977`,-0.22234643687232658`,0.3170569321801148`,0.007156435515817806`,0.47214590457195926`,0.21851214175896702`,0.4153720412718549`,0.2727481399082246`,0.4217072562765731`,-0.22635339152105977`,0.2054900825965878`,0.24803336650976146`,0.4335212100389541`,-0.005792590676794253`,0.3464653014713955`,0.2624437317452024`,0.11891064104822993`,0.11938718855205052`,-0.7211523621419749`,-0.2898640499960662`,0.15908948713505228`,0.3643835004464436`,0.3300805299227667`,0.2563649163300483`,0.06486644321800412`,-0.5755677378824776`,-0.621302927388416`,0.25559439115587657`,-0.11579819105797959`,0.1604756088803611`,0.322155421266961`,0.3576508927959911`,0.4877039957341585`,0.4564760969204876`,-0.20768763816261482`,0.09492128595875342`,0.13999019417549774`,0.03639127876254841`,-0.7133488022548494`,0.20725273860459556`,0.2337193805197692`,-4.482161983491238`*^-4,-0.3431910323740709`,0.23689898891966338`,0.24539344930832568`,-0.46654891548019134`,0.11062636167748977`,-0.5046020390474889`,0.28916020604272685`,0.5136855241291058`,-0.5898519032232679`,0.3305755809543604`,0.1881807657913698`,0.17887946142026712`,0.29766495285397426`,-0.43329059124726504`,0.2962412101489717`,0.39958297424427086`,0.40668244292612293`,0.3799259156784914`,-0.06209292296075773`,0.14525291750409908`,0.20795484604960446`,-1.0895064165729456`,-2.04494766559054`,0.20840968249535316`,-0.17049837772771365`,0.0975210476884821`,0.6264059731236873`,0.23762734913273942`,0.1254781827570843`,-0.05728684249835306`,0.18743559276845528`,-0.21059182259266318`,0.2619728200621064`,0.24542501364283487`,0.00993698292329312`,0.09126281052973095`,0.252331139519255`,-0.07308178754630884`,-3.0843840462753858`,-0.39365167045133403`,-0.04327132942110935`,0.28940749317993564`,-0.3826946812797172`,0.2941586558154279`,-0.24175385577805422`,-0.13159230936796992`,0.2733269245024749`,-0.8193517790726406`,0.1438243319691593`,-0.02271656726047905`,0.18032202774482364`,0.4240269880830318`,-0.003116655616188597`,0.3139204949901598`,0.40182556036160577`,0.32774754146323937`,0.4192754630607224`,0.30589772945125526`,0.2398765608430192`,0.19302550552042555`,-0.004015316856237344`,-0.33662442104726165`,-1.4606541829547592`,0.11490421308745713`,0.09321211058716397`,0.12141563562412638`,0.2743309510126677`,0.3033652863091501`,-0.28248858373071467`,0.16699127069089773`,-0.12896425530801955`,-0.4846169524192763`,0.15289976550341405`,0.3904636106158598`,0.16655533781356596`,0.15513993351797567`,0.18539053797564548`,0.12294773997656502`,0.26440733885463896`,0.23833824243377935`,0.16257529184986713`,0.27466803182327815`,0.22194307655829323`,0.39460793443129394`,0.2094777609323523`,-1.1257475879999181`,0.4425235789605833`,-1.9101848945147757`,-0.0971077020886793`,-0.09975409516415931`,-0.08891998889975601`,0.012347848071339613`,0.14125965040555769`},{1.2013791419807174`,0.3103599312433976`,0.1888618003945251`,-0.17118276395531962`,0.28217096372640765`,-0.4094791605109128`,-0.6248497908220867`,2.8633761932432686`,0.13679513570169244`,-0.4483280402049912`,4.156300223852194`,-0.45420915855982597`,-0.3242261824054627`,0.8642713753243652`,0.18202755779441393`,-0.04829448531724831`,0.8316633888179166`,0.9823694899804234`,0.4714458443171436`,-0.3470244515932658`,0.37885971955333697`,-0.275248484351153`,0.0017093107335954569`,-0.34605844065663466`,2.385912063826141`,-0.9271405326974631`,0.6806374373374707`,-1.1819953389644784`,-0.7408368481879318`,0.7815042171417153`,-1.7211596947759917`,-0.7521869852972654`,-0.9058250752549799`,1.0388577110755899`,-0.013102547924024915`,0.21456592076651154`,0.014631072934490046`,0.3039019257885107`,-1.1652794331150438`,-0.6008879923489723`,0.834248808504617`,0.6479069134891708`,-0.4092656360605589`,-0.1922291077014563`,-1.3278185084384715`,-0.4075197113072958`,0.0696151724204766`,0.08499757546782555`,-0.5465602629517852`,0.1758084903535476`,-0.6837459858388039`,-0.15195807188301033`,0.08310988790430633`,-0.706481673110007`,1.0942941627431781`,-1.5429214470940735`,0.2085436344398828`,-0.7389884910078283`,-0.5307379605411637`,2.5855758806395306`,-0.673234065529092`,-0.0752527452969619`,-1.4075993188817228`,-0.02623161260490611`,1.625353533974452`,-0.40222941044719934`,-0.42840990212789065`,-0.07970183173471873`,-0.6074474623613505`,-2.3007860250719046`,0.12070135746690391`,-0.05697904146503932`,-0.5581296557193962`,-1.566389436719294`,0.667563683985709`,-1.194463395321388`,-1.3863704143285358`,-0.3541360499964742`,-0.4051982505004682`,0.35297491986834734`,-0.07512754626325308`,0.5901177420194804`,0.34478059536217137`,-0.5344546978489488`,0.2136999998315636`,-0.28419566391305995`,-0.30560096487231203`,0.575449144065707`,0.1735158985173502`,0.8070921321150157`,-0.23589571237951884`,0.675173201843856`,-0.07719908116333983`,-1.0418942658768267`,0.9227687859160111`,0.5711428509344066`,0.11379730815286128`,0.5107532302844486`,-1.0418463566400762`,-2.064525461182778`,1.4086986796525136`,0.00467159794307649`,-0.5893517604657494`,0.9067776228061236`,0.49573627996436115`,0.5949612092740499`,-2.4587938268804304`,-0.05638722406935569`,-3.054275078819326`,0.969991451982698`,0.22434163860906536`,0.24332849777756854`,-0.1353048235289978`,-0.6844706237657437`,-0.2721502710373137`,-0.08724353610984611`,0.38039576418530663`,-0.2766534617640822`,-1.517089653744163`,-0.43262670609431864`,-0.10446688196817713`,-0.8287842652093832`,-1.0232016559937718`,0.9814395921730583`,0.5758889040997781`,-1.2773697496778926`,0.2901527122921741`,0.6026512015071551`,1.5845885314325012`,-1.0199867873953263`,-0.5441761149320172`,0.31767786492867733`,0.7113201071896105`,-0.6368015437282671`,0.6471313243975277`,-0.7405105729259682`,-0.12696839688727907`,0.22844126608092505`,-0.18680624648440863`,-1.08774038345008`,-0.19355574200023523`,-0.5917797725623802`,1.04300238938002`,2.567788477711122`,-0.06556055394644444`,1.2046021031621068`,0.669910034241885`,0.46770919480082024`,0.2716786610632866`,0.4123931190829569`,-1.9613094986378727`,-0.19344458598345418`,0.5706733633076392`,0.2878710161121291`,0.24450298458511943`,-0.8534358400148939`,1.1768763621256801`,-0.4105854828279276`,-0.5594557562226226`,0.854173174822526`,-0.9334831445417914`,0.6698369905132818`,-0.5889227191057049`,-1.707052410102396`,0.628267853827645`,-1.5538566858715228`,-0.1167668950172962`,-1.2943030105954847`,-0.46419582409280896`,0.3594931983331014`,-0.261248012469064`,-0.30747728419470816`,-1.1596170097175165`,0.6682939655275569`,0.3921213220849617`,-1.9746248529714046`,0.7250847414314099`,-0.11210270199199074`,0.08035276678735898`,0.01942077399651279`,-0.1388550387251942`,-0.1019421042556089`,-0.18973062447300454`,0.7342153110951087`,0.1780815688389702`,1.7460368969079056`,-0.8100826442690372`,0.5417626381539841`,-0.6702562455840049`,-0.013973227495602735`,-0.06247084507380765`,0.5675798805546215`,3.3212144193812185`,-2.0515462972180365`,0.409782533294332`,0.35315324041104473`,-0.01836286362351732`,0.197526153517212`,0.3032533225357601`,-0.2955859665294381`,-0.8681179346367071`,0.5876357163748487`,-1.0361118856890914`,-0.3088613636368783`,0.5304677674299694`,0.5399243638453449`,-0.026365998410086126`,-0.5588918919200976`,-0.28987507316995614`,0.6124859057514281`,0.5861882836137082`,0.09404301571109155`,-0.3661342640013248`,0.4609109090299873`,-0.3035084209946038`,-2.911914710167516`,0.3303918876850518`,-1.5297750237582541`,0.4159999556971683`,-0.19388590123286295`,0.468801809596942`,-1.3339099099686587`,-1.4129705668968868`,0.8030078057758647`,4.17751092340952`,-0.11638842964898412`,-0.3084346772437102`,-0.5946941812201659`,1.8682244209602508`,-0.13645070960350386`,2.6582969312167837`,0.596841540217981`,-1.359260094773025`,0.8502922480226057`,-2.420229254591016`,0.6049613352158594`,-0.055739929264016816`,-0.8045171175901352`,-0.027459966949344154`,-0.2101851844169658`,0.4281880079155022`,-0.8661174287176409`,-0.3036063123444169`,-0.9352903930865886`,-0.17067699400003497`,0.4254195189570583`,0.816978178863292`,0.48826790653993707`,1.2452878260414937`,-0.20492225357371197`,3.1484445381397212`,0.6297833702840907`,1.5818544286196108`,0.9407088991841497`,-1.1209523791839158`,-0.019910455668121656`,0.7997696821221546`,-0.5206876580233468`,-0.4429968556754702`,0.6122261965396676`,0.749240617754876`,2.6666411584217906`,-0.25751721492930085`,0.372072067317437`,1.378895111732029`,2.49870846339704`,0.6239051687582317`,0.8943590579280455`,0.36382160558895565`,-0.512545890829065`,-0.4292906352477609`,0.9132511443541379`,-0.4238778701882328`,-2.3879400919887064`,0.5999932476384083`,0.011678993935642382`,0.9571868314982922`,-0.834808922269819`,-0.5594438500163993`,-0.5303167198527438`,-0.9406939406967614`,0.001736541856934839`,1.9086355783144333`,-0.005190736271097028`,0.7971502176970606`,-0.5499106844717413`,-0.0710184623448232`,-1.2935847717400712`,1.209273794151826`,-0.1038629818490312`,-0.29225257290249124`,0.5291135034367851`,-0.15028713916978126`,2.1553676905737045`,-2.3572709914538015`,0.029112020768131693`,0.5314066158266777`,-0.00288954752590717`,-1.3189017744333782`,-0.7936117966940388`,0.7878004153321668`,-0.01594361505152397`,-1.6766914586525186`,0.2766387275538493`,0.1356379984194075`,2.508442171527938`,-0.6891278353173677`,-6.326483720220431`,-0.24709414850512895`,-0.7016555733932458`,-0.11697082208413484`,-0.4430713455139287`,0.313603814790795`,1.9827023760999654`,0.453415390661722`,-0.9791381533414125`,-0.8616912205374457`,-0.10527516112473206`,-0.19684778028504457`,0.5095327650397172`,-0.7355995588356214`,-0.42166398808064004`,-0.032052060493101865`,0.28718811076939266`,0.8661832468441881`,-0.46992281945656633`,-0.0713732146094719`,-0.22355522370178038`,-1.6105735414263875`,-1.145087734446502`,-1.1789396784143842`,0.7468288269518598`,0.5572065900977776`,0.5090231725831672`,-0.04670478288097575`,-0.46145228988500053`,0.19542903186654567`,-0.40546631207922007`,0.12339194226916503`,-0.03904821499758121`,-0.08412130547207262`,1.6038817269564019`,-1.1676118778859175`,-0.25182885865503074`,-0.563259235155345`,-0.3528658701814083`,-0.044750904217169665`,-0.42794491869658946`,0.9177586639610148`,0.5139248930239936`,0.30798194757569425`,-0.49947200877420195`,0.7214636942260201`,-0.931948022861065`,-2.7743877300186104`,0.8670938436627419`,0.5431350234411159`,0.015215240185196143`,-0.26602698876999137`,0.8277354777609209`,-0.4959160659918971`,1.4883805026734735`,1.044200191824149`,0.9561506367425096`,0.7101897164963261`,0.21532146753900386`,-0.24894952427735006`,-0.3313221525616718`,1.6130132483070405`,-2.3150213542893154`,-0.988842911055424`,-0.3513157464882807`,-0.28376491634849343`,0.19957626736872092`,0.8120541408736964`,-0.5347909652668601`,-0.526283766603535`,1.8101597192110188`,0.934516136011586`,-0.9251086926162556`,0.4797294208369759`,0.06086129190982027`,-0.1149967341021857`,-0.8326717455102145`,0.8665471543828918`,-0.05690121791917694`,-0.2677896488061343`,0.022289945631695368`,-0.3800325091479081`,1.5425074812454618`,-0.3517438726047768`,-0.8511883664333728`,0.7814628168622757`,-0.14199064962421504`,-0.2517788343770869`,-0.36400904366574816`,-0.15626001525129807`,-0.023450822829098134`,-0.37119339234593146`,-0.7086983349997122`,0.5206428962248917`,-0.24565716946931948`,0.8466699335287327`,-0.5073293078091946`,-0.14576632812978477`,1.0296416562534307`,0.08540603596086477`,-0.6853134225876445`,2.07083371544377`,0.4948164764386228`,-1.0936801198637018`,-1.1069768381868133`,0.335442802042016`,-0.9281484953823222`,1.7937457460644726`,-0.4553622145118559`,-0.18296213043951925`,-0.7920185908565958`,-0.37978971323479416`,-0.165883362277971`,1.1146997779065686`,0.08743981159072105`,0.4444095530457731`,0.4822580280693164`,-0.1006199319191812`,-0.5933513747915433`,0.19448554696001777`,-0.7505377097824101`,-0.6879495105093654`,0.7269780905253296`,0.07646104811621626`,-0.020546262444556818`,0.7377014839224248`,0.1599584716563324`,0.06768759044285623`,1.8616789698426612`,0.1418495799441567`,-0.6526834350702666`,1.7716369182490845`,0.5347826132076821`,-2.5092508409976584`,1.2982696043386468`,-1.3763532591408962`,-0.8017453473277487`,-0.09153338084130343`,0.40587212637267395`,-1.4345236273686612`,-0.8746396269826124`,0.3361543467534366`,-0.6853526134850108`,-0.3222428388121099`,0.6779539008232304`,1.8987155119164143`,1.285687354917527`,0.1440408707079968`,-0.7191195265080871`,-0.17274051411128355`,-0.295023585332023`,-0.1961794707382915`,4.24220051355496`,-0.25380424906801297`,-0.9055455640837228`,0.26664332834614696`,0.24632474481870978`,0.9885604796275115`,-0.656766070777543`,0.7321580412185325`,0.4167902849898203`,-0.04398384961702019`,0.11249798960312973`,-0.3592747390566717`,-0.7014347067931501`,0.8296309903968828`,0.7838220507646814`,-0.3049402711289422`,-0.2233674045128379`,0.14544626582965303`,-1.4120932058289508`,0.002113271190987136`,-0.7935122243676228`,-1.1194442977161805`,-0.6533927928172578`,0.5746134159324425`,-0.029382251922875708`,-0.19521290347194195`,-0.5777048583663534`,0.370546997034041`,-0.08203480831692331`,-0.6940829603529165`,0.19755020855730626`,1.6393870772989079`,0.8597242628336401`,0.2718409095234757`,0.3781239522801582`,0.02038246067061553`,-0.5908420570701702`,0.651916851095663`,0.31362301882264465`,-2.252308888772115`,0.05256874537041466`,-0.622795101982261`,0.152775460295551`,-0.6107377170756283`,-0.8807744110406193`,-0.2588653933975112`,0.489969335861686`,-1.266779836366851`,0.3943502022955177`,-0.17990904377550773`,-1.6174884797259528`,-0.19139712375859852`,0.5698607341833936`,-0.8905080635844301`,0.09881128946505414`,0.25889036246736996`,0.5368600276970137`,0.1681641002965957`,-0.762122879063125`,-0.4775317645649765`,2.0651483220616313`,-0.7289416032967306`,0.18162151770378915`,-0.2214528978722771`,0.6299475648972609`,-1.3077774787124905`,0.22951449658175133`,-1.0384223058558602`,0.10328160015602664`,-0.97826082372972`,0.7680457996104283`,0.4364598573121448`,-0.8949934526350891`,1.1971501790384005`,-0.5384732400604081`,-1.4205935559099108`,-0.47668309032354306`,0.6732269345507808`,0.1553357923541105`,-0.08806299796956243`,-1.3215448834701917`,0.16028742775164168`,1.1194104938588134`,-1.1126602896536424`,-0.8296921340279036`,-0.807767418081466`,0.17160321241024926`,-0.48638397377474796`,-0.6925006089544883`,0.8888088284198403`,-0.2754222275760034`,0.11064024376917395`,-0.44454029769734715`,3.413117130735469`,-0.21996290006696556`,-1.8566051619471682`,0.3798193761386807`,1.6514912192533353`,1.1553569148322165`,1.6109066625317925`,-1.070373489130863`,1.2353191294177193`,-1.0491800418939765`,-0.08174303783115988`,1.930218630565081`,-0.2837041749120147`,1.0467256948148826`,-0.3725292711546827`,0.5217899351044869`,1.773555961403209`,-0.1817897336230393`,0.2020954400060923`,-0.7913588671883843`,-0.25466509306832574`,-0.8658267649253101`,-0.01940671219958814`,0.6284238840678523`,-0.4000355380105754`,-0.3448155364684333`,1.780672206973675`,1.4202457596386389`,-1.0639186607529987`,0.5588820695836995`,-0.20754161149114753`,-0.4734755530209848`,0.6370130035351731`,-0.42759770933791535`,-0.7672682748696831`,0.6635567430269506`,-0.0035523784075958934`,-2.3411882223947917`,-0.9296808552755024`,-0.05720126243038838`,-0.056003623563874144`,-0.6732611375177354`,1.1003041381022811`,-0.04794487603096157`,0.3792413867692449`,0.4505472516156023`,-0.43728753693648204`,-0.10334947650796644`,0.30793778017873746`,-1.0379601284661748`,0.045747714340230464`,0.36685242522164185`,-0.9539559581679923`,0.29145662614224876`,2.5485101030700874`,-0.2950822868947517`,0.41840348693028423`,0.25766181297774654`,0.16542407451065974`,-1.064115931106913`,-0.6622057420264014`,-0.8656254574965756`,0.2960833504145769`,-1.5710855802847514`,-0.8568743612489691`,0.2352362468570331`,-2.2821053752560068`,-0.8623952110396075`,-0.7069132044913045`,-0.4615600348408989`,-2.2803614145381754`,-0.143043696639088`,0.3301296834941443`,-0.6533316629184069`,-0.0816274457672872`,0.2669089002776072`,-0.4704267387298559`,0.1616267760126848`,0.8583477092762168`,-0.28690991076365385`,-0.4316423949242492`,2.220090101159397`,0.40474991145479244`,-0.5890293944965057`,-1.207987098552246`,0.32863647759623477`,-2.5717658877130716`,-0.9632976017201585`,-0.3424615357356158`,-0.1474404589834258`,0.005503739328815819`,0.189917647054997`},{-0.28838010559299976`,0.5167276719332274`,0.5195191945282625`,0.17098541146206525`,0.02361385095830576`,-0.7074929967128243`,0.2794864311295304`,4.303194700148415`,0.14787518630794874`,0.06572767910338456`,0.7398406039110575`,0.3122712547718732`,-0.14870663950760474`,0.2518861844090599`,0.07630260774647707`,-0.10755553362410086`,0.3385200969027629`,0.6672823229811924`,0.18299756660180763`,0.2533336374663358`,0.3446105568393149`,-0.359209460896749`,0.09887496540432067`,0.5983886296423584`,-0.9277018499391029`,-0.9479770093091923`,0.3426553868967074`,-0.9271333170681677`,-0.9204574787641976`,0.19223010733408066`,-0.022674453653905722`,-1.396122745038025`,-1.0047656949729338`,0.16395290229059398`,0.03003865146113805`,-0.03940374365970743`,0.4168529177849593`,0.1148365300389052`,0.13093821618470763`,0.30979068327672726`,-0.06554556242125159`,0.5221222541065839`,-0.3380338638980204`,-0.17033274016958624`,-0.6266394958049114`,-0.07415348858430343`,0.43216003872779`,-0.6220355934030329`,0.13138657491685424`,-0.05344040168898541`,0.09404865524290434`,0.5281095297213527`,0.037863125203683616`,-0.9531558411182561`,0.5902070820807668`,-0.4513745574376068`,0.3907375494916889`,-1.0751165542018661`,-0.4678995978514166`,0.8416147507566906`,-0.17616787645131027`,0.22302710795274613`,-2.7701899610201974`,-6.391009845417656`*^-4,0.7911846254145992`,0.15389867426195775`,0.4425176958597663`,0.5156147180644071`,-0.49306987173172495`,-0.4527515381550405`,0.22406692998008051`,0.3933393595662555`,0.18638030730096472`,-1.10174176404177`,0.3251212166548149`,-0.3673432706330777`,-0.1448735956352644`,-0.054650287758608314`,0.32694213527992233`,0.36146127479917345`,-0.02223044171626963`,0.36945398675261437`,0.13747835207307446`,-0.1060075853534658`,0.06574722498357638`,-0.1105357103351084`,0.13069545731550958`,0.25687327538656834`,0.0899169812620254`,0.37439256754382977`,0.37323830506656325`,0.48681371101972426`,0.4869063795094277`,-1.2408598220297566`,0.02474934968196181`,0.47918113405257823`,0.4593827130224929`,0.5721487577315499`,-0.6043509321087837`,-0.9101333601263428`,0.1379904737430661`,-0.3168464131069526`,0.04081720564270086`,0.12777398265892012`,0.16590411635189173`,0.9838371987022108`,0.13145361229482988`,0.5238947171266126`,0.2549230482481272`,0.7453306161135785`,0.6287505924091473`,0.3620661068621496`,-0.08969949266866556`,0.027322358088787427`,-0.5979957735305411`,0.19546288947084417`,0.5488256656980861`,0.11840416911498497`,-0.37778582436210506`,0.27324185678525387`,-0.15159203361105447`,-0.7342553466360316`,0.44548863326820687`,0.43364408478396854`,0.5752810917394423`,-0.3441119040995182`,0.35537759838205`,0.5620962594229456`,0.262848634087752`,0.5352417777645785`,-0.13880493409437533`,0.25366141809412635`,0.31894814046504577`,-0.700038927245031`,0.5579699529389093`,0.08318581605074299`,-1.0906474831230306`,0.2212788418204399`,0.21359734176527576`,-0.4313868446689069`,0.04970197895727996`,-0.29441080532947317`,0.5245568457848651`,-0.14910462271541922`,-0.07585191340493533`,0.32554261553697633`,0.14298322874080105`,0.16379532728536159`,0.3729677604946645`,0.5885338007476488`,-1.0546850740170515`,0.030666023876925373`,0.10633118159030171`,0.4090925049427044`,0.37324142062068216`,-0.5263154143044001`,0.5732477755211713`,0.1595527021283127`,-1.2176420897909677`,0.6414387485193075`,-1.0186379290550696`,0.46248786984983326`,-0.4516359065930246`,-0.5952510172947403`,-0.1673835075405961`,0.3151117487988217`,0.44546882340283694`,-1.6764577026965022`,-0.9041055132774055`,0.21877221514744294`,0.32305702898573246`,0.4456496677731546`,-1.5169498422828034`,-0.06605329371756427`,0.06758600758064852`,0.15367254379702172`,0.3220564903792428`,0.5207117522079469`,0.124904487553214`,-0.38939016339761046`,-0.22850552052617631`,-0.5021365253024642`,0.45375151040603956`,0.4365624003342419`,0.023455818319244048`,0.5472508094609783`,-0.197339663472581`,0.1598138044567625`,0.3343598587887922`,0.3335253707152752`,-0.0068393284470108446`,0.5007064272601649`,0.4924043189007948`,0.3156687902939458`,0.5163755809108183`,-0.15317764980375825`,0.2597189272952731`,0.4790433761827258`,0.46172041485658366`,0.1687976013544616`,-0.6812030884899561`,0.40219275437673013`,-0.9006463450824099`,-0.4035008350661298`,0.5092234674431481`,0.16474663300226497`,0.479409008346964`,0.36037963602259676`,0.2751667774305409`,0.4781969237680207`,1.3677671044316189`,0.5193000096921969`,0.27425667923611885`,0.004145159301099167`,-0.06382822575090215`,-0.7254087107108785`,0.2123511900043637`,-0.6493587178042727`,0.172414919301501`,-0.01402932721732287`,0.13907350209296596`,0.4430626264988294`,-0.7208116902048313`,0.333114273300694`,0.44108143501072905`,-0.38514595276662345`,-0.6684250006770479`,-0.29054760972854515`,1.2839041342423305`,-0.42234784395106284`,0.3468197457656284`,0.4191640610074743`,0.5241789516390334`,0.3592789638804123`,-2.9675786105608313`,0.04880869793056454`,0.33320660745554403`,-0.789527755042064`,-0.031806138991127525`,0.05708634244511119`,0.13128955204554169`,0.0655387440437304`,-0.08272864619100562`,-0.23806804321308844`,-0.014472100148507753`,-0.15292563240583068`,0.48112711680115744`,0.1663665338938142`,0.36585468484119754`,-0.10899167201109247`,0.3680146157341592`,0.538242412912936`,0.564845149784834`,0.4039867444315004`,-0.1464927251480201`,-0.02252820601240315`,0.045354009829501774`,0.11465797831566842`,0.19548117437944376`,0.29827228250522686`,0.10767941500403513`,1.9436073573013648`,-0.45677442441743576`,0.061369004845568`,-0.30206389191485583`,0.7000519342243504`,0.3723234920491407`,0.5360886177210217`,0.10311945554501975`,0.5486385029654792`,0.21781666509688263`,0.5550831735322409`,-0.28007334976888504`,-1.3940302157928717`,-0.25956030280363673`,-0.16955819490058496`,-0.9437938511723393`,-0.9183598065939524`,-0.8166339573729744`,-0.027495728797872272`,-0.26139654337859125`,0.20022826536107824`,0.6198617318167058`,-0.14253106143610905`,0.2531701415427097`,0.24515575327562747`,-0.020969049620347686`,0.24794765544070962`,-1.035932267960502`,-0.06728715493538705`,2.240307936626372`,0.5816463478308824`,-0.0930314237211775`,1.5524184135108687`,-2.9732998966044506`,0.01980808216427568`,0.009179497248637095`,0.00924831522846323`,-2.009482984345626`,-0.09483053223771282`,-0.14638576161701083`,0.3931099072597347`,-2.975244248462036`,-0.541900408596385`,0.4528383813037741`,1.6319729163444323`,0.11760921822454976`,-19.613464485613058`,-0.41610563291909347`,-0.48979237962707123`,0.34164182004642835`,0.3625467638771309`,0.22732586899523943`,1.1704567446947074`,0.5611982220883587`,-0.6769061319450895`,-0.26482236649935953`,-0.10547542340478848`,-0.053927743854796865`,0.10511587409379759`,-0.5701941640389705`,0.4214826298100703`,1.0005815668976534`,0.2960293720265025`,0.5726511738728965`,-0.12103038662664346`,0.4647026590828669`,-0.7199813825274671`,-0.1456470808014453`,-0.692439238539326`,-0.1537746493308568`,0.5373420778016815`,1.1582913407249904`,0.5402623126724143`,0.5487651869283108`,-0.08290590966907568`,-0.31905760247195825`,0.26357308460148565`,0.08290297698265343`,0.07351794702185878`,0.0037578535237297534`,1.5552681935004582`,-1.2228158365758586`,-0.4236722986152514`,0.2591789219292382`,-0.31178871783110496`,0.37705154670213986`,-0.7168981705902886`,0.5293955085940519`,0.32771243456399346`,0.26252919738628294`,0.3771470687386019`,0.3357566158693158`,-0.7623530052508617`,0.31783364850029383`,0.24375533704983998`,0.27937798870406305`,0.4738767013100838`,0.06811420538858734`,0.04039625156553095`,0.03993687848956745`,0.6344890568453665`,0.3344841678740012`,0.4613436560991405`,0.16646244731342974`,0.22615673902408603`,-0.1055473414199829`,0.255562835431931`,0.6777269268645855`,-0.5735800740024178`,0.008550574242409254`,0.3428058091578413`,-0.5079400340955822`,0.03536687820944016`,0.6857482486218929`,-0.10888251017397636`,0.6599079596374775`,-0.4769452599867001`,0.3044628236713584`,0.021874391418533215`,0.24289147484390855`,-0.35873824519110753`,-0.1985981412769413`,-1.3836350710625376`,0.15807692840867782`,-0.25098699066985497`,0.43072313452066463`,0.028917901373255513`,-0.16522471261255472`,-0.11948145005662403`,-0.2641824042796414`,-1.0271405053833373`,1.0585801357367572`,0.28030996530552504`,-0.1920808844408934`,0.12966938282640378`,0.2896086508750684`,0.603687816457109`,-0.3602411272914965`,-0.03489926024105948`,0.37666612637974195`,-0.3208737465566693`,0.9827584309586799`,-0.6156298893286535`,0.16488254483549078`,0.4350574464400938`,0.11477891470822646`,-0.26277906852598376`,0.6452808904253958`,-0.32565306339686434`,-0.31609820082681567`,0.3583937775893438`,0.5292829811328748`,-0.6362832228639355`,0.8148500290564353`,-0.3173543070538109`,-0.1328095904725182`,-0.23899014330832294`,-0.26500108760709884`,0.03543961057777089`,0.32416091573998057`,-0.05051520151091085`,0.05551544572477524`,0.023838044869416007`,-0.13973675422885437`,0.17810301951338225`,-0.062987198529904`,-0.19705497235177644`,-0.0577135709533483`,0.20837736822100875`,0.46363461305589554`,0.01024187183764252`,0.5643977027906307`,-0.07450891799557276`,0.6004067003881789`,0.3678045102126067`,0.020192143371686736`,-0.03721868109361527`,1.7902289198280465`,0.32272007724942986`,0.3760534895439534`,0.9548102203975732`,-1.4790646342086198`,0.2905293236106881`,-0.08506451022628377`,0.463164349558024`,-0.16835440568831592`,-1.134080241142301`,0.060852906835270885`,0.2514591647415533`,-0.4247145844856064`,-0.07989663938715516`,0.4870110883237125`,0.5598596804000214`,-0.22906228799753242`,-0.08720752773578089`,0.5561300371414973`,0.4020752745943687`,0.06758115463834592`,0.29225003685882117`,0.06327828395303293`,-0.351572563922902`,0.0758991911166671`,0.30800604770500767`,0.31863670254884646`,-0.29823995978633244`,0.24370244425671245`,0.4099513515311312`,0.1666579165766388`,0.11049443663890056`,-0.4223487781533656`,-0.7781405652258433`,0.5803281762214639`,-0.41866732651955074`,0.42678839594371215`,-0.15750973509805616`,-0.11110941881053907`,-1.2466182510848736`,0.1943350188584993`,0.40013696034825363`,-1.8815338791942333`,-0.5027652026720645`,0.27311204685933493`,-0.19968512386690918`,0.5496032334941052`,0.11239661690357387`,0.545957708749577`,0.5268530975344609`,-0.18067264633390082`,0.14194191792783487`,-0.1632105716597061`,0.11300971047621278`,0.3350280934405767`,0.2677759174184878`,0.5098628420602879`,0.36713032093988657`,0.5555975966644866`,-0.1778268348774903`,-2.620241625280751`,-0.1042547738232193`,-0.12933865147158904`,0.5325435448034634`,0.4461734028664827`,-0.04480509880321141`,0.013094711171397468`,0.22424794280930768`,-0.5319333710396438`,0.25964400165404145`,-0.7559695978367675`,-1.6541825481813845`,0.0705732293409598`,0.5932842701768594`,-0.4913369378299388`,0.4990686449917613`,-0.5522867434998678`,0.5481752424764303`,0.6000783515908803`,0.03471319193705304`,-0.28401058638350185`,-0.1521110988086871`,0.27882428507019075`,0.5261078407818356`,-0.3322581690215495`,0.1791676953683219`,-0.7714152955266108`,-0.10292120420375046`,0.05223828616935778`,-0.1122595250015686`,-0.4737721748513517`,0.3194462429897993`,0.22286848928760902`,-1.1632602386097413`,0.3425112423403174`,-0.0645490229544258`,-0.9635789945620586`,-0.9536203116565207`,0.31217530316503705`,-0.07758356743618755`,0.27416984280350937`,-0.25908937622543976`,0.47798063529117224`,0.5753472020480117`,0.5081474147729951`,-0.4560153457567417`,0.04438563453633271`,0.10294534906892405`,-0.11449135406452741`,-0.9203194623960489`,0.33538936651904255`,0.2162509359533016`,-0.09594121397825786`,-0.8527514677893514`,-0.12890883980443033`,-0.02052709069101003`,0.21857167253032203`,-0.06021328459092932`,1.6412622081775106`,0.23513072690526937`,0.3671134851938038`,-0.4498460710154845`,0.5037783670265877`,-1.9906803627987855`,0.511904901432107`,0.8313555512323573`,-0.42000890446773026`,0.4662470761660465`,0.29613084634709336`,0.5525089908926678`,0.3145012553228878`,-0.1515286347034395`,0.02908447620901399`,-0.8443326209782506`,-0.5535254335657652`,-1.6864904115727992`,-0.2666950807722038`,0.35637403169131776`,0.5936465886290381`,0.34423862420245305`,0.39123662458947406`,0.7072372908779718`,0.05370449051440553`,-0.763551468007693`,-0.29067287457483637`,0.19046532082734494`,-0.03620656654944272`,0.19929357354541208`,-0.9427882628589586`,0.48956328317371234`,0.014488804270521637`,-2.0357370882157366`,-0.490933765590946`,0.1980054649704984`,0.5494471965009634`,-0.569646898657675`,0.32617510784743936`,-0.1635220073555635`,1.1140163937069774`,0.10470624101661725`,-1.0110338824421095`,-0.07591674897922907`,-0.014019464913174202`,-0.7589291469940893`,0.5148016433021431`,-0.3162965866357364`,0.4557159168436262`,-0.06818834294115522`,1.3481776877121316`,0.5019864917698913`,0.5298221217904518`,0.01463634639734488`,0.17343163209129986`,-0.4907556959302679`,-0.8778127190429742`,-1.040140867996797`,0.1172283880513825`,-0.4721236180773173`,-0.6708629422269782`,0.6131079749280967`,-0.42147367374624584`,-0.34894210339600445`,-0.2730406131271286`,-0.2521130676932684`,-6.571705034674816`,0.16828730497433517`,0.45498780328360716`,0.36499000545708904`,0.49151509876096655`,-0.11434932676016324`,-0.14960322947975102`,0.23147816923427067`,0.45111954863978376`,0.41443938676364633`,0.3128177090633887`,0.8715246029645751`,0.5223025360168253`,-0.3461319477182055`,-0.7447292456299127`,0.5308565083183678`,-3.3873324290224245`,-0.3731198530711171`,-0.034223516378474796`,0.22270193529251905`,-0.144916743947277`,0.013349200319578796`},{-0.20504028570204`,0.5358001533854798`,-0.9132655445668285`,0.20338960290781619`,0.5566569949402084`,-0.5282117581446669`,-0.5872570852707064`,7.10878515938258`,0.5004016399601452`,-1.2731595819708768`,1.111831424086012`,-1.2985220707943306`,0.540084153450376`,0.6914572355860203`,0.39421349650115267`,0.2867091960352731`,-1.5812464904567562`,1.7138541778885448`,0.5162527690613058`,0.1447082788521126`,-0.5492735504473375`,0.34228174016630525`,0.362275410321419`,0.9970368594715127`,-0.23569580799053436`,-0.7650849569704995`,-1.7909938002800854`,-0.4797702122498693`,-0.3855940611815447`,0.5146686482617384`,0.6893425278963204`,-5.8169149968068705`,-1.6182201626030996`,0.3567233308795072`,-0.14292824378546842`,-0.32064958363986384`,0.41118196354885267`,0.4982749108108209`,0.5933777408925878`,-1.5958805305196169`,-1.071711572796916`,0.6738094881401715`,0.07024520700066567`,0.20548322270904412`,0.025998715572006767`,0.3440306982300855`,-0.8496482166016717`,-0.5108457835760087`,0.4501080358129289`,-0.5831329653896299`,0.44579232872217023`,0.7753962487246833`,0.5189045382598044`,0.09961512549924206`,0.6930351059493267`,-0.051025182491758456`,-1.2869041462191828`,-1.0756158672892115`,-0.15016702341908691`,2.8650443193156168`,0.6589233750735726`,0.6113617785813013`,-0.7717242988658957`,0.1506901306192192`,3.1626317988439396`,-0.5318073409271337`,-0.5880217487765982`,-0.5376484390371676`,-4.467250319305271`,0.09691907552724521`,0.6392233402985328`,-0.5034682599780963`,0.5060264726618299`,-0.13358733726535352`,-0.14005669962002204`,0.616796399321621`,-0.9365387862196386`,0.07354905239544979`,0.7375010377451828`,0.21855032125596627`,-0.049588824220960996`,-2.8187656767135802`,0.5282026894553313`,-1.5998181299745269`,-0.20136792124016104`,-0.4524820603951196`,-1.4016028836396353`,-1.9481230751457268`,0.49295030039766213`,0.5917134085338697`,0.08857124074851236`,-0.5830931843743146`,-0.7980010255709507`,0.3521518353923124`,0.3641045785789074`,0.6347998411373275`,-1.598311440435268`,0.5244526963378922`,0.07058696704744902`,-0.09242117798075115`,-0.03678422930773766`,0.18970844590521072`,-0.41354402878741836`,0.6854361208766494`,0.045466767219591205`,1.0782956608067205`,0.4516047590509342`,-0.4837008000980852`,0.794597303436182`,2.2870330340245886`,0.9535331072460583`,-1.2358736751976853`,0.23065495877675343`,0.7433905320192357`,-0.20543235637874924`,0.13107696718345901`,0.6220216790181443`,0.16270403827465255`,0.14791309303621147`,0.6478056381713807`,0.36883202984165414`,-2.0561327128553817`,-1.2800153342699292`,0.6622838875803821`,-0.7512713248512477`,0.7304978910773925`,0.8560785893037741`,0.13447599118677123`,0.34974936592229633`,-1.0375920854951177`,0.6683578836070628`,-2.0472355317430506`,0.8148909652755991`,-0.42013146081290687`,0.3219527291689407`,0.5621583647046771`,-0.49892641248765146`,-0.44946260916626724`,0.7849181460866457`,-1.1324653172421915`,-0.21803290754914512`,0.2694604425496156`,-0.6426536128823287`,-0.7317049257647602`,-0.18212264643615586`,-0.3021563435954276`,-1.562944026167958`,0.2355755005174827`,0.2581589165843866`,0.6873114726631099`,-0.44853775383728706`,-0.4358019235873874`,-1.075657205696433`,0.4075865569520961`,0.7183796898661605`,-0.11082753882128968`,0.28983028581965964`,0.4531338365009209`,-0.8921582468914093`,1.0303340866071409`,-0.3238020696265268`,-1.026419377531571`,-0.5536624687290606`,-0.5513312632314741`,-0.6551404180632441`,0.8284487152692439`,-0.05797583571203352`,-1.4246390320310351`,-0.14699767935507912`,0.2526287379259568`,0.6803800981168842`,-0.23539438508922325`,-0.6057529508819695`,0.5774621140890074`,0.4645368839306951`,0.6640091957099403`,-1.09797103531487`,0.20441290850735122`,-0.5067347206027667`,-0.6744550263260538`,-0.07787766608303343`,-2.0230730635176504`,-1.176255355769934`,0.7732172944635111`,0.41354940421394404`,0.8343605405995769`,-2.040190387115747`,0.4870811818396765`,0.7496199876763546`,0.5008386818972754`,0.2559216140249023`,0.05546111302973723`,0.8501174576990014`,0.4264744309011894`,-0.11555100689225777`,0.04009144114345798`,-1.4803992080110535`,-0.5715648547904842`,0.40377075614784125`,0.325684773490704`,-0.18763273600191444`,-1.2518104214378698`,-0.00444605734766456`,-0.5951732650504715`,-0.36825994752556934`,0.5077317104391026`,0.32163172462805384`,-0.5758771512970278`,0.8064039759605883`,0.8752956858869471`,1.1257019629057234`,0.5305178958646097`,-1.0725113849404178`,0.38393533964642423`,-0.1932752946011032`,-0.3964147066362698`,-2.074842502517449`,-0.6287458734460533`,-0.11480199566508797`,0.38600070769348266`,-0.25796015349044454`,0.8047427033453205`,0.37901638232740253`,0.7861568425413876`,0.7428668300048007`,0.5180359056407489`,-2.0892159187636317`,-0.14351659095554586`,1.919352647688422`,-0.21661104926295016`,0.5637436589222341`,-0.003769629937122862`,-1.5323882100343733`,0.6777569749963726`,-0.8503028481359913`,0.14256599450471957`,-1.6341050351450117`,-0.3865233804996163`,-0.04543713375007194`,0.5420018647054701`,0.23896626002972454`,0.0025150219757157626`,-0.31943261930074435`,0.09764469675931964`,-0.011660521683031347`,-1.3036200688756172`,0.239594587778996`,0.1577243192938896`,0.5994677538327476`,0.16900665012111582`,-0.613059898616054`,-0.4260317991589675`,0.16027079440782177`,0.7094509791739332`,-0.12531112068004902`,0.322935517105872`,0.49443833118957226`,-1.6600232228956129`,0.6531386077410606`,0.42681640620502537`,0.45573764688737295`,4.477922778671576`,-0.799359856674085`,0.6345300700004205`,-0.3572784759518185`,1.233088960276847`,-1.3880038242535755`,-0.05790302999446863`,0.4901695469487336`,0.5763800581843856`,0.5543952611567431`,0.6540757667662486`,0.1285595423934075`,0.12981775551532063`,-0.47994546284090683`,0.01084240109527877`,-2.088047749013763`,-0.332485987738116`,-0.09895743158349332`,0.12052399272404354`,-0.049954854170971924`,-1.765860203289696`,1.6193511520345583`,0.09679217150012688`,0.4979439436717231`,0.1376679473665648`,0.08819954848791965`,-0.8189424322736094`,-5.118021253176612`,0.06619298756917733`,1.8329021043045879`,0.2693295028355257`,0.20041295075072324`,1.84409502234574`,-1.1056305904134676`,0.5426929578972994`,-2.0169082459851566`,-0.08295661042791266`,-0.5504285894924165`,0.5425671801464595`,-0.03713217763648915`,-1.1651048042666237`,-0.25623619443610085`,0.3466344295951481`,0.8137674041420477`,1.4486911216587266`,-0.12287916076090614`,-1.7551198467223657`,-0.06472340216326816`,-0.3329971408170237`,0.678207484634147`,-1.264996552880075`,0.4721167121776362`,1.8966211448468995`,-0.20905569991322487`,-0.6711070882772037`,-0.007831125831847393`,-0.03278260940838744`,0.10686003127643606`,0.4752169030049152`,-0.14405930643484297`,-0.2642534503204388`,3.5128677152907093`,0.33723026803071665`,0.6372796876546148`,0.3009969806058071`,-0.5045885474638204`,-1.017332410868585`,0.08177950548211604`,-2.160488691461781`,0.5715703175080601`,0.5215068698816353`,1.3443345843638264`,0.8854947671843454`,0.8641888548338336`,0.29402441979265365`,-2.0735737916051304`,0.39189589858361357`,0.27946307681950416`,0.29952119406565103`,0.3148097505806565`,1.8736195794022696`,-1.3205275185224903`,-0.5204509171525422`,0.389826181207546`,0.542737684784456`,-1.549811168511732`,-2.834050473148355`,0.8669640456244251`,0.2013253498528292`,0.6404521687058116`,-1.5978923689706641`,-0.11476618859034936`,-0.23126419955015098`,0.7285474728318904`,-1.060390731066677`,-1.7247116751241964`,-0.7440329653268947`,0.5099815296704017`,-0.7079348077965769`,-0.5211706199620488`,1.3988026412737928`,-0.06972033352360285`,0.305438265497847`,0.6611822514575358`,0.48091311884654375`,-0.3909970915478758`,-1.1535314231976699`,0.9538169151275798`,-0.6114969609603039`,0.7643481592302191`,0.28754370500308063`,0.03818996405401041`,-0.3583397623733141`,0.9646073872129765`,0.3672069987297248`,1.0306398638546777`,0.360367549126252`,0.6530942007259286`,0.3288003756118456`,0.38652771363189226`,-0.08629930331775254`,0.6806324450559416`,-0.19198041273991265`,0.702034032003778`,0.2944979767311056`,0.5078616367423625`,-0.2510994849982728`,0.45407067838254456`,-0.11887272373383233`,0.0887611871328592`,-1.4579701516425472`,1.0028135672824654`,0.5931445119416694`,0.01256596966112387`,0.2989085051358139`,-0.9052199817675767`,1.2491350664871073`,-0.21073090440393066`,-0.6019853752507761`,0.6734785623836237`,-0.10802108756822064`,1.2101852113137457`,0.16707187115899133`,0.6836397014847932`,0.6116603296454464`,0.14089801469019425`,0.2874907789911206`,0.9328300379441283`,-0.3167567179605812`,0.5857420970689494`,-0.7284801619038976`,-0.7642194404880649`,0.6595228374753492`,1.026741824951013`,0.15902460899379478`,0.46965782302811765`,-1.0999224833486825`,-2.0602812507440142`,-1.009514785786375`,-0.07999801872437926`,-0.007448690397926424`,0.5030723321200177`,0.5101145663482823`,0.6628628073320274`,0.5907799327795237`,-0.07482901570366188`,0.5191522997429596`,-0.1303827180266324`,0.7301889285358303`,-0.7972740069408601`,0.1647691759728953`,-0.05140220111555835`,-0.03571961665489724`,0.9871130859102346`,0.607782884545477`,-2.8710141674917766`,0.25494329715019026`,2.3608680555007417`,0.48757333556342547`,0.5549092652183154`,1.3571913961090387`,-0.6081410736602008`,0.8187637095498165`,-0.03882532754411388`,0.6878349081126005`,0.21835493219140525`,-1.0401147018445882`,0.49464246117450217`,0.50896182166061`,0.2864590520495519`,0.4630423735949103`,0.839465303059669`,0.4483177137877535`,-2.594264862740468`,-1.2904849227925326`,0.8839075646577196`,-1.19077125723798`,0.4674333031302289`,0.43855287183350744`,-0.10273828650648334`,0.2544929190424184`,-0.21687711204240823`,-0.5933602906773986`,0.38551706156533583`,-0.3351008727645541`,0.49973544095428524`,0.649722298542701`,0.6791580930907062`,0.022985627602892692`,0.3414033424177125`,-0.4141796713005445`,0.8995723129979133`,-0.9889171386871074`,-0.6399017256472452`,0.46491230556664026`,-0.32907168181840785`,-0.6860171876529457`,0.11889510884402289`,-1.6142921172733906`,-0.8287365146210192`,0.045817388233435966`,-0.5525724457467346`,0.12838454355464402`,0.6961736222215822`,-0.10119291201214486`,0.28898940260816997`,0.43889015446262447`,0.563630343259587`,0.6307633160700126`,-0.5227474985299123`,0.10871986772827785`,0.7694917239471745`,0.7662330765483273`,-0.08778392484543697`,-1.273022962208173`,0.12230435885196281`,-0.3194721909680983`,-0.7911048398597877`,0.05799563486968306`,0.5697528869213114`,-0.007155506731177139`,-0.8167232623816189`,0.5536576684651086`,0.4324247096252543`,0.32529243392247925`,0.6734790841343924`,-0.531184158320984`,0.26371975990571506`,-0.154361534262926`,0.03222784812556662`,3.6511388506466385`,-0.29975639675166627`,-0.11137599871266414`,-3.950387124245999`,0.21370900913853122`,0.9019727770768605`,0.5633378178395663`,0.3662447228264283`,-0.1282348194786106`,-0.366852218196653`,-0.8992606989802453`,-0.15041216081461317`,0.6716795296681315`,0.4954165688964028`,0.004964083097043182`,0.03768283528931362`,-0.3382891829650165`,0.13690549953492373`,0.7464269675695415`,0.11685174364885283`,-1.79195127547958`,0.7020036062839606`,0.44684578127958924`,-0.6602326225678693`,-0.4790441292175153`,0.6899775426218675`,-0.6633473275143863`,0.6570937009413514`,0.056584893216578974`,0.7716398281329062`,0.6551344347576028`,-0.591988454135502`,0.08223551781446321`,0.6533637083679669`,-0.24682608516335877`,0.002207605523332364`,-0.004220106864853812`,0.6904063246994357`,0.2785384888650623`,-0.060460279456152566`,-0.4456737918962863`,-0.21503861421156495`,0.6516065158148537`,-0.8549269413254075`,-0.15758739279774728`,2.9809388926087497`,0.4630898547593725`,0.7616416807754629`,-0.5419365397280296`,0.8630856013933794`,-2.10985458867792`,-0.8606249179765258`,1.252064059004171`,-0.020531834901091874`,0.7866953427072851`,0.003303930557332862`,-0.04792121548183659`,0.4899132747330659`,-0.16201617561281542`,0.03277601705627818`,-2.0791211136607752`,-0.41045633367347684`,-0.8788077519638231`,-2.1733438752226504`,0.287804155966409`,0.9148422613515264`,-0.6859265637548995`,0.5928744252202611`,1.0561775364377441`,-0.0035292746549061872`,-2.076915409226849`,-0.11445332568115962`,0.7318277329053986`,0.46943423923725724`,0.7899068728968452`,-0.6397933203443082`,0.7077779676656767`,-0.8018468368646003`,-1.6457705323882637`,-0.35899566482491546`,0.3203013487724649`,0.8174922864102675`,-0.2455511533123667`,0.5509675684124049`,0.37358648103319664`,2.540398424581884`,-0.021054235500899004`,-0.7460326961915371`,0.10250774473967716`,-0.42571986724036476`,-2.0793252812923866`,-0.5260815720204756`,-0.2697586268702693`,0.7422757071840195`,-1.1653898865057717`,2.9397483564684053`,-0.6816773318073859`,0.7350914932978846`,0.08514855919039117`,0.4996022707227637`,-0.016014394430371587`,-0.7224282440207572`,-0.18249586828360398`,0.11528559912691241`,0.17360901266078219`,-0.6368149054005384`,1.136853449278442`,0.1617220016041782`,-0.7108067852409539`,0.23202990685668878`,0.26142491642142207`,-1.4405583039948686`,0.7730665598372766`,0.2056164913467215`,0.8130204293967557`,-1.1157725791367963`,0.3315405143419731`,0.30819844727796847`,0.630564429863001`,0.7502599203827023`,-1.3624366764875235`,-1.1227327172680825`,1.1517159406238784`,-0.16598991018746279`,0.39631697206104416`,-0.4192695202787241`,-0.12704473948361167`,-1.4299688366703054`,-0.44583244050628645`,0.23896747253623074`,0.06162775320031497`,0.05257108234936614`,0.11978704287801534`},{-0.5822267857814556`,-1.0007082810349779`,-3.7801863405035916`,-0.558287610074377`,0.19199405607277611`,0.6215536722062829`,0.7750320639163195`,0.9787692505232334`,0.4050012510580614`,0.12099570315475665`,0.5975973199710958`,-0.5963886883489005`,0.9586513928615428`,-0.2648157809744809`,0.5911166449842241`,0.3685122569057201`,0.4313298901226446`,-1.0231787397866343`,-0.3343198174758353`,0.2791972507078939`,0.3092177455255723`,0.8637015584111528`,-0.26656882100361023`,-0.17053882652646676`,0.23644811680337802`,0.7269207385405401`,0.26190180833043963`,0.7830826112171257`,-1.5466413214873913`,-2.239908478260293`,0.7765748742112639`,0.8025320882831664`,0.8942631127247331`,0.6159990025905638`,-0.5542883457665986`,0.4762870915127004`,0.63673835792916`,0.6483268375253974`,0.7132351781082807`,-0.3123675994786925`,-1.3708979634607918`,-0.42384217764133764`,0.7225136255070349`,0.6282383981746749`,0.255173905226983`,0.6318454924919771`,0.6810747188793336`,-0.5304496176798755`,0.6366605138659843`,-0.49783697913438146`,0.4959911942605145`,0.9196023457953939`,0.7828798648370449`,0.7812707234063071`,-3.3408186814339773`,0.5948188301831286`,0.8239369727817694`,0.8925088894386507`,0.028857665626205457`,-1.600930533216974`,0.5931982401332492`,0.35169720662678317`,0.9730471092742755`,-0.5047840343064167`,-0.41098459663101183`,-1.0913691581517615`,0.09283463827724604`,-1.1498748283989944`,-1.4458719351081004`,0.9650047019550871`,0.7083868299931859`,0.592188646894569`,0.5394343043027047`,0.7386146154333382`,-0.3573835162683041`,0.27152295654851943`,0.4875952947825301`,0.8275754033600476`,0.5532710800421798`,-1.4190254423339206`,-0.7607014950689525`,0.9839011779130165`,0.10901052069319823`,0.8179750891552138`,-1.5207358579826649`,0.05155323152376163`,0.8457911936462663`,0.4731955619769834`,0.5826920759400551`,0.8475099468916584`,0.5625696148026401`,0.06679056099349237`,-1.5401703280251264`,0.9383805277440315`,0.37998893876059886`,-0.9794754286725659`,-0.2966924782307155`,-3.375572520965436`,0.8492157850756276`,0.9578589484981396`,-0.40858050353629083`,-0.1578622161723694`,0.6419174595893409`,1.0004813170073616`,0.8595954926578445`,0.8810735413553382`,0.5637159178611727`,-1.3790625872059978`,-0.49500067313215423`,-1.0330880491930483`,0.17638423338850234`,0.4500994556304602`,-0.12404625978485748`,0.4093833177649382`,-0.971499236478089`,-0.6483009384764066`,-2.379431403948188`,0.051323373303860206`,0.8775594751633383`,-0.8252031428403612`,0.729584907667099`,0.8880681171787198`,0.17417230700881556`,0.901540905244666`,-2.8372882349027195`,0.021675413277327686`,0.28874065926573195`,-2.3261984594376357`,0.9785135107589137`,-1.6063420026276343`,0.5176253277119396`,0.8154824371538999`,0.6256975905541109`,0.8128686122364672`,-0.97791388880109`,0.24160370013968735`,-0.2557859080278163`,-0.25898540409880594`,0.8433676218277976`,0.5146627996577918`,0.630489931148121`,-0.6830852284971304`,0.7749224242519193`,0.5700073851018812`,-0.5650725931208769`,0.7486199541937357`,0.817155449424872`,0.9362468855192776`,0.22602703890218961`,-2.8832894629654238`,0.5775496639469629`,0.6559697190069584`,0.5122345672525309`,-0.06206728093608649`,0.5734106111685766`,0.7985988965654881`,0.5259803123117979`,0.7523900607967933`,0.8838677894219952`,-0.1342670807995367`,0.9843251586975539`,-0.06045240954060663`,0.5954346576142597`,0.011664475099720618`,-1.2802018643658788`,0.5805158391961932`,-2.9716611159415978`,0.8649712284091833`,0.7045430797995367`,-1.6638678016243977`,0.8032168230461405`,-2.206620355409931`,0.7271156674854151`,0.660715176870379`,-0.7840962433389663`,-0.313802475031793`,0.6092979616481474`,-0.513836495830661`,-0.10693743023389714`,-1.1099569762789616`,0.949089658033312`,0.7454911002278667`,-3.0588697741491`,0.4866666337407408`,0.49659241553766625`,-0.3578295804692686`,0.8512886672661388`,0.021804596743048053`,-0.5537297692195192`,-1.4377997265238847`,-0.5152516523281836`,-1.9602359953289021`,0.6012599752128649`,-1.263420161951159`,-3.3196408373994752`,-0.8799167361190685`,0.7205916872540119`,-2.1661715248696263`,0.6029847417099264`,-0.1424742267326972`,0.8517194288801215`,-0.1201128536573472`,0.973509113075409`,-0.24833513378995128`,-1.5901717857643518`,-1.7188212299557224`,-2.580890954528513`,0.4879197371866005`,0.7310860638327247`,0.20047823959149846`,0.47638463168345413`,-2.9400179756182925`,0.4473403121816425`,0.9230966289494398`,-1.1407607575412886`,0.4424435076776024`,0.8817282876411754`,-1.790058474854652`,0.7060839669317285`,-0.045182261895015445`,-1.147862137824329`,-0.7114606385983645`,0.05473224565271753`,0.6534141930942556`,-1.102608995676556`,-0.6974149390553616`,0.8736823347634727`,0.2626163786799193`,-0.3169405736418932`,-0.6572233447911618`,0.2249428671459331`,-0.2696683752839374`,-0.3892350710994422`,-0.08811661300252274`,-0.18435422930408188`,-0.5004157883970337`,-0.4392925277149653`,0.9536035142894463`,-0.32879980394808866`,-0.9777297060275564`,0.46572501192347837`,0.6512134331743168`,0.5504390655962991`,0.418034626884874`,-0.8082642336062051`,0.7596833296176779`,0.04432342321381938`,0.8491820229994806`,-0.7801254718493387`,-0.7663019918252686`,0.7993071427155872`,0.5686190281367524`,-0.3647799802646785`,-0.28830059829316595`,-0.7690197382784695`,0.4775493191196615`,0.8725443664484154`,-0.7973402416647855`,0.3102216452350441`,-0.6324263083568535`,0.9307065449344978`,0.9947627314812791`,-1.3196363745803958`,0.2776711619094271`,-2.967064471188367`,0.9538303130637232`,0.8229702682622029`,-1.1272053659395729`,0.4983419786617325`,-2.553161177184334`,0.49801024633111335`,-1.4040353839489803`,0.9117364993300547`,0.9501326685026734`,0.8367517248754341`,0.8392673662958465`,0.8908270096723275`,0.2481709431597676`,0.9377389767385081`,0.17900065970294576`,0.8193155487165923`,0.7344626965097895`,-1.6984452013726556`,0.6244668412849609`,0.9592629141521656`,0.34008745073254215`,0.7981201112971381`,-1.1021071037480077`,-1.335682427159967`,0.8373181501576077`,0.7970482366558538`,0.11127087792849687`,-1.1994681954888313`,0.9283130867279523`,-1.3950498613583688`,0.650664682520831`,0.8512519162174915`,-0.7568552788080212`,0.9622485497321452`,0.4187770169872899`,0.9612595620067453`,0.5236645199488731`,0.9888096823896895`,0.5104028919309365`,0.5733997947561473`,0.9818755710320632`,-0.8332416072880088`,1.0046727023058346`,-1.4119181151033633`,0.796436718099118`,0.4502174742993643`,-1.2647065580625252`,-1.7284283823193776`,0.6542825049161773`,-1.892297191093736`,-0.058389967850234314`,0.8883891149320994`,0.8193226366722021`,0.7676882199067191`,-1.0881218641035735`,0.9633554844568536`,-0.9539746637791956`,-2.3014205545228767`,0.8812667392042426`,-2.4660070780616654`,-4.104395836835731`,0.8779058995731376`,0.7402864424160154`,0.6131774632693536`,0.28962833469118215`,0.9582891283435616`,-2.3515493534013068`,0.7961063626520981`,0.4839305405016631`,-0.4174059865181208`,0.682281359867223`,0.80005204747184`,0.9593565937921354`,0.04993413549330701`,-0.40844490553153323`,0.6472058932204501`,0.9807152129693141`,0.8758621690619451`,0.8361125321721635`,0.32913758734394005`,0.9241832145197005`,0.4509993792867279`,0.8537272225395007`,0.9089489978811647`,-2.7024863016735186`,0.8341885691328011`,-0.7502512927106683`,0.444316935609435`,0.6862201921856763`,-0.4228842347289823`,-0.16645426290415813`,0.5374965694621154`,-1.8188121613320087`,0.3968343083468823`,-1.9060608589114`,0.5463667327250674`,0.349884515423793`,0.9103194190118675`,-0.5303727953909672`,0.09134851932867194`,-0.8113619012853153`,0.7659469487859123`,0.3413552251146019`,0.7813357282326802`,-0.9414234178686274`,0.9507472387109012`,0.4482793682497652`,0.9414039335523032`,-0.5777904223782414`,0.21372140335770096`,0.2750795749099566`,0.367658283337652`,0.9645159338297672`,0.10800588322907853`,-0.3539012236413767`,0.2922022875588345`,0.8615664469524377`,0.45673040793276065`,0.8763853173789864`,0.6126823041305122`,-0.32970294049914384`,-1.0080748089937812`,0.3793718906632436`,0.9612418218065943`,0.3389138359720941`,-0.43008443430190896`,0.33477860197110904`,0.9746059317747805`,0.3537380761753159`,0.1257046932075007`,-0.5535547593543847`,0.8263050904121366`,0.4844164533722242`,0.8310312054083238`,-0.6997228897561787`,-0.9838191137121822`,-1.3717225406046396`,-2.015260331341824`,0.4633077674448897`,0.38791407918146104`,-1.675464795960628`,-3.122933926396703`,-0.0276532796450795`,0.8646959841742147`,0.6753157038511206`,0.03796102270757916`,0.2046348075834759`,-0.7735409169727685`,0.8265509926751906`,0.9238076956285828`,0.9471099274309389`,0.2655745250368655`,-0.13271804149462943`,0.8497166554741251`,0.21640640633997715`,-0.4067080174947583`,0.8696319722086506`,0.09737814292027994`,0.38735947233322543`,0.9000166798459477`,0.6552620371812923`,0.9344736267615366`,0.14017243494831763`,0.07971812827661434`,-1.37457764980627`,-1.137485181916243`,-0.9172302186736787`,-3.1444698810716716`,0.45914289923237006`,0.696995510714935`,0.11462790485878004`,0.7529435242792047`,0.34683905706761897`,0.30924005559135054`,-0.14358608483678248`,-0.09614411044429994`,0.9443595383912782`,0.8674378981393897`,0.737848934479889`,-0.005496390406765828`,-0.6674637484272193`,0.7946367586532779`,0.8762782566670104`,0.9174155499563478`,0.5046192250466368`,0.8138538291193056`,0.0021297383796593347`,0.8353240499019929`,-2.88323848719641`,0.7623263005523123`,0.05782835669174044`,0.8349891947494106`,-1.8823287988661823`,-1.39393252101447`,-0.5491896806166404`,0.380550991944882`,0.5901208651494786`,-1.351283494807104`,0.4890390867017986`,-0.5396596492203027`,0.9348200930011065`,0.6879443723067621`,-0.3639343435057819`,-1.210098935012146`,-0.5552696136653623`,-0.07571031035215016`,0.5998909381213974`,0.8982919214322`,0.0678386754377033`,-2.264236852018169`,0.9123213809182064`,0.6933144927793947`,-0.05179622581086473`,-1.3261366908049792`,-0.08082127197390951`,0.981135667963916`,0.9029980605334459`,0.004253329376842435`,0.8191691436524537`,-2.5132767400189384`,-1.6499583443930101`,-2.566114265504981`,0.9407383912950131`,0.03673110562578819`,0.42397520058379756`,0.7206887869073194`,-0.32755585644754887`,-0.2909103688661623`,-0.863056609664842`,-0.9532754074140996`,-1.425025984954496`,-0.7635924872632689`,-0.7332433114392249`,0.010815228829941875`,0.8878956164057105`,0.40892187988437045`,-2.9355225912426883`,0.13827419231850935`,-1.2682922041117162`,0.7110259152380894`,-0.7685950058675041`,0.2783655394563614`,0.15226850324641877`,0.279659345226579`,0.9031797060103113`,0.3578201003945687`,-0.6032328789581947`,-0.46666006758684075`,-1.1172908682568432`,0.8731163425427811`,-0.7803249908328809`,-0.18080798452420555`,-0.6107424591416095`,0.7692018981014411`,-0.6321932682959144`,-1.655577309928412`,-0.8322438153935093`,0.808840468672591`,0.43675924802295857`,0.6205599481901561`,-0.7176982228513425`,-0.6101525858602742`,0.9737115494297531`,0.1928541888427963`,0.41910882320004317`,-0.5000548009777005`,0.9077176184328389`,-0.4373139409905562`,0.5544524104754335`,-1.1628724870429417`,0.8618368075372714`,0.9218064677181321`,0.5691854865442825`,0.8688664174520544`,-0.48793957214053035`,0.08913399362343323`,-1.3054857764242567`,-0.3597979598561771`,0.7935694644173751`,-0.6858315689730176`,-0.4960636818665684`,0.6787168094910745`,0.7751020651285485`,0.7032039843845611`,-1.8588061991462619`,-2.8363895073263983`,0.7468249984631228`,0.9655431477002563`,0.44231052832260753`,-1.6271230556805414`,0.8575795541037748`,0.961667287211179`,-0.6811937831443707`,0.7010899016620876`,0.3432557564858608`,0.20236821885221923`,0.828163839221612`,-0.06533518515432125`,0.1267640168868931`,0.10467827834901561`,-0.11319387618659171`,-0.057088047185802335`,-1.9304736052757288`,0.57342375173168`,0.18688469676655106`,-1.4716402683327532`,0.8447787609121659`,0.9767562415216052`,0.31212418258748226`,-2.4065618026444433`,0.8024540082781332`,0.3479741235854016`,-0.3768346790703065`,0.44658817365352643`,0.8719551473554564`,-0.031964179910558256`,0.8002971464827061`,-0.5082094981639538`,-0.04639246346651951`,0.18654072381039483`,0.31642642508338004`,0.4597591855750184`,0.1156672932738672`,0.4917036195398861`,0.9075838975333654`,0.6592147944257791`,0.9082608279679182`,0.01860730362555901`,-0.15437310041721877`,-1.4577559201959427`,-0.022779763436483528`,0.8221140568640013`,0.4417932949872125`,0.8781189318100496`,0.877844974754036`,0.4398511808486612`,0.8982969533574969`,-1.952785409415053`,-0.42736550295328163`,-1.45929660024509`,0.9445096470508003`,0.9529480141397642`,-2.157692249720205`,-0.03089073413150914`,0.12044754869155139`,0.724780093146364`,-0.20639462930495484`,0.9857715191041682`,-0.26994808707497486`,-0.6150018321867456`,0.046902937750329055`,0.4727432838464368`,-1.8000679805988558`,0.8784004645318277`,-0.5300069441820232`,-0.9220833496068024`,0.5954082854586884`,0.9808368849113089`,0.4577908615586872`,-1.8872425527533567`,0.888228335600087`,0.08227164408073329`,0.4952192520209442`,0.6141441327874335`,0.2573153283710771`,0.3345219589869204`,-0.3570880964067362`,0.42714836936547695`,0.7495247538463548`,-2.76575893692347`,-1.0249535629593183`,0.5511737722452947`,-1.5217054122133815`,0.9669473690357505`,-0.006143827891150703`,0.9364265787733461`,-0.08194293349711515`,-0.41662986803632246`,0.8329089194688747`},{0.3463450038297518`,0.4238144496338117`,0.4023239149748783`,0.25138834794459997`,0.3100894680714649`,-0.3201034774585064`,0.060896730914120054`,2.729317271330935`,0.14928921197965853`,-0.0037569414857431156`,-0.011657772328819711`,-0.028236265348222447`,-0.08145249268582677`,0.33734062797069125`,0.21094410827779317`,-0.028138526261370873`,-0.00219874220575623`,0.529916175688809`,0.43481244113591255`,0.24046081514955653`,0.15925397637125951`,-0.17133129979317185`,0.1446138796808294`,2.234985578809387`,-0.24181264911771197`,-0.7663336959859692`,0.20686274033550903`,-0.6785240636404153`,-0.5699313602922228`,0.1958066066444675`,0.01685442914500311`,-1.7936094524138295`,-0.9090004084505228`,0.4947564226785028`,-0.02705292882301159`,-0.16109679847022856`,0.3353811439343522`,0.2232757570337054`,0.3455962606411504`,-0.2122497126155863`,0.27634454225340027`,0.4576417938353434`,-0.22851918314920028`,-0.07510364596369737`,-0.46860714818604426`,-0.04592195231363927`,-0.0761897917078091`,-0.5871756093922827`,0.15441557255490584`,0.04305390342554526`,-0.003083818043301205`,0.10408706979812418`,0.06673625688127262`,-0.5567204341857701`,0.4730463294154492`,-0.39449621340888835`,-0.1906254059106568`,-0.883562842979294`,-0.2722930735247685`,0.6439935269092776`,-0.13481348857927133`,0.16281272841106195`,-1.906691908591834`,-0.014031975652436525`,0.5594492871896863`,-0.5081018744846914`,-0.26891646068366504`,0.41644621482776817`,-0.6474586901129812`,-0.19942296246674596`,0.28459602432919956`,0.21185759161038045`,0.15923149128460862`,-0.6011916372494513`,0.15029651975274425`,-0.3202543446719232`,-0.15532506553713582`,0.0953850622288073`,0.6197380404280859`,0.22147223886304981`,0.23437232606900565`,0.2937235346156722`,0.3968782884556756`,-0.2877365276342084`,9.194320095696328`*^-4,-0.1531966216573451`,-0.11574825906899971`,0.04966136663439646`,0.16567414083930213`,1.2431226354876515`,0.5940139137117754`,0.20002594345834246`,0.39828063269926894`,-0.8354145616089194`,0.4467897069393991`,0.31078483032137516`,-0.4082778075391412`,0.44608450746229683`,-0.33021213491073326`,-1.1297463150216667`,0.19348594067287256`,-0.29094914433146235`,-0.3974751875258429`,-0.13379478713622356`,0.18328992379747439`,0.3432013544869855`,0.20816876591970515`,0.42869640236057394`,0.1718985641328967`,0.4891676453433336`,0.19429836505825654`,0.058201686046801496`,0.059226092726082945`,-0.19276985024857368`,-0.4502178839234569`,-0.11416369500936167`,0.44677285855834664`,-0.17933426558964446`,-0.4274724688278051`,0.2911813238161671`,-0.11013633110817864`,-0.9361741396172306`,0.35127377198636095`,0.34570449076581655`,0.472829038169531`,-0.5050751838290923`,1.3496477153386022`,0.42574233472389755`,0.6319832296392807`,0.42677967399676053`,-0.2122227447997586`,0.05741150183563234`,0.1494000225119613`,-0.4570424993303374`,0.4202650377817293`,-0.1568275368987489`,-0.5666033156103951`,0.15939047690913716`,0.1273736954250288`,-0.2713880755100203`,0.11596179885902064`,-0.1754097138699471`,0.175915854430724`,1.0100876976519821`,0.042328047312398115`,0.29301952642500556`,0.30809388187230036`,0.17928978023529812`,0.32236238223907177`,0.3802717489774789`,-0.4362318841647354`,0.024725863226227482`,0.08471828141060836`,0.2896390282069093`,-0.2720546075410369`,-0.3649688804997738`,0.434606772050017`,-0.10561928045664104`,-1.3114435720624023`,0.3043470772210646`,-0.9595306765550103`,0.3167135210382617`,-0.32200924828069927`,-0.5680267227121989`,0.0460081468361999`,0.18157918224101796`,0.41304397408287674`,-1.476584228939229`,-0.46800362859336525`,0.21449591589071978`,0.2520045174267935`,0.33990721906524507`,-1.2549087133536418`,0.0697232000712466`,0.16064835159477228`,0.24178254182388817`,0.20022707294106795`,0.39589872032601076`,0.07714228822386052`,-0.261739589395445`,-0.4337438974822141`,-0.6886788306516287`,0.3480713499556075`,0.2641476801364095`,0.5640067256015692`,0.4470263403187138`,-0.3009629311575303`,0.15961573673988955`,0.22842086010825913`,0.10372505071962192`,0.01699163436698348`,0.39201458724315846`,0.11718178182842699`,0.27290379072315796`,0.431624017469599`,0.029693218523745957`,-0.1561150645267279`,0.3952026307214466`,0.9456769059710668`,0.057751550182602224`,-0.5326751287724076`,0.3510530646785195`,0.23767595923776497`,-0.4072682813648009`,0.40027129831642455`,0.34063489774611355`,0.4379751419813324`,0.24703357084476563`,0.22448896413262057`,-0.01138162999917524`,0.03711769510988268`,0.4195873227696927`,0.20505324193670485`,0.6325975515612278`,-0.3042160890605774`,-0.5834952678711994`,0.06811574747281807`,-0.5037770285467851`,-1.0621484608664429`,0.1331954814593419`,0.18280019746084974`,0.3889124242911535`,-0.35474588440058197`,0.42411032828345757`,0.20477999378169387`,-0.1490267058338464`,-0.8273016395918218`,-0.33976345746143527`,1.7340651200297825`,-0.27521690686951417`,0.05869564764127842`,0.34318797412272345`,0.42239387339042844`,-3.3876554711091744`,-2.281147612938413`,-0.19757224009013538`,0.08097869306248077`,-0.7211472228610072`,0.02485261260467115`,0.17275177321375612`,0.1711888863518863`,0.11323497926535712`,-0.03248610129073871`,-0.004994645063845583`,0.018804155533375513`,-0.03923992371557189`,0.3086088875947867`,0.18539001253432322`,0.33655420503232136`,0.054030031748688215`,-0.5450161576554419`,0.7473226562097909`,0.4667869479382189`,0.3211991186144561`,0.06065037490903033`,-0.024981708737116245`,0.28949808475915845`,0.39690826127963613`,0.1834000280702975`,0.2263154959611407`,0.3136341149075985`,-0.748295030996376`,-0.4071532286578295`,0.16017098950761696`,0.16506815477430428`,4.798800653183779`,-0.17571521951494612`,0.4478030065423549`,0.05681268189584025`,0.4432861655674287`,-0.10019395994987068`,0.43285532382132946`,-0.1967424293705543`,-0.911482836502271`,2.9040170336882123`,-0.11300635829775812`,-1.1921936765696546`,-1.1135210524310335`,-0.7355531565249136`,-0.023953717773160375`,-0.1755167713966573`,0.04681896763016144`,0.3132339636354549`,-0.1489894553991143`,1.5377531457182332`,0.28401211398681403`,0.04347170847391939`,0.12455953267538881`,-1.2885019377116453`,0.057693086010213744`,0.9896497392759895`,0.09614263755727744`,-0.14354827600729175`,1.3422052901545578`,-2.376600882414039`,0.017388802906552793`,-0.10961681199900308`,0.03579887034987024`,-1.8060304373843374`,0.04228877948525437`,0.07175364908323577`,-0.10176086205610596`,-2.200195440379994`,-0.39609486923889964`,0.7234172848862062`,1.392673593540908`,0.040730045361647996`,-17.095366586619207`,-0.563213345955865`,-0.40960816046792975`,0.22513292382775515`,-0.1080364663742549`,0.02161009128510003`,1.673326674240257`,0.4537369817705724`,-0.4817626931614944`,-0.20734848256708852`,-0.09105082559373993`,0.04962622301259795`,-0.04468307583266685`,-0.4831555575054184`,0.34624157518677007`,0.3981019739083169`,0.3323831376138364`,0.4851198228181167`,-0.10521521721649726`,-0.6603280376396868`,-0.024190851586045628`,-1.3644664176684442`,-1.5021762703297432`,0.283765700647698`,0.43709173095246723`,0.3043794590506416`,0.4563395520843957`,0.3402939059670165`,-0.5054205590245762`,-0.4921015130341692`,-0.06399913051003236`,0.14166265921307777`,-0.0232513480804217`,0.04327369731324515`,-0.014534086792157322`,-1.1025060167652956`,-0.3132904231774738`,0.06115177807079934`,-0.4043352368888113`,0.17638854970909862`,-1.1544010945104846`,0.4295506119080245`,0.23063137811931594`,0.27423476735530916`,-0.10370642120165752`,0.2544356831513935`,-0.5348770183380619`,0.5087449257879735`,0.2927020195656882`,0.1769763145259361`,0.3760119116320303`,-0.03552876365307901`,0.15769352160573236`,0.0984066521765108`,0.9993888078591003`,0.2776340827453487`,0.34834920443371026`,0.3596221831741662`,0.2214694877398737`,-0.13570246521660712`,0.010461710779720478`,0.3316945304708368`,0.18722869438262796`,-0.038990421563926556`,0.296667773987972`,-0.30913237451571085`,-0.1758310592486342`,0.23705654578637608`,-0.04733843043666823`,0.417219026441888`,-0.11726832924162524`,0.3494371657726756`,0.13257051194582076`,0.39912712157926145`,-0.42115222420962184`,-0.20504542954028107`,-0.8634710863515389`,0.09771951494124208`,-0.18760470130588164`,0.344453780397977`,0.1373492759619563`,-0.15139804370427376`,0.1912962983043174`,-0.0719762396200719`,-0.9373907707921824`,0.6910353206072338`,0.023285631853951057`,-0.1993139862736992`,0.09233447400816078`,0.1481289248914376`,-0.3783288302631596`,-0.2959331298267069`,-1.2049026357159407`,0.18016715079691828`,-0.2157175857559099`,1.4530234775554023`,-0.5084736798095705`,0.14356761939460935`,0.37643748028571133`,0.11094260322009886`,-0.18671305000783742`,1.5977366168722706`,2.0142753623417784`,-0.6344391386318383`,0.2679097893096144`,0.42717001833067486`,-0.38980151646566824`,5.577955110824452`,-0.36557103240705685`,-0.0720910791705593`,-0.14830049808970358`,-0.43951046476872574`,0.10793078215583242`,0.2162041681750702`,-0.33931617048781765`,0.02401407527035501`,-0.12087977358057066`,-0.15329034415161344`,0.3092876274852035`,0.07549341243879568`,-0.2117752443805087`,-0.6220153619062271`,0.07429936783310198`,0.4141794995601062`,0.03869124192926843`,0.48805319783598194`,-0.839436203227142`,0.38575524490646274`,0.28142298896554124`,-0.19445592099996425`,0.008064491438619864`,3.232098308014258`,0.22254626675782635`,0.29872067087751936`,0.36909236596658473`,-1.1011796664582605`,0.23828905221941285`,-0.00930339410510743`,0.11972679747125484`,-0.0944802985173747`,-0.9732632961762469`,0.05046000178973577`,0.20021432476678572`,-0.31366173400994646`,0.11336182067856523`,0.41611417914913973`,0.42546171214156564`,-0.4062721331485364`,-0.06001055648656878`,0.5481622638458084`,0.31842871745439305`,-0.06051477023591344`,-0.6626964624418316`,0.06255536394020061`,-0.337829373114245`,-0.18232790598826076`,0.21392617154482144`,0.3853418896124287`,-0.18451446461096432`,0.2935591176585005`,0.23766933148079397`,0.05163402346411207`,0.03181074279196678`,-0.11084212994048817`,-0.6648358949733496`,0.42622407932644313`,0.050822921905544216`,0.29968016348664916`,-0.10751617430338334`,-0.16794381216961254`,-0.8289488791617603`,0.276853372940076`,-0.38639059814876975`,-1.8239107368213288`,-0.3397893635654601`,0.15825007879161415`,-0.11746036322023319`,0.43410981246850655`,-0.5653003244390455`,0.4654497704380633`,-0.3123969688818577`,0.05478442027565447`,0.26671686331487515`,-0.1739990497458326`,0.41349706863040325`,0.30977387057384564`,0.5098960677203127`,0.40972515618677996`,-0.09693057464300264`,0.4410442338575995`,-0.02843811195432373`,-2.0297744147867953`,-0.12754129123473662`,-0.04113455742661666`,0.4267169350647355`,-0.17805073681960323`,-0.06210937094557725`,0.019497831012572922`,0.2032029987656959`,-0.5589677911275864`,0.4288289050293496`,-0.5285283730342046`,-1.313787254632065`,0.11771087735168194`,-0.32307349401415003`,-0.07011578975581632`,0.40321426406084204`,-0.697892542529366`,0.43779201113550587`,0.27272505259112995`,0.11487355975782734`,-0.20210690553340527`,0.11684247040053186`,0.222662149044532`,0.41277689867232426`,-0.20816645424391`,0.25642324526746646`,-0.45671486165044833`,0.03836142098741856`,-0.6702807109420941`,-0.11779079613025567`,-0.26662613709875754`,0.321224730615735`,0.16689657709093567`,-0.3149523679539711`,0.34125538570586095`,-0.11686445921503417`,-0.41548371007720675`,-0.7725306429756125`,2.22510972297585`,0.08053278244979625`,0.08772459865084672`,-0.10571982721390565`,0.4954151193197321`,0.4791563029803411`,0.40132988896734617`,-0.3247887886083256`,-0.08336404426232272`,0.1366485770859983`,-0.1829451068332014`,-0.6993762601231858`,0.30884627610609733`,0.13001299353195703`,0.3901003190692372`,-0.36833685497788876`,0.33713806048280587`,0.0020545667784871227`,-2.636841868758636`,0.9009291272500547`,1.6218693720235065`,0.7249037779125153`,0.8294927954828009`,-0.47647641892137865`,0.2768773522833029`,-2.5740272910655975`,0.3417037888707477`,0.43088521165545823`,-0.3106177378477694`,0.36313904381809625`,0.29487728062307633`,0.4440981144247542`,0.3871740426892971`,0.11202203462601645`,0.37724626737681966`,-1.0438872532278598`,-0.4270540214399659`,-1.0021826291188325`,-0.379376064772535`,0.22457378831639624`,0.4596240479920236`,0.2737743415246444`,0.2466150520550431`,0.6164265907130171`,0.09351969456045628`,-0.9331424857628472`,-0.21087235731520096`,0.19268381375200905`,0.22548803095645092`,0.11333844463657353`,-0.8348064433722807`,0.3162362623240372`,-0.04246936043063576`,-1.45419370182859`,-0.5377131842277719`,0.14669690345833544`,0.07809064726352356`,-0.37693289367221683`,0.2366079889840998`,-0.27428056755627245`,1.1800355989032836`,0.23781929826141904`,-0.7010561808719202`,-0.06706620882099643`,-0.05741125013392279`,-0.9663766552271201`,0.401129080452009`,-0.0931697244127562`,0.2657193339378266`,-0.06978813196137751`,2.5218140703248935`,0.3941741251395445`,0.2758444596982781`,0.21114579278622525`,0.18823593744799708`,-0.6453579092100074`,-0.7387977523681006`,-0.8196024836280558`,0.12036933387791893`,-0.23924230565719096`,-0.6613662106306425`,0.309813115397245`,0.03660864104305658`,-0.28343526805746044`,-0.5020642077592693`,-0.21195003488100053`,-6.5952560757035545`,0.14042755658015177`,0.4469289256426589`,0.2466057021133344`,-0.11206884959431845`,-0.11524901146871475`,-0.04526648840274713`,0.23686850938643011`,1.4988631917582869`,0.09380656513227908`,0.2603383409056555`,0.8859925444407399`,0.4403296643161685`,-0.38039638645747276`,-0.62172330134966`,0.4361760364856147`,-3.1391780462281007`,-0.3871254190046209`,-0.07660583933814837`,-0.11296033135119407`,0.004340542574098709`,0.034011648445858564`},{0.25088017362348847`,0.3416488375541261`,0.5810778867936657`,0.1366830260881055`,0.544698625703096`,-0.5249927425644421`,-0.35844617259204054`,-1.9770500521801577`,0.4157145732990672`,-0.29365686867312774`,1.4324303236963674`,0.9180033229058694`,0.4532998487018892`,1.179307193828866`,0.26135925523740905`,-0.16430245771274254`,-0.7142598274006932`,0.9314914803588733`,0.6563130098049716`,0.6269783935719522`,0.3513760153649555`,-0.40378865542402825`,-0.23133303901655855`,1.987146602071854`,-1.2126639400019004`,-0.15977035309275062`,1.2190652746675859`,-0.08732521039137058`,-0.3032329374283722`,-0.7485093952058463`,0.347698301738827`,-1.2487419033348515`,-1.0301546821823584`,-2.3756985905438333`,-0.21808924245734157`,0.23235397347200584`,-1.0984558206579145`,0.23700837010255657`,0.814158167970173`,0.31289990550150115`,-1.8554493718811533`,0.22042464349177399`,0.11993305424097855`,0.12494556604570753`,0.46542379951048735`,0.28674728109937314`,0.3485933690035517`,-1.5042349544713707`,0.22543746227283945`,0.33721366172175055`,-0.8303624019430377`,-1.439795906855495`,-0.1356614511318926`,0.5019006382048121`,0.9273862554619299`,-0.6606381127127198`,0.08409851629407018`,-0.2825317769486651`,-0.11728148714089244`,0.7059621850163289`,-0.1733313835918791`,0.21922229433637913`,0.3005725339626365`,-0.6452691315616046`,1.6693080949383647`,-0.24724653000039035`,0.39333698907497405`,0.17532961688694973`,1.0744655976690816`,0.8755124969554917`,0.6073667058585002`,-0.1761712781953607`,-0.0845325100823291`,0.06411760497041492`,-0.663853244142405`,-0.18864840184786022`,-0.12084612195618452`,-0.011577404246182341`,0.8550565043080234`,0.005700469046684672`,0.2186689874774364`,2.800072610147433`,-0.713170592739567`,1.595446699537134`,0.5546074364382236`,0.13488557023426062`,-0.1895830858859346`,-0.8877745316456739`,0.9527832637923906`,0.04290548572660892`,-0.31222777730143225`,0.9743664352737139`,0.1322919527992753`,-0.2950726052823601`,1.3251403871509058`,-1.8385979136904569`,-0.1501645753773791`,0.5940484652084848`,0.7805331137980003`,-0.8938862692872015`,0.6157926123377487`,0.060971910574217934`,-0.41963750223762625`,-0.6591842546163134`,-0.17279703337996913`,-0.31782285038470776`,2.2397538966869006`,-0.3481857375320886`,0.38340237944571876`,1.048997223619111`,-0.030128247476618995`,-0.14412227062459665`,0.4661140796179638`,-0.10314233051262886`,-0.628289332512115`,0.465155035146094`,0.5736133366343328`,-0.8813458745713044`,0.3707174343031299`,0.6504509067498409`,0.40434819599505817`,0.8684600846558985`,0.11329432186934806`,0.6618641025533576`,-0.4341576257284594`,0.16886017424064076`,0.7429889404642446`,0.4676639516627067`,-0.24727310983896944`,0.2483603871977455`,0.345912604277712`,-0.47030534056657625`,-0.06379907719818027`,0.4039420105875844`,0.8223698389373637`,0.14714886356766504`,-0.08410109830418341`,-1.3136098854267952`,-0.00786215390539173`,-2.2806151959535175`,0.7568589932300651`,0.023958217897600744`,-4.276340601831351`,0.12270952326198749`,0.02526822746597039`,-0.15213648549877376`,-2.129292503816362`,1.2367756091299544`,-1.2470480735884382`,0.46557138708894297`,0.4483905813347826`,1.0772924162727777`,0.42398199931775726`,0.026291781950672062`,-1.279021679498137`,0.02464087860967564`,1.6440469448558728`,0.3030817239148811`,-1.4634403731785157`,0.8047325610229186`,0.015389425853548598`,0.9540682833421289`,-0.49381028786104914`,0.12273165135781752`,-1.1728685417530915`,0.6332792361419788`,0.34061908798704527`,-0.3348092208733799`,-0.06905452101100101`,0.1886200907091951`,0.5419507988039286`,-1.078963149968192`,0.031573689657438335`,-0.270793932504092`,0.2886308580935246`,0.3486327917069333`,0.49392062517002466`,0.3833646926279686`,-0.6197553748581693`,-0.6120291312039068`,-0.5269324734008498`,-3.6154275403580063`,0.688775764663329`,-0.021827012052504705`,0.8406162699335972`,0.6647438182489365`,2.1430809622574407`,0.10207137468376329`,-0.011977298571756195`,-0.3021153339654912`,0.38035114278427545`,-0.8674529202415827`,-0.7829666292700698`,0.8629741915374612`,0.339996950787056`,0.04709074710124468`,-0.9723838565173032`,0.17605281122813238`,1.2675720192511166`,0.4608839436934461`,0.39345735323168135`,1.1209201751466866`,0.08216939245854651`,-0.9401462672551877`,-0.0643226639205302`,0.4350426102752929`,0.29140924809683866`,-0.5267529547659804`,0.2767725244895625`,0.5099695132679286`,0.2410523629640206`,0.321443892847377`,-0.3333274492605605`,0.22101700606436983`,0.5794635430578333`,-0.25253772623803017`,1.4291131220181492`,0.5394300902508652`,-0.6302439800118846`,0.27945005654653216`,1.3765596038907322`,0.23487493610428142`,-0.30268832197660833`,0.6000809931289934`,0.7544080707544223`,-0.0955949509695419`,-0.8915973243081802`,0.025081733836816177`,0.05289697456775436`,0.5454100906356742`,0.652027378473134`,-0.227889250981619`,0.5896275879198878`,-1.1310619833422888`,-0.17937898942435587`,0.1236915527859829`,0.5713638094246647`,-0.41845760005340904`,0.7744321788523661`,-0.5370174820417554`,-1.6173724472289144`,0.03524075851302048`,-0.037530571536260104`,0.38001445472564965`,-0.1906038641769827`,0.12303087427947618`,-0.2575608208138713`,0.0076668089455062954`,0.10937653363064515`,0.6238861442745415`,-0.6604015330573726`,1.9171979248448654`,1.1332620548820564`,0.1838693945700996`,-0.7667560685062859`,-0.869731436726463`,0.6778636514951232`,0.8891503792134969`,0.2926347807818583`,-0.25017238151910676`,-0.3032246932933468`,-0.7670123741332573`,-0.1138875559491766`,0.012734187209504137`,-0.8771357833037949`,-0.20983036043791947`,-0.35572382241786166`,0.8433648474055269`,-0.07609028034801993`,2.0524978863291263`,0.28939070435724357`,0.8857329331257441`,0.6107916590795924`,0.01955585164350982`,1.641373395156628`,0.36949643491877576`,-4.526772898217711`,-1.5418630763984627`,0.011075196837049403`,0.6752000959156214`,-0.6760146450838721`,1.7118187012495716`,-0.833626633284071`,-0.00233147496622442`,-0.3970273966210016`,-0.1689975075083645`,0.7474882050663927`,-1.429707405950083`,-0.8195724877972124`,0.672756039451494`,0.9940407877713026`,0.4026472018492926`,-0.1645686654405163`,2.067201741504131`,0.6039394100444272`,0.3625074457485911`,-3.888231066968054`,-0.18997515398791076`,-0.1841129874362856`,0.3829193228828845`,0.14404655301332442`,0.4027260911054503`,-0.6366021091668917`,-0.3841594754234676`,-0.6985773488804707`,0.6485155086462652`,0.5312070632652801`,-0.1064454132669334`,-0.14751576780960182`,0.26899168181428934`,0.683092019439946`,-0.28247160804713817`,-0.9458264554227057`,1.524945783345405`,0.846481159714362`,-0.1556630889407314`,-0.034229740084341216`,-0.1564594787005213`,0.15690429578131293`,-0.41329450357762215`,0.6336542914880936`,1.013021893462571`,-0.16683211646552604`,0.16821084479705836`,0.7971006818573467`,-0.36863940241204896`,-1.5535369495857776`,0.8658887799952238`,-0.13999648160633088`,-1.5501882587995754`,0.3446975724200728`,0.506881845181604`,0.38535598137902677`,0.8939799702861444`,0.8116799953547337`,0.10522752783770517`,-3.288657113673724`,0.2605911328058116`,-1.0369441583767793`,0.45878646010269813`,-0.44385610735466585`,1.7125471700117945`,1.4845505091719513`,0.10868988636150331`,0.02174581688970128`,-0.6073401562305252`,0.13197817726828767`,0.8867506017137109`,0.7272339223661229`,0.6924450039269796`,0.5729266124063924`,0.40316143208867256`,-0.005021117391965348`,-0.21781653663529116`,0.3335978605181797`,-0.10064903197399863`,0.5512771073440806`,0.6100660960198715`,0.526767647884524`,-0.5264938181675511`,0.0037500607053418894`,1.0019672390568375`,-1.1758868376943556`,-0.10571950048127948`,0.5136866557085904`,-0.040755935307606996`,-0.572900240824141`,-1.0870039413608796`,1.1634037385749159`,0.04099188485566381`,-0.0762434916653322`,-0.13125046860340858`,0.03526255183233613`,0.6049313812451935`,-0.2679367345260034`,-0.5531573332354566`,-0.15067509424544243`,0.8474678598415277`,0.1078777231872502`,0.39326941585151554`,0.6788691873443589`,-0.7153450835054986`,-0.1828750193185844`,0.33931393318035874`,-0.12057178993217507`,-0.3382546605903234`,-0.02509609142582902`,0.11370676939369057`,-0.6705293381466209`,-0.5867246815474293`,0.23896582809350458`,-0.8552122875665508`,-0.39648247418145205`,-0.029918325054799372`,-0.014004062207605483`,0.13579342542784176`,1.4191124640667354`,-3.2269856651012554`,-0.48625950426271963`,-0.5695304915376211`,-0.5238031268165959`,0.1270973383202077`,1.0824230926042975`,-1.3436345667369476`,0.1853858868987202`,0.5733864531580952`,0.151609353824761`,-0.2972018911559331`,0.6597625505540764`,0.4129065410712156`,-1.0780736676479536`,-0.24156856835814886`,1.0610240250436336`,-0.5287327707371864`,-0.33054660215649484`,0.01887818247134309`,0.001705981588641164`,0.1237234882073378`,1.0356533132201085`,0.7787867346663706`,0.9584921107195383`,-0.882034526013426`,0.07751123862947379`,-0.1662693188354836`,-0.9249136993358906`,0.03150765080646573`,0.1826322434488959`,-0.5606117088923265`,-1.1484851622754626`,-1.0816462478783209`,0.644153460175131`,0.6434869040900236`,0.6944547077947324`,-3.284865292624425`,1.6753953541698794`,0.7420907684265144`,-0.9092734340634532`,0.156520024033193`,0.6620391860319736`,0.66403696257017`,0.15531459843838977`,-0.41227698817052244`,0.5190179509268633`,-0.3000944962561021`,0.2147131857053139`,0.3081383313848619`,0.0678787451907355`,0.14554777343913242`,0.23867477220876168`,-0.6032390409911085`,-0.215876981050252`,-0.34515199512651157`,0.06704719216798845`,0.30826946437854547`,-0.09930831794914728`,0.5530524462586105`,0.18218423938104392`,0.9308446672903652`,-1.0979226081899391`,-0.005906746695078326`,0.0037773514826419975`,-0.8865449804532424`,0.28673131795047657`,1.6266115579749763`,-0.6769471764707016`,0.05441681779601943`,0.11334764904435055`,-0.24391796446124672`,0.4191832354415171`,-0.24249163329570206`,-0.3044697712759817`,-0.28036521372338064`,0.6198246234125635`,-0.9944742033189647`,-0.45194126469762563`,0.10549302691382885`,0.2953395059721192`,-0.5151318065516381`,0.5644757475037215`,-1.9525047057401441`,-1.6013589709088527`,0.7284229881687153`,-0.428451584778459`,-0.15882582193065223`,-0.5419389882486342`,0.3157190064199595`,1.5121786492261438`,-1.497784990462227`,0.060173652041933576`,-0.004303959677996786`,-0.948803017980917`,0.8524627465862453`,-0.1483608618446165`,0.4127697503392643`,-0.4708986140970316`,-0.16342152075032768`,0.4099001774541641`,-0.7465201289318243`,0.1806455253218407`,0.31113248650059344`,-0.3385197884741067`,0.22414917462862258`,0.2987611725624294`,0.5406057153288568`,0.06659263098715826`,0.49539581166826524`,-0.6393138349587265`,1.4720508877093759`,0.5495299292345548`,0.07917652663220476`,-0.4005255569774995`,-6.243214068234607`,0.0528676689939593`,-0.917324696332916`,-0.7064927471619611`,1.0965764564094305`,-0.5750350149163448`,0.04948723709957234`,-0.4978162223296329`,0.14941020587340875`,0.2707237488129685`,0.6413027054306226`,-0.427624906202846`,-0.046272315167177364`,-0.6304575158455494`,0.507042343546016`,0.40084091344805`,-1.774827119173515`,0.2887649658263731`,0.36681873941358745`,0.5005503528435766`,2.416554439692716`,1.0353623293460765`,-0.10581890996198012`,0.20710521604136084`,0.5969869652173281`,1.055773837193572`,-0.7983700246444424`,0.32111343136494336`,0.47593988171046747`,-0.6903354833936994`,0.31752581310424555`,0.08714133711921346`,0.16181633829358189`,0.21651386361997485`,0.5179302535708556`,0.3298965968492624`,-0.005380255512481747`,-2.241220059221525`,0.25261454323215793`,-0.2661285077492025`,-0.2156543515791153`,-0.37429998232443196`,-0.2660159394339077`,-1.0389286818651728`,1.3139400089611075`,-0.9543051607879426`,0.7142796553718792`,1.0592064725606094`,-0.432143389236259`,-1.0988416361328321`,-5.880918966339376`,0.6641219570457413`,1.341570857844186`,0.5367266209435909`,-0.8093828681441338`,0.511508484116586`,0.8808668351180055`,0.8191608727639828`,0.1897268828432136`,0.6777167290914838`,-2.0553140758443784`,0.10637013567586359`,0.12317918850424825`,0.2909568058122318`,1.129185497838377`,-0.03769038482061833`,-0.3361266192700928`,1.0883727216380836`,-1.5667409302902167`,0.8382353032149106`,-3.201850847653815`,0.09779161246362146`,-0.25293423943810756`,0.18471581550863597`,0.430323856579989`,-0.023890542963161714`,0.23634247594121777`,0.43013992313289334`,0.6355595024623251`,-0.029020184346775696`,-0.4402132654566346`,-1.4873848610914646`,-0.05222823638812806`,-0.5094492576720383`,-0.2907562392718358`,0.40670438374667844`,0.27967439973383285`,-0.16963960125211058`,0.042602524671714666`,-0.8582694499267598`,1.455461490294642`,0.7568910996955578`,-0.6955614605206196`,0.5741371714388172`,-0.13654010376773623`,-2.0477560105257915`,0.8286313661308392`,0.033562778773188306`,-0.47969954418598304`,0.1283630845519584`,-0.21263627395431833`,0.8794126504867723`,-0.15308087870902165`,0.5337472833076522`,0.24028564208963277`,-0.9292263337037299`,1.0730298335752644`,0.1044424678332026`,-0.300085635792501`,-0.4933813452888796`,-0.43830687162265236`,-1.0578896069758876`,0.2579892686420164`,0.517313823271461`,0.9558296229443096`,0.29225201797147354`,-0.2973127384585279`,0.5145551796904573`,0.8589057515661865`,0.7410218881558679`,0.28471565308300695`,0.5784710587620561`,1.3150309294202587`,0.3095968163175507`,-0.5155204531914976`,0.3433550771582692`,0.909146684157636`,0.6948001290070305`,0.4794282942527301`,0.026030346828047474`,-0.6373519714529498`,-0.037689600888168494`,0.2348165458745407`},{-0.25837682203365875`,1.1329516186474875`,-0.6203519955072981`,-1.7364519265888438`,-0.27599385121762554`,0.6128986695993762`,-1.8667742862222554`,1.3544358666350083`,1.0895878174187297`,-2.269742885563277`,-0.3010452514734953`,-1.5752539111364825`,1.2932539385949078`,0.3875320306171691`,-0.26252368587558644`,-0.14864615030645206`,0.45662363858705934`,0.7339789045642539`,0.5345187332836423`,-1.5721339984931495`,-1.2709458338801147`,0.15520092044321054`,0.07209507226113539`,-2.9743430636156116`,-1.9043733719790112`,-0.7246158452520247`,-0.6951168209172616`,-0.32071807310326705`,0.13513749438258033`,0.04246857476148179`,0.00249698374473312`,0.9639845733548645`,1.380223724461132`,0.20741303051428142`,-0.016642244495246022`,-0.47298547136585556`,0.9419560245878703`,-0.6198308757919143`,1.1324739422360297`,-0.8080573102369046`,-0.36608930035790493`,1.2163350593747633`,0.15072406584014195`,0.07922604266625896`,1.2095543146861734`,-0.38212661546011356`,0.4830017789033392`,0.4104951018548033`,0.6121635716085407`,-0.5259505645063377`,-0.4051441032881369`,-0.42318830052056944`,0.0014751295157987643`,0.8905658740289619`,0.22773688630258687`,-0.0825870305390616`,-1.8994041418789127`,1.1336059974740058`,-0.59226008535238`,-0.8867870302367549`,0.6468137143165719`,0.7229860181306157`,1.3979482873388036`,-0.5192964131588661`,-0.8413624836151237`,-1.3108157728401195`,-1.2736639868387742`,0.004806314387155287`,0.7225008438009484`,0.12066776378073193`,0.5044088596984148`,-1.5366319594965827`,-0.751762535024926`,-0.7257310799584356`,-0.008413604786884006`,1.3754123432683678`,1.058996859331587`,-2.0004035217734084`,0.49277437166916926`,-0.8313036304313492`,-0.9762516669113018`,0.8467721760410402`,-0.3973351180136197`,0.6055580770310527`,-0.03051781790620456`,-2.034901781603532`,-0.8503321095379406`,0.2385796709224426`,-0.050049498078461874`,0.35326559155303805`,-2.541275786199656`,-1.4858755830481285`,1.1369445761070056`,1.3811911031645068`,-0.3796381980550163`,0.28912020654503695`,-1.2232267919017163`,7.638300120002559`*^-4,0.9389899267968524`,-0.5823720060652946`,0.6528901623161033`,1.3818713011276362`,0.022903696787715824`,1.3821056305298212`,-1.147682927058257`,-1.2596757051519916`,0.5812169256046416`,0.0628310658797484`,0.7900915251732288`,-0.03318729873907689`,-0.876951191455854`,-0.8943696115795613`,-0.02162886456289932`,-2.177515191392199`,0.7960345308163027`,-0.543455914249412`,1.1073997111163458`,-1.5610522866540566`,-0.17321512299869685`,-0.6215268207985765`,0.7341766892579665`,1.055419705846375`,0.4687891899586514`,-1.6098802132969636`,1.3633444297807094`,1.33311691359869`,0.20254363748229373`,0.1552005264470518`,-0.14046626782327276`,0.7027692735520156`,1.3503530817203107`,0.23248184036616598`,0.3576313855033147`,0.6842687997099696`,-0.2494929595687147`,-2.2565110026043254`,1.3604707888707999`,-0.04582727013098564`,1.24819861403848`,-2.927178353928576`,-0.993120266943478`,0.679527315460303`,0.9524740755999564`,-2.762995761806189`,-1.16432190756239`,-0.49523014991836556`,-1.2811486971026145`,1.3660614005631362`,-1.5609176888488616`,-0.44686328526986124`,-0.5891381282663652`,0.25508188106653035`,-1.9841682341116829`,-1.7366771386314286`,0.031819888864194706`,1.0070286779189217`,0.16324681634263716`,-0.9586221932708437`,-0.6049147315806198`,-0.323659613503494`,0.6930152746618461`,-0.1541311297584685`,-0.5061902236708834`,-1.1590065087386874`,-0.31075120609362167`,-0.8649814566359683`,1.1359081219485454`,0.3779308597569797`,1.3031586473128338`,-0.7747959599377319`,-0.03465394716434954`,1.050063404858175`,1.3539130185132968`,1.238333835548328`,0.04402217725466869`,-0.5046615666855203`,-0.6147604317209553`,0.8766172395518297`,-1.1395370289085123`,0.37326750463787395`,0.6250495035566215`,1.3824629330354157`,0.8266910328287987`,1.1498063210857163`,-1.8189328177918525`,-0.5966170906055194`,0.787544047598239`,0.5088216674519368`,-0.27780180368550783`,-1.4512524027232536`,0.26254073868714267`,0.9921977925295915`,-1.3099451677016447`,-0.7103484896838852`,-0.3863316295026414`,1.000103807177435`,-1.216330793109678`,0.6871430334084503`,-2.32724220367098`,0.08190482852648683`,-0.117610940221271`,0.14973862954860906`,1.3902326072601325`,0.3649320324015448`,-0.09959171277656549`,-0.3935748737955342`,1.202891083458563`,-0.47681156303539607`,0.8535123256050947`,0.9707635713978907`,0.6514732961764517`,1.1025800402357908`,-3.6365170364021426`,0.41820975249157355`,0.2290674121670646`,-1.3760110550092872`,1.190529824321367`,-1.5582759335497887`,1.3946717681259027`,0.45847077807966174`,0.52132290756105`,-0.25720711770055776`,-0.873801747563374`,-0.0642474159245596`,-0.034441373266166656`,0.24732671468045161`,1.3959064197583697`,-0.01325704576804435`,-1.7322269237510681`,1.171837374595461`,0.5293150401760385`,1.280739456912388`,1.3914749511775282`,0.2520945922330761`,-0.670150591667418`,0.4291053691182345`,-0.9710392337762638`,0.30533224204451914`,0.7107021117322603`,0.5405960782072972`,-0.4004147900693591`,-0.2621864745390648`,-1.1165469465408486`,-1.5163714301600477`,-1.2810638790137296`,1.036867039430817`,-1.918747482696122`,-0.09714163800240536`,-1.8386973423116564`,0.2812616871094562`,0.5231734553512009`,0.36667942618009036`,0.42559569190450774`,0.4180704420078332`,-0.5550830265134961`,-0.7324823528842577`,1.0716204252020285`,1.0979598508111847`,-0.3211196661692021`,-0.563000086188738`,0.2871801443311507`,1.3974038187461952`,0.3341217055807602`,0.956605975642076`,-0.2134906887182702`,-0.42616298176867284`,-0.9651192362677298`,0.32411689387634784`,-0.9667618313471866`,1.3347481042681668`,-1.1051186920104878`,1.099325658961479`,0.5918970947319258`,-0.5973960055464531`,1.1175640597164689`,-0.2706281993388012`,0.5951203295654245`,-1.0320896642959763`,1.3781134590556219`,-0.37353611457480523`,0.7366933076859221`,1.3255706577944768`,-0.47867109358781784`,0.3946413958397969`,0.4469465926950584`,-2.2267831781107277`,1.2952052898396018`,-2.110108705915578`,1.1914038273024357`,-0.1732665649098881`,-0.23033789908085353`,-0.8047930930875229`,-0.07750210055778858`,1.0675739658957508`,1.2901018481280986`,-0.022776999671034005`,0.5649056153443582`,-0.8836125247332387`,1.1369976779592297`,-1.5745773300921324`,-1.0300628621235`,-1.0191611319983331`,1.3853511688785012`,1.083371954553095`,0.3499636028002305`,-2.6317901919652127`,-0.4089609898422424`,1.3900629166201042`,-0.04794053659685736`,0.7909103028541058`,-0.47608907525844274`,-1.4370371979925507`,0.7239502978327739`,-2.2506295407123496`,-0.44121912169830946`,-1.031400954285986`,-0.11765697386541611`,-0.12968213864528377`,0.28582068154179446`,0.37162481840503947`,1.381196413451995`,1.0107878127523378`,0.4120398743432739`,-0.3366744462094446`,-0.7460557279167431`,0.3917951926848104`,-0.6293524396874306`,1.38024789088047`,-1.064065203845456`,0.855300577283621`,-0.14555421934960502`,1.0778373445332672`,1.369307188100283`,0.6705887119584977`,0.17091001112101606`,0.06756032184283069`,1.0346022006007645`,1.1521984470555398`,-0.86763741796119`,0.4327082073734364`,-0.5392165945802236`,1.3829987186376473`,1.3827174767692212`,0.4657666156924746`,0.18072488545699275`,1.2261117493001799`,-0.6755385488547371`,-0.7874737158015928`,-0.4245403054470542`,-0.12389550479210909`,0.17967054073751587`,0.4376452229653062`,0.07592822732364539`,-0.6370158369717568`,-0.6552539644717049`,-0.09018577882376558`,-1.199368243258053`,1.1571181253403517`,-0.550526189358243`,-1.5523011152494568`,-1.8288548196922274`,-1.2897301760504236`,0.7080768750061758`,0.2862865289835327`,-0.22377073327914634`,0.5079721218295826`,0.3978065567193361`,-3.131080923733586`,0.4642871244665601`,-0.614318051388876`,0.614803877404023`,1.0289561003054235`,0.02663279091916048`,1.1190725562904749`,0.8601074347924095`,-1.0830900267112689`,1.0827133021068127`,0.8653202842190407`,-1.2811297311204644`,0.22134081869815436`,-0.4738567729696591`,1.3962882774405252`,-0.03320867432542514`,1.2192200805984041`,0.20217415066740133`,0.06329272603862576`,1.205696237142861`,-1.4207168152133614`,0.5568790098245822`,-0.9308041309868285`,0.7031508855832904`,1.381820444194098`,0.8519016315597152`,-0.2048578694622911`,0.17639333347216296`,0.28239435246407524`,-1.8937892819308197`,1.1126328425238747`,0.17507976608094258`,-0.7617613285647384`,-0.030573417027692795`,-0.06434546715937262`,0.531376066615455`,0.5486095690245667`,1.0126170155388952`,-0.09516780339128862`,-0.0664920951352658`,-0.6013524734909433`,-0.4613359014017012`,-0.09054073230448204`,-0.5612283518390935`,1.0890151722005292`,-0.8289344701220023`,1.378634861305258`,0.32606657569764946`,0.7236696738995798`,-0.3639831468985592`,-1.865198481114818`,1.207977104083585`,-1.1842791203656633`,0.35385102047804473`,-0.20711620628431054`,1.2711877794721347`,0.05442761092293183`,1.3782806545194568`,-0.38301390495905907`,1.3947209542851526`,-0.24247622477442002`,1.0696728894310057`,-0.1733361867263951`,1.0164334720342536`,-0.1560693447566766`,0.43413412038992366`,1.3801107167209916`,-0.6006845660225123`,-1.6377296772426102`,1.0406203694310712`,0.2532865931698491`,-0.05666580588656001`,0.7767790368032583`,0.501549528789681`,1.3837409259898927`,0.504532740724491`,0.9170454032029589`,0.3087455787438608`,0.8126506248802607`,-1.2102360069141913`,1.3927741789112613`,1.394715208475655`,0.7010476969263131`,1.129929092709846`,-0.2020527167407748`,-0.4809779808703793`,-0.6511628893363373`,0.6473734130902876`,-1.7139169867491855`,-0.7736193270813291`,0.16495530436861425`,-0.8487865197789152`,0.6717383186102808`,-0.9246898180774011`,-0.31877017229279175`,0.37221852792100113`,-1.3487734420699464`,-0.3952800864857915`,1.3959032293193268`,-0.5457003502776234`,-0.9639158226530581`,0.763409459053047`,-0.7851382459239534`,0.8780579551933427`,1.3315977209336385`,0.4669457862347004`,0.1983566695581287`,-0.18880386834103485`,0.5649291071407242`,0.18910803399721515`,0.7228760486670747`,-1.4400579650143297`,-0.9091988588982101`,1.1639175802618924`,-0.05674357803829232`,-0.6064642209732236`,-0.4300568720787725`,1.173733417926788`,-0.46037127534999794`,-0.9599223986322334`,0.8820422913524624`,0.26950693821704974`,-0.7931059299240844`,1.075245464497608`,-0.1880656469641945`,0.44128144747817594`,-0.3100424982616716`,0.5507610142614215`,-2.020429154081404`,0.047953841297800594`,0.00819404989130704`,0.6084814048064507`,1.3315232808641104`,-0.8386891249298953`,0.30647369544740477`,-1.546945361409702`,0.7242645215842638`,-0.6866940106973382`,-0.3226021375022105`,1.3937418696474377`,-1.7563012504185984`,1.3919487196714817`,1.3853208869806282`,-2.042215940775762`,1.383835795540485`,-0.01344399727270458`,1.1295187094458405`,1.3848098386196936`,0.1208680310677879`,-1.3047084555832917`,-0.21871574596747773`,-0.5449791168089697`,0.07215392109836827`,0.3445393581320083`,0.005743055328997143`,-0.3533394656205495`,0.17038689989879813`,-0.734693070382378`,0.1904008208007957`,0.3971978791316423`,-0.26499538452779825`,1.3239532918433272`,0.8645163165836965`,-0.44573187265890074`,1.3867088195917459`,-0.31226227766486286`,-0.05430314622879864`,-0.21147201016086148`,1.3819402150703561`,-0.53591798332955`,-0.7834587668752557`,-0.8661503904923604`,-0.32190504596725916`,-0.5026967010014257`,1.2411096299976785`,1.0833377901027066`,-0.02555651502152895`,0.3648949305075767`,-1.2334767714589088`,-0.73586278737103`,1.3888700944060066`,0.12379140072071015`,-1.6277623666992131`,1.3879442684486543`,0.9318014881838655`,0.6842047042464593`,0.2507999743481179`,-0.775698430741232`,-0.6577801815749261`,1.3938406229148437`,0.7540820422616634`,0.12942574146732602`,-1.0960855072854252`,0.35177619372979485`,1.2071567388918445`,-2.6454276858554144`,-0.22244434363406163`,0.19777123512822412`,-1.2636912270030107`,1.0092008291437633`,-0.7096262125775644`,-1.0956144155936522`,-0.5795586449647785`,0.05160246938282854`,1.3903483776147727`,1.381037997069032`,1.3400790088962837`,0.5202289824485347`,-0.6590322633908986`,0.7966349172147557`,1.329267830390321`,0.9843696974103507`,1.3570945327952586`,-2.892188724535584`,1.3415313517150225`,0.39784447283211966`,0.259312744965433`,0.8921401864188421`,-0.3004954940251372`,1.3789584912093822`,-0.5480944212606486`,-0.14477848648307434`,1.3922256993372741`,-1.4490557174647305`,0.31332773604003267`,-0.4224107873302457`,-0.7889353085603101`,0.015263245241267674`,0.9632092061373493`,1.3914272654419946`,-1.2496494396431481`,1.2201153821032737`,-0.9088240732423368`,-0.4169561205235713`,1.0728379943205588`,0.16485219223634115`,0.0769318543916302`,0.4195940431567008`,0.32955606340622007`,1.3879906344025037`,0.28808648824503413`,-1.351293875596895`,-1.141135228494267`,-0.7666388786106052`,0.6910990059668948`,1.16581786333364`,1.3613457010759549`,-0.09871450142559135`,-0.33765939226496955`,0.9793924587920299`,-2.6489643524041018`,-0.3180763269884769`,-0.5994276218674194`,-0.5897240795408399`,0.10936812407147758`,1.3833022123887482`,1.2451302935076964`,-0.35037726656770296`,0.6298369039412667`,-1.0625503502973777`,1.020132270339272`,-0.3339705743829767`,-0.2644453631990855`,-1.1850507578586529`,-1.4682762196367716`,-0.3276284985623149`,-0.8853296845346524`,-0.3252285912526212`,0.6615943911590081`,-0.13348212457421055`,0.6300961189095499`,1.3709029275998745`,-0.8769009224065163`,-0.15169029275524876`,-0.5170758374735529`,-0.5757391194330165`,0.4150723902790626`},{-0.13521036395148556`,-0.3370655224292511`,-0.3423455299043139`,0.1500998673842801`,-1.0863686348680908`,0.5383008115755634`,0.28688396125510096`,1.02253940714407`,0.21935060474000273`,-1.1541185531910483`,1.027966015680842`,-0.3183531373156314`,-0.6956143842464716`,1.0388500098238214`,-0.48028473835059027`,0.33589404225304087`,0.6204488136366115`,1.0254846552198598`,0.49277336000295907`,-0.6715468331361852`,0.11864370862993265`,0.06250565607319314`,-0.547872569477295`,1.0390765560387512`,1.0389058032699403`,0.024747487461206637`,-0.4540006375659529`,0.13408868462863546`,0.13609099982737421`,-1.3735635119030642`,-0.6497496022556826`,0.9501756986790734`,-1.2888614173705197`,0.24030858400737803`,-0.021827340566763696`,0.6532298390836702`,-0.11339145111665315`,-0.6789250591985837`,1.0401352640522494`,0.3284400508069763`,0.6200045686053095`,-1.3951141750309337`,0.26655261404285646`,0.37239443097455377`,-0.26027934063770375`,0.30692831937276255`,0.44493291884932745`,-1.2874486536723095`,0.27854486760671515`,0.3207606009929889`,0.24446192224086444`,1.0320689153072973`,0.6015606050970086`,-1.3816508624124748`,1.0399950600939996`,-0.6105338113743725`,-0.7852617016547867`,-0.30287752200133644`,0.7697356140673036`,1.0217374762655493`,-2.8285496744895124`,0.35723191853454667`,-0.22523033176384277`,0.5815600853526388`,1.027371102214552`,-0.7755225390359257`,-0.1503240188478132`,-0.10231035552953885`,-0.05439552463879052`,-1.4515868523582667`,-1.3371621449074163`,-0.5173514426592988`,1.0228248610862174`,0.409897322118317`,-1.8882780595177338`,-0.42447740233645004`,-0.49550549446700837`,-1.8101189218491234`,1.0341285779065041`,-0.6797877069395204`,0.20455372606219083`,1.0359025085771207`,0.7295474009709049`,0.30112014495472383`,-0.40162298375411226`,0.5009120485106483`,-0.1334609217636012`,0.15240682049275264`,0.3092716465947274`,1.0227969634341814`,1.0281588921339178`,-0.8897793089294769`,-0.04627232674437142`,-0.13910290944745457`,-1.2437413005237874`,0.3229731025635552`,0.2757483474389773`,-0.9652652446974714`,0.23387999363272005`,0.223002569885368`,0.07363988369182989`,0.6706053211452783`,-0.18240804722058104`,1.0216465513358768`,1.0295243427335778`,1.035597005466864`,1.0302673677574308`,0.07871476309214825`,0.6882165256668886`,1.0213395773762972`,-0.5723029413299717`,-0.06912635223839761`,0.3810214685352046`,-5.093656100915871`,0.5014562922567178`,0.6244559746685132`,-0.6920801172350736`,0.9568196008271354`,-0.49367194496133093`,1.0285003253316807`,-0.0454571889052614`,0.6186906867900319`,-0.09337888911327986`,1.0374246817994544`,0.5268127896125874`,-1.451701052525631`,-0.2603460446662649`,-0.7979382839938659`,-0.12601236375131028`,-0.12161376274185481`,0.35098682625467614`,-1.0520276607547843`,0.3751586339355826`,0.8108914120945157`,1.0208462110349088`,-15.020387808233455`,1.037812336563661`,-0.5784065758849175`,-0.5527102070018637`,1.04043788677276`,-1.7650193036705268`,0.2339073453429688`,1.0220010735623954`,1.0288994074714222`,-0.6985502927986943`,1.0399846954629428`,-1.8861860701613697`,1.0313257522360293`,1.0364210275002748`,-1.2285093237243037`,-0.21624612106331242`,-0.5230779535998088`,1.0262652690454817`,0.6065858634249109`,-0.1649122891424667`,-0.8655711230554015`,0.8350146996886716`,-3.259710180737851`,-0.46316265535940776`,1.0308310681782653`,0.7654583233038864`,-0.7675651206208657`,0.17719961789367822`,0.13417959126266965`,-0.2227840798422696`,-0.6190793350176899`,-0.7967316555717779`,-0.21526171602894462`,0.041824212883437316`,-0.5515024046000389`,1.034606473658046`,-1.440485139288091`,-0.42805313408951357`,0.9609889571789498`,-0.08470797860058141`,-1.0008686279160104`,-1.6430524226522074`,1.028825958465279`,0.02092738121560967`,-0.31497586655473975`,0.012740739785222152`,0.15876614690369886`,-1.7207681921761402`,0.4056480111535853`,-1.3654658203053598`,-0.7660176824450347`,0.5280557861911735`,0.5139631617794771`,-0.4234651488500268`,-0.4393499075255751`,-0.06469137743046885`,-0.9856583701722722`,1.0220806065046197`,-0.2027770218061359`,-0.5770931699727487`,-0.2424234767307502`,1.0286026357265547`,1.0278822388335875`,-5.990904557459667`,0.0017268722941129744`,-0.48978827996957064`,-0.328592280582915`,-0.6058172772809208`,0.6362785829651671`,1.031866385396806`,0.7030547555244877`,-0.9607947542011139`,-0.012463824641829328`,-0.7305007994115398`,-0.2240674748857763`,-1.0374349703054424`,-0.7697671421858472`,0.6455909585653029`,-0.7060338382280641`,0.0385429299519109`,0.6842950156974249`,-1.4142814259271126`,0.26739285332078894`,0.3948466484836743`,0.5943049853414389`,0.10554113720062507`,-1.5937905443436968`,0.14504160545120517`,-0.8161961211502923`,1.037751505026653`,0.8192826479739528`,0.3173244125846323`,-0.10962362908037182`,1.0235572148972538`,0.32615508394938003`,-1.4810029712125012`,0.45713206000353523`,-1.6643003772857148`,1.035025863340078`,0.4809895277631355`,0.6863603728338553`,-0.7494208028476352`,0.6676790590917745`,0.04505324972737634`,1.0315877792926043`,0.32452418592625176`,-0.22093547464910968`,0.4464809187831523`,-0.05281888048622297`,-0.013947822275284003`,0.18125330972594292`,-1.1162571989466454`,0.8358719323021323`,0.41435758080489593`,-0.3363639347287293`,1.0403296685954273`,0.2716254943087481`,1.0404471149668144`,-1.0672058950176169`,-0.5326778481991157`,-0.16572120286442346`,0.41973634592605785`,-0.6865363633475086`,0.3757919261960034`,0.46171584910235586`,0.1888406634791742`,1.0388494013411138`,0.7474287467527827`,-0.0861832625247921`,-0.7738881239134305`,1.0366365701071034`,-0.5232664260138348`,1.0285410797391`,0.36109741821569397`,-1.1886754396991717`,-1.2294911295743136`,-0.22119299284012436`,-0.29097435802042754`,-0.20576133149064119`,0.6660807130038824`,1.029351382044314`,0.6317220116337144`,-2.3299466509066127`,0.1986242110937546`,-0.53561065685502`,0.4201058117038691`,-0.6394066838605407`,-1.331396181020883`,0.7633256763908743`,-0.013890056565985038`,1.0404004226035053`,-0.9607574154602576`,-0.0072395066017191395`,-0.24735486511116642`,0.06204891238630265`,0.5530085066113587`,-0.5434185698066877`,-0.26201357865897335`,1.0220517584928852`,0.09692961414185969`,0.723257622394426`,-0.39559642992512345`,0.046357982029322495`,0.18552059290649567`,-0.5456599175204438`,-0.8028380882457401`,-1.1394402210164838`,-0.2223244245513508`,0.799193552291977`,0.7416820132038606`,1.0275773090683304`,-0.9191620329847565`,0.5574300817898715`,0.15877928630327784`,-0.9159896300963561`,-0.5931428513584761`,-0.5088496688106823`,0.058333473177070244`,-2.113350393121762`,-0.020388258968694874`,0.5058911027901061`,0.30901872043487577`,-0.1993245079392857`,-0.23728780749315712`,1.0218664844758933`,-0.02930608705574553`,1.0208872220975533`,0.380202110637164`,0.6179184609322588`,-0.019699989208721572`,-0.04742755737990956`,-0.8299114636562752`,0.16225437925509273`,0.4846855869206619`,-0.32478691326739545`,-0.16804839028202936`,-0.9151772817329972`,-0.18544518948041497`,0.8587611384374804`,1.0322835558528338`,0.7192508339160579`,-0.5494714138512592`,-1.2128898950246818`,0.4666305458966288`,-0.040150145912054236`,0.3823987744729167`,1.0392766830534717`,1.0317231690566608`,-0.626627640053011`,-0.4869883092078062`,0.37125470861563414`,-0.34106602565406496`,0.5929449539197807`,-0.3477279830058751`,-2.6477736464717156`,1.040076893651571`,0.18950732724938726`,0.47808444260856353`,0.8204588446460903`,1.0301784119959312`,0.7023454782219299`,-0.3666605660680869`,-1.6541244696177884`,-0.5743522456344445`,-0.005415117598837668`,-0.46486219403497725`,-0.21624579480448525`,1.0265627691139774`,-0.39676253377191256`,1.0356452598248038`,0.4608296843854823`,0.3349158090515902`,-0.4040569845378654`,1.034150442074372`,-1.0004551790922456`,0.06662507900808982`,0.009894823909276753`,0.3010000800319949`,-0.027241020487748836`,0.7290961393881795`,1.023481413792334`,0.07155816761110453`,-1.0947905500084716`,1.0295015178486469`,-0.3814286895430581`,0.5848977206932495`,0.48766136932414006`,0.1304352456894894`,-0.07377860334742484`,-0.09509831503345637`,1.0339643500592828`,-0.7792171535944429`,-0.8013398881427722`,-1.3063717881317283`,1.0219322849529424`,-0.01705721737571812`,1.0347809144041267`,1.0211174731272559`,-0.05260124185442561`,0.511269714747162`,-1.552487344463496`,-0.08445075607254947`,0.1170917711392312`,0.4530370420360812`,0.19149704792160943`,-0.79298288985426`,0.40810007172241114`,-1.6899726266906396`,-0.4963886635695413`,-0.012388760629539992`,-2.1928195631227054`,-0.14805529130593226`,0.384521795212685`,-0.8525051817190817`,0.524160184766887`,-1.4446868209902657`,-1.4079474392714821`,-0.7809588780822915`,0.26481470458690604`,1.0253802923609725`,-0.14013635422862086`,0.0878613632163126`,0.21537159996370336`,0.24466297915957103`,-1.2991837565234163`,-6.528017549342871`*^-4,0.15439570195068367`,-0.11500647744742987`,1.0213056438505472`,1.0272626682014745`,-1.4816322728977325`,-0.1012135399760051`,0.23941004570808253`,0.9693792867521355`,1.0355559784393613`,1.030008063606262`,-0.06135305426865922`,0.05359551503047821`,-0.635992021309467`,-3.53403983830707`,1.033882778387007`,-0.5309861255945411`,0.4281267329241748`,1.0208865942220482`,-1.153320950610235`,1.03392534247082`,1.0404198907395668`,-0.1674672045603947`,-0.08555625431561165`,0.6174615400611113`,-0.23509620125418731`,-0.6704243638399328`,-1.4683238100717355`,0.33803124001962886`,-0.15572034734947038`,0.4426267141295278`,-0.22476151878107334`,1.0264888590393055`,-0.8595812983359655`,-0.3206784533238175`,-0.7760189291579465`,0.2526389001714482`,1.0221823666078163`,0.17646831174462707`,1.0379322669289621`,0.3554889370842625`,0.620320458964915`,-0.45019582720773077`,-0.46953488820255457`,0.5082746041503791`,-0.6417748968254504`,1.0322676954870311`,-0.6260632958960471`,-0.37384205043112584`,1.0345636997592937`,0.6092945775623462`,-0.683721804996665`,1.026076482738065`,0.8850723776970968`,0.2643885850079082`,-0.819435604845423`,0.24636990832794275`,-0.5077026129300773`,-0.5898720278118843`,0.534437465271308`,0.8898418428870146`,-0.2817392969927109`,-0.08214523857119879`,0.8513921253234571`,0.06775037810803353`,1.0224656209563499`,-0.7963457100276898`,0.9013817047744073`,0.33245566048990216`,0.26661619545760723`,-1.2522547673805766`,0.7844295725908004`,-0.8194967286701297`,-0.15051837432786527`,-0.54283266998421`,1.0267570422157053`,0.16143014930219435`,1.0282470981623577`,-0.06613641409770046`,-0.07573377977875187`,0.300951245149103`,-0.869658579328051`,1.021494461291704`,-0.10406484001681937`,0.49406510537140147`,0.2801452134272267`,0.14026238693669893`,0.5389625807462275`,-0.131172668845411`,-0.04243145050898274`,0.8930117272209562`,0.2726569195336872`,0.04369392947002722`,1.0354652085448148`,1.0329571830467754`,0.01497275763491492`,-0.3574366401808611`,1.0404328042810231`,0.31294572013839556`,-0.13829295916816606`,-2.4985333547045148`,-1.0007618743236333`,0.547166774675188`,1.035744438541231`,-1.036901093973904`,-0.16799211961173077`,0.1893670308834988`,0.4400343790519908`,0.4387634165057456`,0.8067799802766503`,1.0405186050085453`,-0.23667373779836665`,-1.8673496592879812`,0.18727543121928303`,-0.34178226625092967`,-0.3798088690926739`,-2.3389405188103867`,-0.07470929640574211`,-1.4877176076639012`,-0.4560853501475749`,1.0323467003145286`,-1.4180836466567022`,-1.3440222732709706`,-0.43654653014974665`,-0.025915727686112028`,1.021279863830263`,-3.9032079541357345`,0.2333654434561202`,0.10714394533441758`,-0.3863329907795529`,0.5662410677580714`,-0.5823986120768664`,1.0167091923752074`,-0.15192942993218087`,-0.42234272603774475`,-0.39663745236750825`,1.03307576235646`,-0.33107754481994517`,1.0221055989184002`,0.1639989858405849`,1.03223065733109`,1.02409044345884`,-0.26202514747095496`,1.0368086052275935`,0.3573615736822998`,1.0387827857093102`,0.13817653110260703`,0.44646071659152875`,1.0241409718266532`,0.93846090963628`,0.45939407785748276`,0.5213426513442879`,0.1319808897316528`,0.6927538967705277`,-0.12350189467948779`,1.0373066982213976`,0.04556337921022663`,-0.11167430713899548`,-0.7943802229878242`,0.8550817506983287`,-0.44969358008101246`,0.09516851776890145`,0.4346227679666488`,0.45418675963228794`,-0.8835326767049405`,0.2376681749643472`,-0.1840338436003558`,-0.9591797090224767`,-0.2722372002674371`,0.23785892458316046`,-0.7287754441022692`,0.5648453590542111`,0.2308745189217151`,1.0327960345571097`,-0.9901804411854266`,0.4980545529501511`,1.035599079754692`,-0.143773540913859`,0.5880567022474538`,-0.3043387111536694`,-0.15791364659574175`,0.46496253303425766`,0.3368547225625977`,0.3019711798225229`,0.22181878773593053`,1.0327559008167786`,1.0332532515892634`,0.5483632745857184`,-0.6407247733388695`,-0.5053411873356223`,-0.31319327182510703`,-0.19708111040070742`,-1.0173344473890655`,0.35139568434901186`,0.1660731952431544`,-0.3784775302603303`,-1.772701983798193`,1.0362644199825377`,1.0240695354911988`,-0.07069091291218536`,0.8796174239574874`,0.6166035238939319`,-3.0064293236844604`,0.29805777393285865`,-1.3755827810374581`,1.0309961673215935`,0.4440530531781841`,0.4567091713977618`,0.026336825244336122`,-0.889067977082735`,1.036258024984945`,-0.9964627046353459`,-0.748058831563405`,1.0386203267671332`,-1.2105681218307074`,0.09701621224782947`,0.20895767715028848`,1.0244525590752118`,-1.602938634283743`,1.0331523588502356`,0.40070194294834766`,0.4676461157009994`,0.6451943759210329`,-0.29899962306544964`},{0.26125327095218226`,-0.4771271997115249`,0.18488835286879088`,1.2394361240933742`,0.4411925390009906`,0.3033945235046176`,0.0202052316981038`,0.14495021968735836`,1.1768442234964294`,1.3839127862055478`,0.47667833102024404`,0.011300354173104942`,0.8915528772341256`,1.037239125286673`,1.172756657625256`,-0.024553236268026427`,-2.1397890579420458`,0.1725116061422681`,1.4071539112450793`,-0.9482918871195655`,-0.9422220876156913`,1.36476199730899`,1.3488938158126718`,1.0359640833294006`,0.9497367148745681`,0.30608544037538343`,0.004915223490659544`,0.3496936661308587`,-1.9660772759369471`,0.275090007527754`,0.3078131334019593`,0.06436647018648338`,0.14314589250860438`,-2.4540202873587136`,0.3211647808071223`,0.7583428458889685`,0.10130577408768134`,0.3592835475744804`,-1.705015361748705`,0.017382643471111136`,1.0604005393838496`,0.10939221006502375`,0.9154884766331974`,-1.6935117773723196`,1.1860813678620168`,0.7259783459816959`,0.01426914977123065`,0.9579219661058462`,-2.464770430424086`,0.7605636790314481`,0.8362846119883248`,-0.7549995356522563`,1.3415810439364013`,0.7359381360139107`,-0.012226192762791101`,1.236245013854992`,-1.8438185517145327`,0.1454812702662487`,-0.31952578874255727`,0.18162283667396134`,-2.1467004922190336`,1.1574245711901043`,-0.6464875480599399`,-1.555022483262772`,0.18088383576991782`,0.36027534492697144`,0.0025207804339397663`,0.17485021902984452`,0.005223458620915434`,-0.4939177339737376`,0.44087990148059264`,0.015489863986819705`,-0.6222973086373308`,-2.471301556402294`,-0.9482184878316702`,0.23462009833793618`,0.10268549272909117`,1.191739924231419`,1.3680903379121385`,-0.943703238307258`,0.7736715806719466`,0.05461159835955653`,0.36015051473974236`,-0.011987439733345744`,0.2977862962158213`,-0.7391177177910652`,-2.3493558146522986`,0.15268078125268314`,-0.07947200992558051`,0.47889876260026476`,1.055973892491999`,-0.8055649813044775`,0.17479237076695525`,-0.36876123222243784`,1.0455486551000976`,0.8290934737829097`,-2.1236516231291303`,0.18615687048866075`,0.7341672475922898`,0.6854858059833653`,1.2208288965065417`,1.3945032514895979`,-1.681058417865235`,-2.476319129073895`,-0.11487570009867049`,0.4216995881805681`,1.2825969172425584`,0.18041672245915294`,1.252496511118041`,0.18900296661430974`,0.3574139858286526`,0.008121582785296948`,-0.6212714382973815`,0.3748919482335801`,-0.16247619620491394`,0.29158125721627115`,0.11397019550823567`,1.1402146517874523`,-2.458378835160633`,0.37632733717898376`,0.7170786247941572`,0.06140415710284298`,-0.6606896970899534`,-0.22523102066482462`,0.02244077863570627`,0.4131367361330333`,-0.12374337018770334`,0.18764087261898185`,1.2176877638025312`,0.02959788011920615`,0.4138702990394906`,0.07279609547533741`,-2.0507304714776344`,0.15997559381260607`,0.18620351117568582`,-0.31070108556899695`,0.29799925190968624`,0.1476071452082625`,1.243159869867779`,-1.6258333696273344`,0.13082258455942114`,1.0087476379270204`,0.14628599495344202`,1.05232785076828`,0.568415990457225`,1.057515091708927`,0.06809989014144596`,0.4951620785221553`,-2.305687994264269`,0.1860422273770807`,-2.253266830730235`,0.09405536441935095`,0.6868898652588266`,-0.007249052152279525`,-0.06836279377126252`,-2.2422863097060914`,0.00565389285729026`,0.21631388813114943`,-0.29757509265674165`,-0.9413055611635898`,0.24494273425913438`,-0.8552478979328725`,0.9334307958589609`,0.4904929505753691`,-0.15594857460684708`,0.41425481021133265`,-0.482649349780786`,0.03552020830194309`,0.7324313915835594`,-0.94443615226814`,-0.49185817615191557`,0.09366962068016418`,1.355824769044736`,-0.6825607747037372`,1.3913279965923815`,0.36428860252395945`,0.013137140013008829`,0.17255613679551476`,0.8144796892043941`,-0.15882658497269345`,0.3017397213563656`,0.07051733030870677`,0.1795243940546172`,-1.526373155354728`,-2.468044761479035`,-0.493939927300215`,0.07194280805191199`,-1.757673683268284`,1.24411038778336`,0.7997221999319942`,0.5094498939876204`,0.10420563121831192`,0.9959891657289495`,-0.006824986267292794`,0.17630178033562888`,0.25796678420474256`,0.01453336260788202`,0.17656252214070206`,0.23642391979207095`,1.3506299897680765`,-2.249571862754485`,-0.8542755995964194`,0.21715355374947662`,-2.2261177552412876`,0.1740818364002074`,0.0014956546847392123`,-0.4837543748347155`,0.1763495414232003`,0.3784898424210967`,0.3865797977511543`,0.4077793061387533`,-0.47534415269627245`,-0.6702731191419036`,-2.4723737570782274`,0.29109213178813903`,0.8067653794697869`,0.05434069842467188`,-0.10913082612701164`,-2.223592252954256`,-0.6387819226720396`,-0.94031687550177`,0.4232983142500524`,-2.4103095816914553`,1.2493861492485558`,0.3653468868627913`,-0.30877665891453393`,0.05627818791752377`,1.3457824130828728`,1.0509451598719164`,-2.5193459408165637`,0.4826044787487816`,0.11558699632313257`,0.03219998908809828`,-2.451053489148094`,-1.9389378238610828`,0.4902077071816075`,-0.8133628299560477`,0.9221753701510735`,-1.931254664540288`,0.8050495069506918`,0.7117310353602317`,0.08777588456176959`,0.9709786691452587`,-2.468240023497875`,0.7143258014586938`,-0.49917000782433746`,-2.1233547613200785`,0.5930317423905448`,-0.0791409984202027`,-2.4594645952540866`,1.0572189956341402`,-2.1224189213936575`,0.17736553187521317`,-0.07966760467838263`,-0.49020165906737684`,1.3717940165200986`,1.324357484744292`,0.11550078493771596`,-2.450680017422353`,-1.565632417449257`,1.1707071083169331`,-0.7541343253648181`,-0.09630581898279411`,0.38407586643726993`,0.27201947964741596`,1.0613647220801892`,-1.839046282364681`,0.18959427037124701`,0.9601963880540672`,0.11715977033101516`,-0.485846642331005`,0.10619766992954549`,0.21785687761425487`,0.4652615245127118`,-0.1156338183706604`,-0.5015586146330361`,0.06320794130117824`,0.3560207554168222`,-1.5498063730676597`,-0.49113782698258734`,-0.03752739201949955`,0.058205878781588165`,0.18870030201842503`,-0.33284876013651227`,-0.6296030969538771`,-2.309751990966881`,1.2998705955627279`,-0.009448431832158367`,-0.002811307126174039`,1.0849099267751483`,0.4852646294647349`,-0.8128269230238314`,0.3517853392545841`,1.047043191405798`,0.3006160909446222`,0.7096101631240194`,0.06983317711026805`,1.3492359542759185`,-0.2942182150563653`,-2.322521324273243`,0.7006960518695995`,-0.8101150411167102`,-0.6311495528174869`,0.7445855158910645`,-0.9435354622668969`,0.3090163974716844`,0.2939941471031818`,-0.6514733621525213`,-2.0045650044860115`,1.290026156693395`,-0.944533231526675`,0.014390252874967459`,0.33425022144960237`,1.0468236790806333`,0.17886354390462716`,-0.7385097405863557`,0.724004117736045`,0.9753724478439719`,0.8252662102084541`,0.9678866476224042`,-0.028889156663507408`,-0.47143871737962506`,-0.014089777202177935`,-2.461878605724866`,0.1741586196218383`,0.26683387898967986`,-0.7935353636500815`,-0.11363103219533945`,-2.467111678590947`,0.07091129019220466`,1.089648239042658`,0.1204859421307812`,1.1421322077713079`,1.2496661786655352`,1.167956748949144`,0.6991213823422316`,0.07055329956069607`,-0.10767060668191127`,-1.9680930414367415`,-0.3218786807543328`,1.0880729695333726`,0.6468515851803396`,-1.666668182388829`,0.8726998125400468`,0.4756473964851522`,0.7004586782696294`,0.02192727358500821`,-0.6608860250245693`,0.7289665178826507`,-0.9483325838191073`,0.4794311498614603`,0.012761910577742681`,0.5484379190440464`,-0.3183882726455822`,-0.28099930788586`,0.2854412171698366`,-2.140256581736903`,0.1802904764812791`,0.39270520525739117`,0.7810000946835465`,-0.48480627961780337`,0.01994806034684765`,-0.1480060722531602`,-0.0023628742099142674`,0.6409539643594504`,0.24716172095392502`,0.10357541163394682`,0.025708475534685613`,-2.464833197706609`,0.2925662893115648`,0.7034172094928615`,0.08781757042701346`,-2.0500325455190422`,1.2441894784550163`,0.9634066505883482`,-2.149084864501415`,0.09791437528661456`,0.6830193939762902`,0.3848908430933935`,1.1571906006188692`,-0.4848574557421836`,1.3022078060489164`,0.34208581722274883`,0.3756566463478383`,-2.456414889946088`,-2.1532073003130585`,-0.343275866578342`,0.6971856250173`,-1.6084165877543715`,0.9937004379931244`,1.004170167907722`,-0.750882728675521`,0.3786899404157441`,1.1638787623894404`,-0.29519236879282273`,-0.943703369981133`,0.022375015886310287`,-0.003879621458175473`,-1.706935735835927`,0.8548900950570419`,0.2661373464612005`,1.3968558475294495`,-0.22084619089774993`,0.19621475508271077`,0.1945542430262854`,0.3633642249262261`,-0.502214019068096`,0.191368965619057`,-2.473028768965031`,0.2984965037340283`,0.8027669345859648`,0.14226959633545616`,0.18747379038360962`,-0.3656461652694226`,0.5944722891892767`,1.3901283339160753`,-2.005552680373522`,0.818635530962083`,0.05770225408184076`,-0.22847393809911717`,0.0024774356771368397`,0.34449893235387274`,0.4593150965145459`,0.9599694236808607`,0.7946587132913528`,1.2352561831091835`,0.2304765462339469`,1.3669493951162293`,-0.2245117369743866`,1.0747654067346235`,0.17797867631189881`,-1.6891816417339904`,0.17747089355971601`,-0.4924929975829184`,0.23490059438325317`,1.2519440325183737`,0.05922117437824516`,0.25417373536163984`,1.3411227405235746`,0.9276450203703085`,-2.4596871846682657`,-2.227709003829275`,0.3016941643285437`,0.3825444236822907`,0.15674014171820438`,0.5288024895368504`,-0.02681842781871871`,0.032314111569235054`,-0.21974149351714167`,1.177235115874119`,-0.6243947927704697`,0.2661382067993977`,-1.954620888256174`,-0.011195123838104695`,0.058215365555774626`,-0.942818482158986`,0.9223403260754435`,0.1850582228382341`,0.2648003468071547`,0.24467696046154552`,1.325038298721622`,0.779957291014955`,0.29211563435148946`,0.009026732415831969`,0.7656700381157606`,0.15338771886549657`,0.5511771565256564`,-1.7422016457082459`,0.4085408125878041`,0.6289524508285069`,-0.6795381464518828`,1.295044900377483`,0.2513857590548303`,-1.6172655067884676`,0.18035514521704651`,0.37439532501981676`,0.7589247929419416`,1.30832471288653`,-0.4867794734200707`,0.01117793943813581`,-0.022612965769707463`,0.712063837665235`,0.5583008039908737`,0.16909586561819606`,0.11122231554369219`,0.37327746850125987`,0.18533510995669178`,0.004726210712425884`,0.8447452624586598`,-2.415696828978108`,0.1384455926787768`,-0.3157549680939499`,0.4212014963256879`,0.41438619170784474`,-0.013082111292727638`,0.02188176659638283`,0.18011219800125497`,-0.15520664615729804`,0.1622706158225235`,1.2897903865946854`,0.20588381630086533`,0.1802265208425454`,0.016840716702905288`,0.9105067039996458`,-0.6383594232881152`,-0.3229213994738703`,0.4254367747819734`,1.039063614465697`,0.8852933023324735`,0.465457371408583`,-2.022288576376856`,0.8019697744390394`,1.3115962507315972`,0.17322884715884457`,0.06201052277840923`,0.19050967858875317`,1.24849556635274`,-0.2828355898179112`,0.437897487109146`,-1.6268155777003859`,-0.483368529522492`,0.18514291916877962`,1.1710224120357797`,-2.4500350481302906`,-2.158582875295212`,-2.450736603002005`,0.24905649141617628`,0.15104191268316813`,1.1784813027298868`,0.7100238685075744`,-0.9477489736257859`,0.6283448615465171`,0.15032816276929545`,1.1789411850504314`,0.3000612815311655`,-2.259688096374895`,-0.917021543311012`,0.9285657019224537`,0.4385920252378779`,-0.2671005234029674`,-0.9534288273876613`,0.11072584679315906`,0.1765626754125872`,-1.6929718173957875`,1.2244843088836552`,-2.4458973200409675`,0.5214978453241327`,1.3405591018158116`,-0.7401093125051456`,0.7998535365226352`,0.30821629820661234`,1.0081257955604852`,0.3918576733176511`,0.3758087778914232`,0.5664820197640406`,0.7529954971715477`,-0.7512683388944267`,-0.21508096674767962`,1.2390857351015458`,-2.464702397905766`,0.2220667027985883`,0.06721960918952112`,1.1951552199791056`,1.049225879387703`,0.7334760582744055`,0.22579337786918308`,0.09084360518408129`,0.1906257422707439`,1.2500105060511024`,-0.48901511744192205`,0.7753434397506916`,0.06042192293071491`,0.9146710877807934`,0.7338049407243684`,3.8104656847426713`*^-4,0.7104525380056059`,0.4262897338709172`,0.14224496405416007`,1.2441046089275996`,1.0402570479596467`,-0.48735694662931744`,0.06563380269070071`,-1.9004040131308828`,1.24750746484157`,1.2204935405516233`,-2.3231727975835597`,1.3027440936103245`,-1.7565714714461742`,0.8282528932036969`,0.13775195950518787`,-0.488348050199499`,-0.7560188606419569`,0.155507880553063`,-0.32364680243102284`,0.27533401703044097`,0.6967132672982965`,-0.7531619218950739`,0.6857478022142746`,-0.32359071718104215`,-1.6165057128600682`,1.2087002116108043`,0.05587500231658274`,0.1910619444924758`,0.7988452276356188`,0.2522835960178087`,1.0618693429466857`,-0.754907721389144`,0.17737259422334128`,1.2480859665205986`,-0.9442536421569173`,0.8469897114899564`,0.0062898597229319175`,0.038073425559132845`,0.7821968085563186`,1.3409381439777184`,0.8426669773267133`,1.2866289730424127`,0.17565214926263395`,0.20276833365651775`,0.75346303426298`,1.3159520875955517`,1.3898246552448057`,0.02477362195751755`,-2.4797768317141906`,0.10600196690802287`,0.1662480011267551`,-2.1371193063572864`,0.9553260402455964`,1.3982592153199385`,0.4895122770998228`,0.7097144430775043`,-2.135220823931009`,0.18331069022263233`,1.040162821141825`,0.1809883253010789`,-2.15359532201494`,-1.5466122432710774`,0.17562640515857833`,1.044007494023137`,-0.2781780038153345`,0.23160766549349396`,-0.7406981118385998`,-1.8607977131141296`,0.3746130102870695`}},{1.8769597414679722`,2.4287891917648077`,17.695530804457153`,3.3305324226032256`,1.3429663269129597`,2.095274701808703`,3.4632863859617222`,47.79372361136765`,1.89218273017243`,5.758066482163413`,12.75027245227392`,3.220341391023379`,3.417463274232422`,3.2464828742535348`,1.425778230513841`,0.3608241843079686`,4.977228584132925`,5.121547745575546`,2.8941783414811213`,3.5248452983031022`,2.053785884783147`,2.177760148856943`,1.7042846382078607`,11.825858236014215`,7.213977208023912`,3.3950734484736285`,3.6801363714104864`,2.3462785179632064`,15.230024209695834`,10.751159543213909`,3.382177890912624`,22.634082894377904`,5.919059464333637`,7.109153557113588`,1.0362088739587403`,1.7995094111124275`,2.4887565620271594`,1.5751374727157694`,5.236570729276763`,2.35947523530693`,7.996608991361478`,4.233398373114312`,2.0401167766852626`,2.0509730699153543`,3.679637897035062`,1.0782844502445181`,1.9329683196483394`,4.41525206534388`,4.315295938261225`,2.741194429921655`,2.1438423165746707`,3.7704523920081403`,2.0588122704541316`,3.339182451287132`,9.148216034762696`,2.914721676068543`,6.154856596139645`,3.5136801964557764`,2.383384095973587`,11.981626943033735`,8.682798800043452`,1.7915217000187402`,10.995323342687048`,3.6428698724302357`,11.219709425169968`,4.0268608801600125`,1.6056015598318538`,1.7188051250619472`,15.8192229489186`,5.974447664969074`,2.976244096515246`,2.818858664618503`,2.534917356678915`,6.064783724914524`,3.210270144229871`,3.1852471452920685`,2.43033539152058`,5.9329485270845845`,3.5816904331973354`,4.633795840161376`,1.9476002356821767`,10.821886583099003`,1.2545546634150246`,4.228803091616679`,9.982536994335044`,3.373869381461824`,5.547643487388465`,3.8637422608651515`,1.288953711031386`,4.463969530195556`,6.005383925994371`,3.1954250531364856`,3.5358731999475173`,4.145116441823797`,3.524238468168134`,4.023469620932808`,5.374118244811313`,9.319134610910222`,3.6000878813326342`,7.504999963771919`,3.2664191214598053`,3.780869395324263`,2.4582172255407055`,7.223213253885705`,2.9858618280446674`,3.8962618866833676`,8.991352494129309`,2.0810221994516`,7.310055298791923`,5.990904035502911`,2.4499095960136175`,2.3379380767056146`,1.463129240477433`,16.895388903127476`,5.156157100136546`,1.8537751975443686`,5.390715038997786`,3.572601960840161`,5.90340115933416`,2.480540836656676`,1.8564821401616107`,5.782738746535718`,2.9141135271224314`,4.82867253931364`,6.299824615149801`,4.938180036166944`,2.0840436335341437`,4.884353458991315`,3.9873699771794664`,3.7438013074990524`,1.7790064631141718`,4.097408778708916`,4.10886115327509`,3.1878021471925275`,2.760592228431081`,116.17344670531756`,6.2442611378827415`,2.1291842427786607`,3.644395693716074`,10.753099192892856`,4.130147462580998`,3.3975816785462447`,12.151648980325092`,11.037321596272326`,2.778504440742309`,4.060895591440161`,7.80095531215691`,5.026149717867266`,6.419219482459455`,8.695580059169844`,5.936015324166482`,1.6754215256931433`,4.794818145462874`,2.1586287245418996`,1.8744647006606407`,5.404681340724767`,3.338746761128006`,6.844757925755603`,4.584948763928507`,3.7889668348051577`,4.574343745192336`,2.230338216171826`,1.7519516193622293`,3.8767098041343484`,4.13691765152254`,3.5128142621359975`,9.95822201597482`,6.170914027700588`,2.2767341692100267`,5.669309979762226`,2.329631689552029`,6.545087851178087`,7.13004677731489`,2.454435623580051`,3.1904876826669346`,3.2961455828540256`,3.889955393385187`,2.56295335308419`,2.2376381721696075`,4.094763102880474`,2.4955122623052675`,10.987307381882369`,15.921155126858581`,3.276373233542285`,6.7907055486657155`,3.321789391554165`,6.530295093697028`,2.4324319693639613`,2.315586667034405`,4.412391645511642`,1.8626343406931223`,4.0061250813352824`,9.390453626457337`,5.243484032071755`,10.74248626228211`,2.817802970768996`,4.160481403911491`,5.948321236142302`,23.381608031795686`,1.6568223433912577`,4.932583876118754`,2.3563669301178756`,3.6277460280973477`,6.510537521751541`,2.8668319037457577`,3.3353087367380883`,6.763711597540103`,1.677648046732272`,2.67479375552439`,1.880411606943496`,3.023529054076743`,9.54530876864278`,8.438503283966428`,5.334019689584679`,5.402828132464712`,8.263466566377435`,6.306223042297421`,9.603765966786039`,5.0582762380369495`,1.5065224772504164`,3.346389484217479`,3.9149665423248914`,5.82801397206265`,3.1773476130010554`,10.982019018696061`,5.163825063647923`,5.593905976637894`,2.393076085125082`,9.127463683725802`,10.1574612354167`,5.540495404036711`,2.170260632791554`,6.225628986935041`,11.363846757976198`,20.276249296239513`,2.9472742839531065`,3.607361869114779`,3.5464072721663666`,4.767703629812121`,2.8611563364237274`,2.312604097410932`,1.1716288809588207`,1.7505559356327764`,5.609655023543854`,4.1411337694865304`,3.1067015367660398`,6.076240017834147`,1.9081603854962987`,4.319614477296022`,6.64583018268606`,8.437429591043383`,5.596826571045357`,4.383478146452034`,2.0030125070190445`,3.2996255161318047`,2.627486554996469`,3.5196861027146253`,4.2412841461387165`,4.548378904216824`,2.779521334842156`,2.839027027932228`,19.68919239209246`,6.39583268446439`,1.201996358181813`,21.351830875843593`,18.389231611983423`,4.894773966474087`,3.0205580360756286`,1.8558171732748325`,8.089184740848342`,2.3397934196828736`,3.116197638466633`,1.9949460409168793`,6.396927369523032`,8.010707010036032`,1.8048527720969483`,15.872773867144593`,6.363325490011599`,4.750065855894697`,0.8602166372499026`,1.9176105984626712`,5.020648461956486`,7.34482722673995`,1.4426653072145863`,3.624349570357104`,7.358947048253112`,3.565986381639312`,6.496869527283033`,20.473104520456825`,1.9541065401658801`,6.558464854304754`,1.51542360139702`,5.187426058648154`,11.641468011333789`,30.926581206081465`,1.6278897859701635`,11.33198842599997`,4.366604696531112`,8.772049013885242`,5.022998276212995`,3.070437504882463`,3.1669168195441353`,13.412253495225734`,2.3498482400639866`,2.789524271698476`,13.0591804193316`,4.418451404052914`,663.033072814586`,10.476566519943157`,3.266629545835147`,2.3005971028667416`,4.756997996205918`,7.936211283066369`,14.201608429421679`,3.3841281449982974`,6.1791779696551306`,2.108240099646159`,1.5845944755214312`,1.5981651901391056`,3.037081872607605`,3.333875173656678`,2.7832112613851256`,10.586024006694789`,4.869813780223806`,4.995398397588433`,35.28980802897089`,3.959946671770433`,2.9658905713850774`,6.431939304717597`,6.1915221313722055`,3.2654813449415023`,4.901647177463605`,4.518056690437374`,3.6120144754031216`,3.2469711521260294`,1.8288833376361586`,9.538675386608375`,3.3120326182760103`,3.294781813071485`,1.628867931040406`,1.7027354813302713`,9.442946797130896`,8.539093512838932`,2.0204997098201796`,0.8560234407599746`,2.876727657377606`,2.3778823790694363`,7.170054807197534`,3.3674025441048068`,18.31781134870939`,3.4982031579780726`,3.2723993163675447`,1.4534911188110953`,4.13432560260047`,6.331483121936715`,1.9548176802744544`,5.582923228209667`,6.191014343603873`,1.0156709697370379`,11.639681750812954`,2.778529319002892`,5.1620723163420665`,4.32756864131502`,1.4876908940034301`,2.3199852101212084`,2.7987515760421884`,1.3733594955149848`,7.003846790700329`,8.336835053611917`,7.928967449329193`,2.7752906146650567`,1.4221430758775258`,3.770213573999075`,3.0767549175548843`,2.943828439836982`,4.648934853461813`,2.0507448766702883`,4.928318546249458`,2.699483805836219`,2.0361154626181914`,1.3153282875956323`,3.5275158092707675`,0.6494927749976611`,4.41685854997276`,4.7479591182676355`,3.4139285487582325`,2.3946384741109634`,2.2764892722044268`,4.33035959028562`,4.1713390880826005`,2.331067568875482`,17.94559351325913`,4.581657626552429`,1.2316271342635825`,1.1844048898638326`,3.1396395918938484`,4.827166484140052`,7.916736986014172`,2.8102835437947733`,4.87857573562678`,2.6822725976641477`,10.078832509694344`,14.405409277409195`,2.079659945174897`,1.1464465651639897`,7.060164109905631`,19.48082613655855`,1.7373514596001294`,9.211863396946981`,3.1121251656634183`,3.76369046506151`,4.0579289395876925`,2.8428908600170786`,3.027894801514071`,20.57910567216466`,2.9459308950746705`,2.547087158316617`,4.359454351425256`,4.889791531084683`,3.278934119344548`,1.6328994471129008`,1.738176617349334`,1.347189057808481`,1.7062004971281584`,4.386323346218157`,3.5244182460536813`,2.5158141679349386`,1.9219706889341177`,3.147343856124052`,5.649783951770603`,2.8551447648063513`,5.853965284607197`,7.741482020045285`,8.072301630944255`,9.665591215573844`,5.803339012880058`,6.190191733620467`,0.738076163052466`,13.650585678478315`,2.4326704291839722`,7.965193032899393`,7.937328307424037`,4.958609067782254`,2.7798158120094887`,1.8856879363159318`,2.4684342568656086`,3.0396851716477884`,5.375903094762943`,2.9420767594353454`,2.3024006176608784`,2.669371978625216`,0.8901136044402953`,6.13922811730701`,8.17980525522763`,4.831545712104478`,4.073238571693594`,3.218342364227896`,6.56870611356223`,4.283187525209917`,10.713105124919695`,2.294840971273879`,2.378684179910093`,6.664799437437797`,3.59462469808783`,2.050260313662946`,2.9269616958681737`,2.657956293263928`,3.4469130575512263`,4.5821150521574125`,2.1323959561928154`,2.7293331707855955`,3.392811636059677`,4.065315440776665`,3.2942077401870096`,5.04362929604315`,2.202260761611323`,1.5775273708267716`,5.430409211470666`,4.9499120038205175`,5.157834087888856`,14.070953575313869`,2.1247841017832214`,1.6458072500774252`,2.1463474496436517`,6.932868360925333`,8.913102390172437`,6.901648046253763`,3.870309925215618`,1.694100051372971`,4.536294182443293`,4.093673172111656`,2.844342095530114`,1.2677945640015005`,2.2571996083050054`,1.455568477927729`,6.3979307903001015`,2.5522611315123833`,1.8912194511262916`,17.323263880912222`,3.1566904297092497`,1.099798943548274`,7.999355058361701`,2.838252548069208`,5.950306332596085`,2.057927332616993`,2.389823145589841`,3.6099091630420483`,4.076261339897019`,2.445901137368726`,5.684779123533628`,5.485914590989376`,28.62361523342841`,3.101741339265828`,2.8696222322208027`,11.372676728684345`,2.800616088914994`,3.255397771691645`,1.5809488926510802`,1.4156299615597172`,4.590535484736468`,9.252184601001376`,2.330165820450642`,2.774283003550945`,5.346449227142633`,5.707148591911073`,6.015608992413931`,3.217978870016395`,3.4721594397371804`,3.3358410775529643`,2.7666383125649676`,1.91992057655032`,8.188796465403763`,3.832529272245562`,1.7484826191187843`,10.95464751871901`,6.0820060442746176`,8.503666098128319`,1.6611824451508175`,3.3658256408574254`,2.094516494926655`,2.9109826605307507`,4.312131550392893`,3.752289558092824`,2.766607081747306`,3.895397510461976`,5.209198799660394`,9.037058900061876`,3.761506232017163`,4.542796035644712`,6.598814030762086`,26.73132406152295`,2.3022782945475857`,8.583121597915042`,0.911986359850953`,13.02275543694984`,3.153508346040459`,12.03540836932289`,2.9705631125003134`,5.417481322044329`,5.349311821078829`,3.316755338544677`,27.832866913062425`,5.920982417556897`,5.76054191217586`,2.582593297478275`,3.1825613381132634`,1.593520415092931`,3.6676864688492423`,5.612373497002884`,1.6525894020474912`,6.848565186032216`,7.918739564977999`,3.6485321224193266`,9.042046364085031`,14.092894078463202`,3.0161166618612283`,1.6501812398106233`,1.788309868564573`,4.427842000543724`,6.367503897675583`,5.606013261058457`,10.271274186523717`,4.020678667853925`,1.6707546528455088`,2.199095891299854`,3.51876224115218`,3.3924409078105584`,3.234600491045357`,1.4419316496111505`,13.779570302361549`,2.6847053167783383`,1.9717711123295931`,2.6126942611782495`,3.8019453895320017`,6.1571565888612065`,1.9499819800726588`,7.139610231234035`,2.2407812125301882`,3.9494505155137407`,3.2257631565181306`,1.618323049990419`,6.705227023919955`,3.4059160851573873`,3.23286908523086`,5.754909061617293`,3.663726817279357`,17.2456071184212`,4.582791341474914`,3.713304781424916`,2.4861230103362115`,2.141645656221362`,1.7717975617564719`,4.441995700868956`,9.011888549303137`,2.8586181594778752`,2.3384620798282687`,4.720411809958778`,7.908040184532293`,4.666829236655444`,4.250027629200199`,3.4560412697100453`,2.3718499545908327`,54.623352947259164`,4.938315281809062`,4.23351814840935`,3.349470639843943`,4.592585549979316`,1.7043707696273063`,2.073452768303757`,2.208510453325311`,4.439980988486945`,5.791830043962162`,2.3230884439348993`,7.403399985838515`,7.761926951390554`,5.761396159566586`,4.147085350884334`,3.3980925243633395`,21.59574440254145`,2.91366874673761`,1.6615909962396174`,1.520572114553343`,3.4026727394563983`,1.5272072637745324`}}],
"NeighborsNumber" -> 50,"ClassPriors" -> {0.2095531587057011`,0.1864406779661017`,0.19722650231124808`,0.2049306625577812`,0.20184899845916796`},
"TrainingOutput" -> RawArray["UnsignedInteger8",{5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,4,3,1,5,3,1,2,5,4,4,3,1,5,3,1,2,5,4,4,3,1,5,3,1,2,5,4,4,3,1,5,3,1,2,5,4,4,3,1,5,3,1,2,5,4,4,3,1,5,3,1,2,5,4,4,3,1,5,3,1,2,5,4,4,3,1,5,1,2,5,4,4,3,1,5,1,2,5,4,4,3,1,5,1,2,5,4,4,3,1,5,1,2,4,4,3,1,5,1,2,4,3,1,5,1,2,4,3,1,5,1,2,4,3,1,5,1,2,4,3,1,5,1,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3,1,5,2,4,3}],
"DistributionSmoothing" -> 0.5`,"Processor" -> MachineLearning`MLProcessor["FirstValues",
Association["Info" -> Association["Weight" -> {0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,0.16666666666666666`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`},
"Type" -> "NumericalVector"],"Key" -> "(f13(f1f2f3f4f5f6f7f8f9f10f11f12))","Invertibility" -> "Perfect",
"StructurePreserving" -> False,"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "NearestNeighbors",
"PostProcessor" -> MachineLearning`MLProcessor["Identity"],"Options" -> Association[
"NeighborsNumber" -> Association["Value" -> 50,"Options" -> Association[]],"DistributionSmoothing" -> Association[
"Value" -> 0.5`,"Options" -> Association[]],"NearestMethod" -> Association["Value" -> "Scan",
"Options" -> Association[]]]],"TrainingInformation" -> Association["PanelCell" -> None,
"TrainingFunction" -> Classify,"EMIterations" -> Missing["KeyAbsent","EMIterations"],
"ProcessorEntropyShift" -> 0,"PreprocessingTime" -> 0.345389`5.989853495472714,"LossName" -> "MeanCrossEntropy",
"BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[1.5090866128226352`,
0.03606664493481147`],"Accuracy" -> Around[0.3957631606059548`,0.02702810302763643`],
"EvaluationTime" -> 3.755499885555643`*^-5,"TestSize" -> 322,"ModelMemory" -> 105592.`,
"ModelUtility" -> -1.1094286644540252`,"TrainingSize" -> 644,"TrainingTime" -> 0.02511886431509579`,
"TrainingMemory" -> 1876005.3333333333`,"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[
1.5245745929842738`,0.05656071635038905`],Around[1.4935986326609965`,0.039841367762240634`]},
"AccuracyHistory" -> {Around[0.3968609756810972`,0.03798001064491914`],Around[0.3946653455308124`,
0.038407511175613765`]},"Configuration" -> {"NearestNeighbors","NeighborsNumber" -> Automatic,"DistributionSmoothing" -> 0.5`,"NearestMethod" -> Automatic}],
TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory","Configuration"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Real],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Real],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,2],TypeSystem`Vector[
TypeSystem`AnyType,2],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}]}],
Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "NearestNeighbors",
"Options" -> Association["NeighborsNumber" -> Association["Value" -> Automatic],"DistributionSmoothing" -> Association[
"Value" -> 0.5`],"NearestMethod" -> Association["Value" -> Automatic]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[2.265584479247952`,0.13904867852157313`],
"Accuracy" -> Around[0.22970406325132148`,0.059392538562886794`],"EvaluationTime" -> 3.9810717055349695`*^-5,
"TestSize" -> 100,"ModelMemory" -> 8008,"ModelUtility" -> -1.5231855634928828`,"TrainingSize" -> 8,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 106168,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.265584479247952`,0.0983222634976326`]},"AccuracyHistory" -> {Around[
0.22970406325132148`,0.041996866769700776`]}],Association["MeanCrossEntropy" -> Around[
1.6926139018823232`,0.06401331750178076`],"Accuracy" -> Around[0.23960505335033136`,
0.06026793950931996`],"EvaluationTime" -> 3.1622776601683795`*^-5,"TestSize" -> 100,
"ModelMemory" -> 13128,"ModelUtility" -> -1.2269621978184762`,"TrainingSize" -> 40,
"TrainingTime" -> 0.005011872336272719`,"TrainingMemory" -> 100112,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6926139018823232`,0.045264250891756674`]},
"AccuracyHistory" -> {Around[0.23960505335033136`,0.04261586871518079`]}],Association[
"MeanCrossEntropy" -> Around[1.6180080850872278`,0.04829099036440106`],"Accuracy" -> Around[
0.24950604344934124`,0.06109882811348622`],"EvaluationTime" -> 3.9810717055349695`*^-5,
"TestSize" -> 100,"ModelMemory" -> 30920,"ModelUtility" -> -1.1803005938482078`,"TrainingSize" -> 150,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 467080,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6180080850872278`,0.03414688675688221`]},"AccuracyHistory" -> {Around[0.24950604344934124`,
0.043203395681597374`]}],Association["MeanCrossEntropy" -> Around[1.5090866128226352`,
0.03606664493481147`],"Accuracy" -> Around[0.3957631606059548`,0.02702810302763643`],
"EvaluationTime" -> 3.755499885555643`*^-5,"TestSize" -> 322,"ModelMemory" -> 105592.`,
"ModelUtility" -> -1.1094286644540252`,"TrainingSize" -> 644,"TrainingTime" -> 0.02511886431509579`,
"TrainingMemory" -> 1876005.3333333333`,"ExperimentCount" -> 2,"MeanCrossEntropyHistory" -> {Around[
1.5245745929842738`,0.05656071635038905`],Around[1.4935986326609965`,0.039841367762240634`]},
"AccuracyHistory" -> {Around[0.3968609756810972`,0.03798001064491914`],Around[0.3946653455308124`,
0.038407511175613765`]}]},"PredictedPerformances" -> Association["EvaluationTime" -> 3.755499885555643`*^-5,
"MeanCrossEntropy" -> Around[1.5090866128226352`,0.03606664493481147`],"ModelMemory" -> 105592.`,
"TrainingMemory" -> 1876005.3333333333`,"TrainingTime" -> 0.03934186274111255`],"Index" -> 1]],
TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[String],TypeSystem`Assoc[
TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`AnyType}],3]}],TypeSystem`Struct[
{"Experiments","PredictedPerformances","Index"},{TypeSystem`Vector[TypeSystem`Struct[
{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Real],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Real],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,TypeSystem`AnyLength],TypeSystem`Vector[
TypeSystem`AnyType,TypeSystem`AnyLength]}],4],TypeSystem`Struct[{"EvaluationTime","MeanCrossEntropy","ModelMemory","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Real]}],TypeSystem`Atom[Integer]}],1],Association[]],"MaxTrainingSize" -> 805,"PreprocessorEvaluationTime" -> 4.84375`*^-6,
"PreprocessorMemory" -> 174968,"InputDimension" -> 18,"OutputDimension" -> 1,"BaselineLogProbability" -> -1.6088861227806173`,
"VariableBudget" -> True,"CheckpointingInfo" -> Association["Checkpointing" -> False],
"UserStop" -> False,"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[
{Association["TrainingSizes" -> 8,"TimeBudgets" -> 5.068837069055138`*^-4,"ElapsedTimes" -> 0.014761`,
"ExperimentCounts" -> 1],Association["TrainingSizes" -> 40,"TimeBudgets" -> 0.002534418534527569`,
"ElapsedTimes" -> 0.010714`,"ExperimentCounts" -> 1],Association["TrainingSizes" -> 150,
"TimeBudgets" -> 0.012672092672637839`,"ElapsedTimes" -> 0.016279`,"ExperimentCounts" -> 1],Association[
"TrainingSizes" -> 644,"TimeBudgets" -> 0.0633604633631892`,"ElapsedTimes" -> 0.071183`,
"ExperimentCounts" -> 2]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],4],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {2.39117`*^-4},
"ID" -> 3809927311528589970],"f2" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {2.99086`*^-4},"ID" -> 3401545411976586699],"f3" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.038342574`},"ID" -> 2804520156832390212],"f4" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.477811494`},"ID" -> 7486896921056398340],
"f5" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {0.313401518`},
"ID" -> 6151296709791495737],"f6" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.247285071`},"ID" -> 740849613069492276],"f7" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {3.11`*^-5},"ID" -> 3492532848948984588],"f8" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {0.394919899`},"ID" -> 3444579235108016798],
"f9" -> Association["Type" -> "Numerical","Weight" -> 1,"Values" -> {4.81377`*^-4},
"ID" -> 2917471692980319628],"f10" -> Association["Type" -> "Numerical","Weight" -> 1,
"Values" -> {0.131773399`},"ID" -> 2827482362738965808],"f11" -> Association["Type" -> "Numerical",
"Weight" -> 1,"Values" -> {0.072816728`},"ID" -> 1502688105075214527],"f12" -> Association[
"Type" -> "Numerical","Weight" -> 1,"Values" -> {30},"ID" -> 7348473597075113629],
"f13" -> Association["Type" -> "Nominal","Weight" -> 1,"Values" -> {"GB"},"ID" -> 7157876709722437561]],
Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,"LogDensityRatios" -> 0,"RawExample" -> False]],
"TrainingTime" -> 0.477207`,"MaxTrainingMemory" -> 2351928,"DataMemory" -> 1657112,
"FunctionMemory" -> 369888,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[{2021,11,16,13,32,19.126553`8.03421169221888},
"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix",
"SystemWordLength" -> 64,"Evaluations" -> {}]]],Selectable -> False,Editable -> False,
SelectWithContents -> True],StandardForm],"Output",CellLabel -> "Out[159]= ",ExpressionUUID -> "631b433d-548d-4844-86bf-a305a88f937a"]},
Open],ExpressionUUID -> "f7ec3e33-65a8-4a4e-998e-43f36ca0f2d6"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["14",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","is"," ","the"," ","accuracy"," ","on"," ","the"," ","training"," ","set","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["0",FontWeight -> Bold],StyleBox[".",FontWeight -> Bold],StyleBox[
"5",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],"]\n",StyleBox[
"What",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["is",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["the",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"accuracy",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["on",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["the",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"testing",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["set",FontWeight -> Plain],StyleBox[
"?",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["[",FontWeight -> Bold],StyleBox[
"0",FontWeight -> Bold],StyleBox[".",FontWeight -> Bold],StyleBox["5",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],
"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,0.792156862745098`,
0.9215686274509803`],ExpressionUUID -> "6ffd90d3-de61-4c30-93e7-77792f9bcf4b"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[",RowBox[{"cESGkNN",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[160]:= ",ExpressionUUID -> "1a646fb3-51f1-4df7-893e-18ceeb267deb"],Cell[
BoxData[
InterpretationBox[TemplateBox[{"0.396","0.027"},"Around",SyntaxForm -> PlusMinus],
Around[0.3957631606059548`,0.02702810302763643`]],StandardForm],"Output",CellLabel -> "Out[160]= ",
ExpressionUUID -> "9d7a7bc0-1ee0-464a-bed7-832427503ebb"]},Open],ExpressionUUID -> "affd5b4e-aacb-4c5b-87c2-a7851d5bef5b"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cESGkNN",",","testset",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[161]:= ",ExpressionUUID -> "ac7070d2-e751-43b2-a1b5-2fc08bf8ef4a"],Cell[
BoxData[
"0.400990099009901`",StandardForm],"Output",CellLabel -> "Out[161]= ",ExpressionUUID -> "994563ce-767c-4d72-82d7-932aa30a4827"]},
Open],ExpressionUUID -> "9f33cc27-b979-4166-bd71-4b96f7d18a27"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cESGkNN",",","testset",","," ","\"ConfusionMatrixPlot\""}],"]"}]],
"Input",CellLabel -> "In[162]:= ",ExpressionUUID -> "9cfc7e25-3d61-4f5e-ba6c-625d1fdc479b"],Cell[
BoxData[
GraphicsBox[RasterBox[CompressedData["1:eJxTTMoPSmVmYGBghWIQWyzgOF+g/xv73Xtua1T4PrWvTPRtkzl92r4shu2pW/I7+/jnV67v2PTWXsl3yYnd9q/scakP9+Z+4uP71j5b7se7wBkv7YOjv7lIqN+3fyPUerbk4mv7heu+6YrPeGgfoKnNELSsCqf6naWpRz4ov7M/dTLxcvLhN/bBSqtPml58bv/iVf4H7u2v7dl+3L8+afMje4Ha5SvYQtbaX3WcfM2Q9a39+XXTPG9kvLBf9HS37z3ZWyS7kwEMPuCkH1aJrHN/eAvKZ2AQMVrDsrjnrT2jTfbnZe2v7KsjShSFmB7ZN8ydXa/H/MY+8VZsQyvDE/uUBdYS/BMO2q9j+jy3ePYbe/H5kRezZj2z95mo/0uE+bK9gf/WqzmX3tqfKvhay2V63z5xwfWsqYeycbrzb9+RxbOevLU3WfPuHN+V1/aN3zeeWp/01B6Xe3o+dzxzNX9vH6K69p1QwR17lniFhr1/gnHGL6n24vIXAH/GHf4="],
{{0,0},{5,5}},{0,1}],Epilog -> CompressedData["1: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"],
Frame -> True,FrameLabel -> {FormBox["\"predicted class\"",TraditionalForm],FormBox[
"\"actual class\"",TraditionalForm]},FrameTicks -> CompressedData["1:eJxTTMoPSmNiYGAoZgESPpnFJWg8VtxyRQxgIOQAEWYHEm75RblO+RUQAW4gEZRfkliSmZ8HFAxmBPINEUYEleakgtUA5WDKoEYCVfADiZCixJRMkHBiDshgrLbzkGK7EbVtZyHFdmNq2/7DngTbTaht+wNSbDelxHay0mAwSMDEgJKEBDHCkJLUADHChJIoBRthbE5JvBAdFkQENdHRDhI0JZTjJHRdQn4r/rSnfpoHCRpR3XqiMzzY92bUtp7o0g7se0JZnmTriS7qwenNghLrqZgQial3aJcOial3aJcMial3aJcKial3aJcIial38NkOAASHGSo="],
FrameTicksStyle -> 13,GridLinesStyle -> Directive[GrayLevel[0.5`,0.4`]],ImageSize -> 228.`,
Method -> CompressedData["1:eJylUttKAzEQrfWGeEGkT775DX5AqVarYGXpFt/j7qQNppkyk0Crv+GL/oEv/pPf4A+YWdHWZVsRA1lOdnLOnBzm6BZ7eqNWq/Fa/FwZ9rr+deoFC+l2BK2J4UTluXEDvSJVIaSZspDTQ+O183b/2CzRGhG0Qatg/QkGlyuapn5qgbdEL3gcKW+yEulwRuqQGg9NxpfOA6nMG3R6dYnNzQhugDjeo+NivZctHUTQj1p3XQwMCbIpVOvzqgXoUwBej+BcWYaKRmdaQ+Z5qSF554UZDG3c/jO1BTelE8U00Mj/UnFvXiZB4/6hJZbahGNrHPDPd1dEpQlAI41OAzFSF3P4DqdCd2xVBiNwfqmuWJ+kElvL2oraNJXjNbpyi/3ZZCQW/e+jtCuEWDHuj4O7I0C5ASziPT/Jeml+ACDqxdw="],
PlotRangePadding -> None],StandardForm],"Output",CellLabel -> "Out[162]= ",ExpressionUUID -> "ba422f11-4fb2-4b89-b6c3-510f4eae7bcb"]},
Open],ExpressionUUID -> "cf9a7191-e54c-4de9-af52-c1c56959be47"],Cell[
TextData[{"Using"," ","the"," ","same"," ","training","/","testing"," ","set"," ","as"," ","before",StyleBox[
RowBox[{","," "}]],"evaluate"," ","the"," ","influence"," ","of"," ","the"," ","number"," ","of"," ","neighbors"," ","on"," ","the"," ","kNN"," ","Classifier"," ","testing"," ","accuracy"," ","by"," ","varying"," ","the"," ","number"," ","of"," ","neihbors"," ","used"," ","from"," ","1"," ","to"," ","10","."}],
"Text",CellFrame -> 2,Background -> RGBColor[0.8941176470588236`,0.8745098039215686`,
0.8745098039215686`],ExpressionUUID -> "54c215a0-82fa-43ed-ae62-2263e402da7e"],Cell[
TextData[
{"We"," ","first"," ","create"," ","a"," ","function"," ","with"," ","argument"," ","the"," ","number"," ","of"," ","neighbors"," ","that"," ","returns"," ","a",StyleBox[
RowBox[{" ","("}]],"trained",StyleBox[RowBox[{")"," "}]],"classifier",":"}],"Text",
ExpressionUUID -> "ca4eb15c-1d3f-4740-b80a-018fcbf753a8"],Cell[
BoxData[RowBox[{RowBox[
{RowBox[{"cESGkNNsearch","[","k_","]"}]," ",":="," ",RowBox[{"Classify","[",RowBox[
{RowBox[{"trainingset","\[Rule]"," ","\"ESG Label\""}],","," ",RowBox[{"Method"," ","\[Rule]"," ",RowBox[
{"{",RowBox[{"\"NearestNeighbors\"",","," ",RowBox[{"\"NeighborsNumber\""," ","\[Rule]","k"}]}],"}"}]}]}],"]"}]}],";"}]],
"Input",CellLabel -> "In[163]:= ",ExpressionUUID -> "49d7331e-293c-4c70-af79-cefe32410f1c"],Cell[
TextData[
{"We"," ","compute"," ","the"," ","accuracy"," ","on"," ","the"," ","testing"," ","set",StyleBox[
RowBox[{","," "}]],"first"," ","mapping"," ","our"," ","classifier"," ","function"," ","on"," ","the"," ","number"," ","of"," ","neighbors",StyleBox[
RowBox[{","," "}]],"then"," ","applying"," ","ClassifierMeasurements",":"}],"Text",
ExpressionUUID -> "78d04ed9-0e30-46a5-b270-ba0f0c36111f"],Cell[
BoxData[RowBox[{RowBox[
{"cmESGkNNaccu"," ","=",RowBox[{RowBox[{RowBox[{"ClassifierMeasurements","[",RowBox[
{RowBox[{"cESGkNNsearch","[","#","]"}],",","testset",","," ","\"Accuracy\""}],"]"}]," ","&"}],"/@"," ",RowBox[
{"Range","[","10","]"}]}]}],";"}]],"Input",CellLabel -> "In[164]:= ",ExpressionUUID -> "25fab7e0-ba0d-4c53-a736-e4f8e3a49db3"],Cell[
TextData[
{"Finally",StyleBox[RowBox[{","," "}]],"we"," ","create"," ","an"," ","association"," ","between"," ","the"," ","number"," ","of"," ","neighbors"," ","and"," ","the"," ","computed"," ","testing"," ","set"," ","accuracy",":"}],
"Text",ExpressionUUID -> "a8f115de-e8b0-4ba9-92cd-fb4c290969a7"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cmESGkNNbestk"," ","=",RowBox[{"AssociationThread","[",RowBox[
{RowBox[{"Range","[","10","]"}]," ","\[Rule]"," ","cmESGkNNaccu"}]," ","]"}]}]],"Input",
CellLabel -> "In[165]:= ",ExpressionUUID -> "9f651888-9218-4444-9c14-3d4da9b4e712"],Cell[
BoxData[
RowBox[{"\[LeftAssociation]",RowBox[{RowBox[{"1","\[Rule]","0.40594059405940597`"}],",",RowBox[
{"2","\[Rule]","0.3712871287128713`"}],",",RowBox[{"3","\[Rule]","0.3910891089108911`"}],",",RowBox[
{"4","\[Rule]","0.4405940594059406`"}],",",RowBox[{"5","\[Rule]","0.43564356435643564`"}],",",RowBox[
{"6","\[Rule]","0.4752475247524752`"}],",",RowBox[{"7","\[Rule]","0.46534653465346537`"}],",",RowBox[
{"8","\[Rule]","0.4158415841584158`"}],",",RowBox[{"9","\[Rule]","0.4306930693069307`"}],",",RowBox[
{"10","\[Rule]","0.4405940594059406`"}]}],"\[RightAssociation]"}],StandardForm],"Output",
CellLabel -> "Out[165]= ",ExpressionUUID -> "8b715b57-adf2-4a76-9635-5f02ea70ccdd"]},
Open],ExpressionUUID -> "f9867681-9c60-410a-8793-946dbcc9d47e"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["15",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","number"," ","of"," ","neighbors"," ","gives"," ","the"," ","best"," ","testing"," ","accuracy","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["1",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],"Text",CellFrame -> 2,
Background -> RGBColor[0.7490196078431373`,0.792156862745098`,0.9215686274509803`],
ExpressionUUID -> "68c1f74a-b118-4710-9701-945e9172df79"],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"TakeLargest","[",RowBox[{"cmESGkNNbestk",",","1"}],"]"}]],"Input",CellLabel -> "In[166]:= ",
ExpressionUUID -> "fa44ef87-1bdf-4804-89a0-5371afbe1596"],Cell[
BoxData[RowBox[{"\[LeftAssociation]",RowBox[
{"6","\[Rule]","0.4752475247524752`"}],"\[RightAssociation]"}],StandardForm],"Output",
CellLabel -> "Out[166]= ",ExpressionUUID -> "2413c68d-23c8-4cd6-b0cc-436f7d287059"]},
Open],ExpressionUUID -> "478cb3ca-5574-47b2-ab93-b0cf388f0fc3"],Cell[
TextData[{"As"," ","before",StyleBox[
RowBox[{","," "}]],"we"," ","obtain"," ","a"," ","better"," ","accuracy","."}],"Text",
ExpressionUUID -> "1c8a0942-0e4e-43d6-a702-17ba9f93309b"]},Open],ExpressionUUID -> "f05b5d40-859c-497c-8d6b-b24f49a55e32"]},
Open],ExpressionUUID -> "9adfa90e-fe70-40d6-971a-b29a31ed8fbe"],Cell[
CellGroupData[
{Cell[
TextData[{"Image"," ","classification",StyleBox[RowBox[{":"," "}]],"Sustainable"," ","Development"," ","Goals"}],
"Section",ExpressionUUID -> "345c7476-ba38-4f93-aaa4-3f59a5206448"],Cell[
TextData[
{"The"," ",ButtonBox[RowBox[{"Sustainable"," ","Development"," ","Goals"}],BaseStyle -> "HyperlinkActionNew",
ButtonData -> {URL["https://sdgs.un.org/goals"],None},ButtonNote -> "https://sdgs.un.org/goals"]," ","are"," ","a"," ","collection"," ","of"," ","17"," ","global"," ","goals"," ","to"," ","transition"," ","towards"," ","a"," ","more"," ","sustainable"," ","future",".","\n","We"," ","will"," ","try"," ","to"," ","classify"," ","images"," ","of"," ","the"," ","SDGs"," ","icons","."}],
"Text",CellFrame -> 2,FontSlant -> Plain,Background -> RGBColor[0.8941176470588236`,
0.8941176470588236`,0.8941176470588236`],ExpressionUUID -> "2d4cc557-8fe0-418e-ad15-9f797015cf82"],Cell[
TextData[
{"First",StyleBox[RowBox[{","," "}]],"import"," ","a"," ","list"," ","of"," ","10"," ","thumbnails"," ","of"," ","the"," ","17"," ","SDGs"," ","from"," ","a"," ","web"," ","image"," ","search",StyleBox[
RowBox[{"."," "}]],"As"," ","search"," ","query",StyleBox[RowBox[{","," "}]],"you"," ","can"," ","use"," ","the"," ","following",":","\n","\"","SDG"," ","1",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","2",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","3",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","4",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","5",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","6",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","7",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","8",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","9",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","10",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","11",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","12",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","13",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","14",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","15",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","16",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","17","\"","\n","\n","Alternatively",StyleBox[
RowBox[{","," "}]],"you"," ","can"," ","import"," ","the"," ","images"," ","from"," ","the"," ","PDF"," ","file",StyleBox[
RowBox[{" ","\""}]],"ImagesSDG",".","pdf",StyleBox[RowBox[{"\""," "}]],"with"," ","the"," ","following"," ","line"," ","of"," ","code",StyleBox[
RowBox[{" ","("}]],"replace"," ",StyleBox["folder",FontSlant -> Italic]," ","with"," ","the"," ","path"," ","to"," ","your"," ","file","):","\n","\t","sdgImages",StyleBox[
RowBox[{" ","="," "}]],"Partition","[","ImageReflect",StyleBox[RowBox[{" ","/@"," "}]],"Flatten",StyleBox[
RowBox[{" ","@"," "}]],"Values",StyleBox[RowBox[{" ","@"," "}]],"Import","[\"","folder","/","ImagesSDG",".","pdf",StyleBox[
RowBox[{"\","," ","\""}]],"EmbeddedImages","\"],","10","];"}],"Text",CellFrame -> 2,
FontSlant -> Plain,Background -> RGBColor[0.8941176470588236`,0.8941176470588236`,
0.8941176470588236`],ExpressionUUID -> "a711bfe9-235a-4ceb-91d3-495d6b53bdc7"],Cell[
BoxData[
RowBox[{RowBox[{"sdgClasses"," ","="," ",RowBox[{"{",RowBox[{"\"SDG 1\"",","," ","\"SDG 2\"",","," ","\"SDG 3\"",","," ","\"SDG 4\"",","," ","\"SDG 5\"",","," ","\"SDG 6\"",","," ","\"SDG 7\"",","," ","\"SDG 8\"",","," ","\"SDG 9\"",","," ","\"SDG 10\"",","," ","\"SDG 11\"",","," ","\"SDG 12\"",","," ","\"SDG 13\"",","," ","\"SDG 14\"",","," ","\"SDG 15\"",","," ","\"SDG 16\"",","," ","\"SDG 17\""}],"}"}]}],";"}]],
"Input",CellLabel -> "In[7]:= ",ExpressionUUID -> "47b324e4-f447-43dd-b05f-c9aa111bc7ea"],Cell[
TextData[
{"Method"," ","1",StyleBox[RowBox[{":"," "}]],"WebImageSearch"}],"Text",ExpressionUUID -> "9cc2ab2f-f4dd-49b4-bcd5-71c0ac72c202"],Cell[
BoxData[
RowBox[{RowBox[{RowBox[{RowBox[{"WebImageSearch","[",RowBox[{"#",",","\"Thumbnails\"",",",RowBox[
{"MaxItems","\[Rule]","10"}]}],"]"}]," ","&"}]," ","/@","sdgClasses"}],";"}]],"Input",
ExpressionUUID -> "dcff1101-617b-4182-9cea-61fa3b6277c9"],Cell[
TextData[{"Method"," ","2",StyleBox[
RowBox[{":"," "}]],"Extract"," ","from"," ","PDF",":"}],"Text",ExpressionUUID -> "3dba3d63-834f-4075-83e7-601117dfe74b"],Cell[
BoxData[
RowBox[{RowBox[{"sdgImages"," ","="," ",RowBox[{"Partition","[",RowBox[{RowBox[{"ImageReflect"," ","/@"," ",RowBox[
{"Flatten"," ","@"," ",RowBox[{"Values"," ","@"," ",RowBox[{"Import","[",RowBox[{"\"MGT-492/Assignment/Assignment 2/ImagesSDG.pdf\"",","," ","\"EmbeddedImages\""}],"]"}]}]}]}],",","10"}],"]"}]}],";"}]],
"Input",CellLabel -> "In[1]:= ",ExpressionUUID -> "31cdffd5-953f-4b0f-b679-4665df756086"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"sdgImages","[",RowBox[{"[",RowBox[{"15",",",RowBox[{"{",RowBox[
{"3",",","9"}],"}"}]}],"]"}],"]"}]],"Input",CellLabel -> "In[169]:= ",ExpressionUUID -> "db044158-928a-4b39-bf84-e13a3576cff5"],Cell[
BoxData[
RowBox[{"{",RowBox[{GraphicsBox[TagBox[RasterBox[CompressedData["1:"],
{{0,775.`},{474.`,0}},{0,255},ColorFunction -> RGBColor],BoxForm`ImageTag["Byte",
ColorSpace -> "RGB",Interleaving -> True],Selectable -> False],DefaultBaseStyle -> "ImageGraphics",
ImageSizeRaw -> {474.`,775.`},PlotRange -> {{0,474.`},{0,775.`}}],",",GraphicsBox[
TagBox[RasterBox[CompressedData["1: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"],
{{0,226.`},{226.`,0}},{0,255},ColorFunction -> RGBColor],BoxForm`ImageTag["Byte",
ColorSpace -> "RGB",Interleaving -> True],Selectable -> False],DefaultBaseStyle -> "ImageGraphics",
ImageSizeRaw -> {226.`,226.`},PlotRange -> {{0,226.`},{0,226.`}}]}],"}"}],StandardForm],
"Output",CellLabel -> "Out[169]= ",ExpressionUUID -> "a943d24c-2f43-49f2-a966-91eb99a091aa"]},
Open],ExpressionUUID -> "edeb9f6e-d702-45ce-baed-31319b0cc801"],Cell[
TextData[{"Then",StyleBox[
RowBox[{","," "}]],"associate"," ","each"," ","image"," ","to"," ","its"," ","label",StyleBox[
RowBox[{" ","(\""}]],"SDG"," ","1",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","2",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","3",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","4",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","5",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","6",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","7",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","8",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","9",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","10",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","11",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","12",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","13",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","14",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","15",StyleBox[RowBox[{"\","," ","\""}]],"SDG"," ","16",StyleBox[
RowBox[{"\","," ","\""}]],"SDG"," ","17","\")"}],"Text",CellFrame -> 2,FontSlant -> Plain,
Background -> RGBColor[0.8941176470588236`,0.8941176470588236`,0.8941176470588236`],
ExpressionUUID -> "bf5c2598-2151-4ca8-9ffa-782baadefbcc"],Cell[
BoxData[RowBox[{RowBox[
{"sdgDataset","=",RowBox[{"Flatten","[",RowBox[{"Thread","/@",RowBox[{"Thread","[",RowBox[
{"sdgImages","\[Rule]","sdgClasses"}],"]"}]}],"]"}]}],";"}]],"Input",CellLabel -> "In[8]:= ",
ExpressionUUID -> "0ac4b117-53bd-4042-a9aa-a87649abc4a5"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["16",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","Build"," ","a"," ","classifier"," ","model"," ","that"," ","return"," ","the"," ","SDG"," ","goal",StyleBox[
RowBox[{" ","("}]],"e",".","g",StyleBox[RowBox[{"."," ","\""}]],"SDG"," ","1",StyleBox[
RowBox[{"\")"," "}]],"using"," ","images"," ","as"," ","input",".","\n","Split"," ","your"," ","dataset"," ","into"," ","80",StyleBox[
RowBox[{"%"," "}]],"training"," ","and"," ","20",StyleBox[RowBox[{"%"," "}]],"test",StyleBox[
RowBox[{"."," "}]],"Do"," ","not"," ","forget"," ","to"," ","randomize"," ","your"," ","dataset",StyleBox[
RowBox[{"."," ",StyleBox["[",FontWeight -> Bold]}]],StyleBox["1",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],
"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,0.792156862745098`,
0.9215686274509803`],ExpressionUUID -> "15d94560-3691-43f6-a291-dba91369bd86"],Cell[
BoxData[
RowBox[{RowBox[{"sdgNobs"," ","="," ",RowBox[{"Length","[","sdgDataset","]"}]}],";"}]],
"Input",CellLabel -> "In[9]:= ",ExpressionUUID -> "59eb25ee-d023-4a56-ad76-34875578537e"],Cell[
BoxData[
RowBox[{RowBox[{RowBox[{"{",RowBox[{"sdgTrainingset",",","sdgTestset"}],"}"}],"=",RowBox[
{"TakeDrop","[",RowBox[{RowBox[{"RandomSample","[","sdgDataset","]"}],",",RowBox[
{"Floor","[",RowBox[{"sdgNobs","*","0.8"}],"]"}]}],"]"}]}],";"}]],"Input",CellLabel -> "In[172]:= ",
ExpressionUUID -> "3e5a9e32-5c4e-4bfd-bcef-5ebdae701c20"],Cell[
CellGroupData[{Cell[
BoxData[
RowBox[{"cSDG"," ","="," ",RowBox[{"Classify","[","sdgTrainingset","]"}]}]],"Input",
CellLabel -> "In[173]:= ",ExpressionUUID -> "26197ece-6d45-4c3d-97e1-8eebaa7c953c"],Cell[
BoxData[
TagBox[TemplateBox[{RowBox[{StyleBox[TagBox["ClassifierFunction","SummaryHead"],"NonInterpretableSummary"],StyleBox[
"[","NonInterpretableSummary"],DynamicModuleBox[{Set[Typeset`open$$,False],Set[Typeset`embedState$$,
"Ready"]},TemplateBox[{TemplateBox[{PaneSelectorBox[{False -> GridBox[{{PaneBox[ButtonBox[
DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxOpener"]],RuleDelayed[
ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,BaseStyle -> {},Evaluator -> Automatic,
Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[{Automatic,Times[
3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],
-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["\"Image\"",
"SummaryItem"]}]},{RowBox[{TagBox["\"Number of classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TagBox[TooltipBox["17",TagBox[RowBox[{"{",RowBox[{"\"SDG 1\"",",","\"SDG 10\"",",","\"SDG 11\"",",","\"SDG 12\"",",",RowBox[
{"\[LeftSkeleton]","9","\[RightSkeleton]"}],",","\"SDG 6\"",",","\"SDG 7\"",",","\"SDG 8\"",",","\"SDG 9\""}],"}"}],
Function[Short[Slot[1],1]]]],Function[Annotation[Slot[1],Short[{"SDG 1","SDG 10","SDG 11","SDG 12","SDG 13","SDG 14","SDG 15","SDG 16","SDG 17","SDG 2","SDG 3","SDG 4","SDG 5","SDG 6","SDG 7","SDG 8","SDG 9"},
1],"Tooltip"]]],"SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[
{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["\"Image\"",
"SummaryItem"]}]},{RowBox[{TagBox["\"Number of classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
TagBox[TooltipBox["17",TagBox[RowBox[{"{",RowBox[{"\"SDG 1\"",",","\"SDG 10\"",",","\"SDG 11\"",",","\"SDG 12\"",",",RowBox[
{"\[LeftSkeleton]","9","\[RightSkeleton]"}],",","\"SDG 6\"",",","\"SDG 7\"",",","\"SDG 8\"",",","\"SDG 9\""}],"}"}],
Function[Short[Slot[1],1]]]],Function[Annotation[Slot[1],Short[{"SDG 1","SDG 10","SDG 11","SDG 12","SDG 13","SDG 14","SDG 15","SDG 16","SDG 17","SDG 2","SDG 3","SDG 4","SDG 5","SDG 6","SDG 7","SDG 8","SDG 9"},
1],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"\"LogisticRegression\"","SummaryItem"]}]},{RowBox[{TagBox["\"Number of training examples: \"",
"SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["136","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],ButtonBox[DynamicBox[
ToBoxes[If[Or[Less[$VersionNumber,11.2`],UnsameQ[CurrentValue["RunningEvaluator"],
"Local"]],Style["This object cannot be used as input.","SummaryEmbed"],BoxForm`EmbedSummaryLabel[
ClassifierFunction,7475992,Dynamic[Typeset`embedState$$],Automatic]],StandardForm]],
RuleDelayed[ButtonFunction,BoxForm`EmbedSummaryInterpretation["Choose",ClassifierFunction,
7475992,9965821769451101110556141454770689595243006585916200590272,EvaluationBox[],
Dynamic[Typeset`embedState$$],StandardForm,ElisionsDump`embedSummaryBoxes]],DefaultBaseStyle -> "SummaryEmbedButton",
ImageSize -> Inherited,BaseStyle -> {"DialogStyle"},Enabled -> Dynamic[And[GreaterEqual[
$VersionNumber,11.2`],SameQ[CurrentValue["RunningEvaluator"],"Local"],SameQ[Typeset`embedState$$,
"Ready"]]],Appearance -> Inherited,Method -> Inherited,Evaluator -> Automatic]},"SummaryEmbedGrid"],
RuleDelayed[DynamicModuleValues,{}],ExpressionUUID -> "9c4c7742-11bd-42b7-983a-0bc7a7e14811"],StyleBox[
"]","NonInterpretableSummary"]}]},"CopyTag",DisplayFunction -> Function[Slot[1]],
InterpretationFunction -> Function["ClassifierFunction[\[Ellipsis]]"]],False,Selectable -> False,
Editable -> False,SelectWithContents -> True,BoxID -> 9965821769451101110556141454770689595243006585916200590272],
StandardForm],"Output",CellLabel -> "Out[173]= ",ExpressionUUID -> "ab15d9bd-b8fd-4e76-8e2f-ee099eb13c0c"]},
Open],ExpressionUUID -> "04c2b7b6-d8ed-4ef2-b333-c4716353838b"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["17",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","What"," ","is"," ","the"," ","accuracy"," ","on"," ","the"," ","training"," ","set","? ",StyleBox[
"[",FontWeight -> Bold],StyleBox["0",FontWeight -> Bold],StyleBox[".",FontWeight -> Bold],StyleBox[
"5",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],"]\n",StyleBox[
"What",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["is",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["the",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"accuracy",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["on",FontWeight -> Plain],StyleBox[
" ",FontWeight -> Plain],StyleBox["the",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"testing",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["set",FontWeight -> Plain],StyleBox[
"?",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox["[",FontWeight -> Bold],StyleBox[
"0",FontWeight -> Bold],StyleBox[".",FontWeight -> Bold],StyleBox["5",FontWeight -> Bold],StyleBox[
" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox["]",FontWeight -> Bold]}],
"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,0.792156862745098`,
0.9215686274509803`],ExpressionUUID -> "f9dd9a79-292c-4e6b-a246-a163628bb78f"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[",RowBox[{"cSDG",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[174]:= ",ExpressionUUID -> "2dca741d-6144-4328-8334-f264cb61059f"],Cell[
BoxData[
InterpretationBox[TemplateBox[{"0.59","0.05"},"Around",SyntaxForm -> PlusMinus],Around[
0.5913996493989451`,0.05237231993169201`]],StandardForm],"Output",CellLabel -> "Out[174]= ",
ExpressionUUID -> "5d0c0749-8fa8-41fd-8cc6-1470d807b8bd"]},Open],ExpressionUUID -> "1a3763df-b72f-45bd-921d-d5ee09801695"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cSDG",",","sdgTrainingset",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[179]:= ",ExpressionUUID -> "d45ae4ad-0f2b-40c5-8e12-e28777a2d4c1"],Cell[
BoxData[
"0.9558823529411765`",StandardForm],"Output",CellLabel -> "Out[179]= ",ExpressionUUID -> "605792a9-6da0-424b-8187-d1ba1c303c15"]},
Open],ExpressionUUID -> "412ae35d-49a5-4094-b63f-12b83905bfc7"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{RowBox[{"cmSDG"," ","="," ",RowBox[{"ClassifierMeasurements","[",RowBox[
{"cSDG",",","sdgTestset"}],"]"}]}],";"}],"\n",RowBox[{"cmSDG","[","\"Accuracy\"","]"}],"\n",RowBox[
{"cmSDG","[","\"ConfusionMatrixPlot\"","]"}]}],"Input",CellLabel -> "In[176]:= ",
ExpressionUUID -> "9ba8d079-e24d-4120-8268-df3835d0b821"],Cell[
BoxData["0.38235294117647056`",
StandardForm],"Output",CellLabel -> "Out[177]= ",ExpressionUUID -> "90f69733-c337-49e5-bfcf-7cb59b3aa2b1"],Cell[
BoxData[
GraphicsBox[RasterBox[CompressedData["1:eJxTTMoPSmVmYGAQhGIQGwI+2I/SA0N7NP5vbkl7a7/jgbfInO8v7f/81MtM736AU3yg3TtQ9MMqkXXuD29B+TAw8O4iRI/GI356pIXPYPPvQLlnsIXDQNGDLfxH42Vk0oMtHQ50eIwUejT8B5YeKuFfa81pvObza/ukzycebdrz2D4n6uh2ia/7Btxdo/4apUfz79Bz/1APt1GaPjS10sloesNPD9dyYDTe8dNDvf0zGr/Dmx6o+AUAM68Xsw=="],
{{0,0},{17,17}},{0,1}],Epilog -> CompressedData["1:"],
Frame -> True,FrameLabel -> {FormBox["\"predicted class\"",TraditionalForm],FormBox[
"\"actual class\"",TraditionalForm]},FrameTicks -> CompressedData["1:eJy1mM1KA0EQhFcJKCiIHkQ8iImIiAQ3f/6cIhL04inJC0RUCEQXNhE8+qg+huLFmQkqyGiq3K4clmQzdH+zu91dW+XrrHs3nyTJuOQOV8Px5Mev1d//yxP/eU7PpqcX3OEiy+/Ps6fpiSV36GaTwWSYPbiTPb+g0utcbtcq34G6j6PbsNKt+Fw8DexXrLhDPx/cDP3pwciHjzEkhyjD4hdDag5R5SHsr8QBD1E3h9jnIRrmEHs8RNMcYpeHaJlD7PAQR+YQZR7i2Bxii+5V9sWxSTPY18Y6zWBfGms0g31lLNMM9oVRohns6+K1zTKcmDO80AynhRj+pWx6c+57rYguCREaRURFiFAvogjICJFxTl6HyCwmGSKDlGSITEGSITLCyLsZmT/kLiLTg9xFpPeTESKdm4wQ6btkhEjXJCNEel6I0CrSsdC7Obv74P0wbHtGJ9yodvrv5be2/UTw2ZvW2eGZGMrPOjusCnz21Do7rIsk2WFlKHnqYG0cysw6O/x2IHnq4Bckyd7hd0TJfYdfkyXZYadA0utgs0Syd9gvkjx1sGUmqTjYNVRcedw3LZzdUGvgHq5OcRAerk54EB6uTn8QHq5OhhAerk6NEB6uTpQQHq5OmxAerk6iEB6uTqngHq5Or+Aerk614B6uTrvgHq5OweAerk7H4B6uTs3gHq5O0+Ae7l8MHxctE3g="],
FrameTicksStyle -> 12.236178755399514`,GridLinesStyle -> Directive[GrayLevel[0.5`,
0.4`]],ImageSize -> 399.61804661015003`,Method -> CompressedData["1:eJylUttKAzEQrfWGeEGkT775DX5AqVarYGXpFt/j7qQNppkyk0Crv+GL/oEv/pPf4A+YWdHWZVsRA1lOdnLOnBzm6BZ7eqNWq/Fa/FwZ9rr+deoFC+l2BK2J4UTluXEDvSJVIaSZspDTQ+O183b/2CzRGhG0Qatg/QkGlyuapn5qgbdEL3gcKW+yEulwRuqQGg9NxpfOA6nMG3R6dYnNzQhugDjeo+NivZctHUTQj1p3XQwMCbIpVOvzqgXoUwBej+BcWYaKRmdaQ+Z5qSF554UZDG3c/jO1BTelE8U00Mj/UnFvXiZB4/6hJZbahGNrHPDPd1dEpQlAI41OAzFSF3P4DqdCd2xVBiNwfqmuWJ+kElvL2oraNJXjNbpyi/3ZZCQW/e+jtCuEWDHuj4O7I0C5ASziPT/Jeml+ACDqxdw="],
PlotRangePadding -> None],StandardForm],"Output",CellLabel -> "Out[178]= ",ExpressionUUID -> "1593961c-9b7b-403c-805a-2f36cab6d5a9"]},
Open],ExpressionUUID -> "c90af86c-7464-4aa5-849a-928ce43c06ea"],Cell[
TextData[{StyleBox[
"Question",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["18",FontWeight -> Bold],StyleBox[
RowBox[{StyleBox[":",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold]}]],"\n","Find"," ","the"," ","3"," ","worst"," ","classified"," ","images"," ","of"," ","the"," ","testing"," ","set",StyleBox[
RowBox[{"."," ",StyleBox["[",FontWeight -> Bold]}]],StyleBox["0",FontWeight -> Bold],StyleBox[
".",FontWeight -> Bold],StyleBox["5",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox[
"point",FontWeight -> Bold],"]","\n","For"," ","each"," ","of"," ","these"," ","examples",StyleBox[
RowBox[{","," "}]],"find"," ","the"," ","2"," ","most"," ","likely"," ","classes"," ","according"," ","to"," ","your"," ","classifier",StyleBox[
RowBox[{StyleBox["?",FontWeight -> Plain],StyleBox[" ",FontWeight -> Plain],StyleBox[
"[",FontWeight -> Bold]}]],StyleBox["0",FontWeight -> Bold],StyleBox[".",FontWeight -> Bold],StyleBox[
"5",FontWeight -> Bold],StyleBox[" ",FontWeight -> Bold],StyleBox["point",FontWeight -> Bold],StyleBox[
"]",FontWeight -> Bold]}],"Text",CellFrame -> 2,Background -> RGBColor[0.7490196078431373`,
0.792156862745098`,0.9215686274509803`],ExpressionUUID -> "a40749d4-5188-4f25-958e-3df969b1224c"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"misClassSDG"," ","="," ",RowBox[{"cmSDG","[",RowBox[{"\"WorstClassifiedExamples\"","\[Rule]","3"}],"]"}]}]],
"Input",CellLabel -> "In[180]:= ",ExpressionUUID -> "89de3555-98a1-4936-a0d9-e9abb79f925f"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{GraphicsBox[TagBox[RasterBox[CompressedData["1:"],
{{0,353.`},{474.`,0}},{0,255},ColorFunction -> RGBColor],BoxForm`ImageTag["Byte",
ColorSpace -> "RGB",Interleaving -> True],Selectable -> False],DefaultBaseStyle -> "ImageGraphics",
ImageSizeRaw -> {474.`,353.`},PlotRange -> {{0,474.`},{0,353.`}}],"\[Rule]","\"SDG 14\""}],",",RowBox[
{GraphicsBox[TagBox[RasterBox[CompressedData["1:"],
{{0,261.`},{474.`,0}},{0,255},ColorFunction -> RGBColor],BoxForm`ImageTag["Byte",
ColorSpace -> "RGB",Interleaving -> True],Selectable -> False],DefaultBaseStyle -> "ImageGraphics",
ImageSizeRaw -> {474.`,261.`},PlotRange -> {{0,474.`},{0,261.`}}],"\[Rule]","\"SDG 3\""}],",",RowBox[
{GraphicsBox[TagBox[RasterBox[CompressedData["1:"],
{{0,180.`},{474.`,0}},{0,255},ColorFunction -> RGBColor],BoxForm`ImageTag["Byte",
ColorSpace -> "RGB",Interleaving -> True],Selectable -> False],DefaultBaseStyle -> "ImageGraphics",
ImageSizeRaw -> {474.`,180.`},PlotRange -> {{0,474.`},{0,180.`}}],"\[Rule]","\"SDG 4\""}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[180]= ",ExpressionUUID -> "437e9577-d1ee-4fbb-8de4-d1279e5c0919"]},
Open],ExpressionUUID -> "dcc02e12-c24d-4838-b12a-02f97c59f944"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{"cSDG","[",RowBox[{RowBox[{"misClassSDG","[",RowBox[{"[",RowBox[
{"1",",","1"}],"]"}],"]"}],","," ",RowBox[{"\"TopProbabilities\"","\[Rule]","2"}]}],"]"}],"\n",RowBox[
{"cSDG","[",RowBox[{RowBox[{"misClassSDG","[",RowBox[{"[",RowBox[{"2",",","1"}],"]"}],"]"}],","," ",RowBox[
{"\"TopProbabilities\"","\[Rule]","2"}]}],"]"}],"\n",RowBox[{"cSDG","[",RowBox[{RowBox[
{"misClassSDG","[",RowBox[{"[",RowBox[{"3",",","1"}],"]"}],"]"}],","," ",RowBox[{"\"TopProbabilities\"","\[Rule]","2"}]}],"]"}]}],
"Input",CellLabel -> "In[181]:= ",ExpressionUUID -> "13d04bdc-bf6a-4474-a631-a0db22040d96"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"\"SDG 3\"","\[Rule]","0.9998221570512571`"}],",",RowBox[
{"\"SDG 1\"","\[Rule]","0.00015337279598436916`"}]}],"}"}],StandardForm],"Output",
CellLabel -> "Out[181]= ",ExpressionUUID -> "14229aee-5f87-4d21-821b-e661a451f8cc"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"\"SDG 14\"","\[Rule]","0.9431209117585991`"}],",",RowBox[
{"\"SDG 10\"","\[Rule]","0.054662699726054774`"}]}],"}"}],StandardForm],"Output",
CellLabel -> "Out[182]= ",ExpressionUUID -> "e560b033-902e-4119-a0e5-b74d275f675e"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"\"SDG 10\"","\[Rule]","0.8309443054543069`"}],",",RowBox[
{"\"SDG 14\"","\[Rule]","0.1649773578998723`"}]}],"}"}],StandardForm],"Output",CellLabel -> "Out[183]= ",
ExpressionUUID -> "a4590b66-582e-4bbe-8cbe-fd08e5ea8553"]},Open],ExpressionUUID -> "4663348d-148d-4259-83ae-28889ca78e03"],Cell[
CellGroupData[
{Cell[
TextData[{"Image"," ","classifier"," ","with"," ","dimensionality"," ","reduction"}],
"Subsection",ExpressionUUID -> "4b161a05-0ab0-46ef-89d6-ef2c4ffd01fe"],Cell[
TextData[
{"Instead"," ","of"," ","directly"," ","working"," ","with"," ","images",StyleBox[
RowBox[{","," "}]],"we"," ","will"," ","try"," ","to"," ","first"," ","perform"," ","some"," ","dimensionality"," ","reduction"," ","operation",":","\n","\n","Let's"," ","project"," ","our"," ","images"," ","on"," ","a"," ","space"," ","of"," ","dimensions"," ","17",StyleBox[
RowBox[{","," "}]],"i",".","e",StyleBox[RowBox[{"."," "}]],"our"," ","images"," ","are"," ","converted"," ","into"," ","vector"," ","of"," ","17"," ","elements",":"}],
"Text",ExpressionUUID -> "d34d7aae-b619-467e-a452-091680c40807"],Cell[
BoxData[{RowBox[
{RowBox[{"drSDG"," ","="," ",RowBox[{"DimensionReduction","[",RowBox[{RowBox[{"Flatten"," ","@"," ","sdgImages"}],",","17"}],"]"}]}],";"}],"\n",RowBox[
{RowBox[{"sdgImagesReduced"," ","="," ",RowBox[{"drSDG","[",RowBox[{"Flatten"," ","@"," ","sdgImages"}],"]"}]}],";"}]}],
"Input",CellLabel -> "In[2]:= ",ExpressionUUID -> "12e021f8-f775-425d-af8e-5bb65b733736"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"sdgImagesReduced","[",RowBox[{"[","1","]"}],"]"}]],"Input",
CellLabel -> "In[4]:= ",ExpressionUUID -> "79a82c58-1590-4e3a-8b5e-accbcc99dcc9"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"-","7.9076178454069845`"}],",","6.473023250344934`",",",RowBox[
{"-","2.221289653015125`"}],",","6.285296474581885`",",","0.5198911370394184`",",","2.5440629243194874`",",","1.5422001095524895`",",","0.24592320704878665`",",","1.9288874022183675`",",","2.014813470342066`",",",RowBox[
{"-","3.1345108526157675`"}],",",RowBox[{"-","2.347383076458365`"}],",",RowBox[{"-","1.4064535850369206`"}],",","3.7394130891212325`",",",RowBox[
{"-","2.139425315482596`"}],",","2.8714177088208044`",",","1.4927394347162695`"}],"}"}],
StandardForm],"Output",CellLabel -> "Out[4]= ",ExpressionUUID -> "ba126688-9abb-4fbe-896c-2474f57e6888"]},
Open],ExpressionUUID -> "f415762b-b384-4872-8102-2e7a344c82ce"],Cell[
TextData[{"We"," ","then"," ","prepare"," ","our"," ","dataset",StyleBox[
RowBox[{","," "}]],"training"," ","set",StyleBox[RowBox[{","," ","&"," "}]],"testing"," ","set",":"}],
"Text",ExpressionUUID -> "af4b9a43-6ded-45a5-a43f-2ca48e2fa1a4"],Cell[
BoxData[{RowBox[
{RowBox[{"sdgImagesReducedP"," ","="," ",RowBox[{"Partition","[",RowBox[{"sdgImagesReduced",",","10"}],"]"}]}],";"}],"\n",RowBox[
{RowBox[{"sdgDatasetReduced"," ","="," ",RowBox[{"Flatten","[",RowBox[{"Thread","/@",RowBox[
{"Thread","[",RowBox[{"sdgImagesReducedP","\[Rule]","sdgClasses"}],"]"}]}],"]"}]}],";"}]}],
"Input",CellLabel -> "In[14]:= ",ExpressionUUID -> "d6456c55-d90d-43ab-9973-d9e064de5080"],Cell[
BoxData[
RowBox[{RowBox[{RowBox[{"{",RowBox[{"sdgTrainingsetReduced",",","sdgTestsetReduced"}],"}"}],"=",RowBox[
{"TakeDrop","[",RowBox[{RowBox[{"RandomSample","[","sdgDatasetReduced","]"}],",",RowBox[
{"Floor","[",RowBox[{"sdgNobs","*","0.8"}],"]"}]}],"]"}]}],";"}]],"Input",CellLabel -> "In[23]:= ",
ExpressionUUID -> "7bd5c9bf-c808-4407-a3b5-c5d17ec1ba85"],Cell[
TextData[{"We"," ","train"," ","our"," ","classifier"," ","on"," ","the"," ","reduced"," ","data",":"}],
"Text",ExpressionUUID -> "69ccbf3f-6bbf-4721-a868-427952645739"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"cSDGreduced"," ","="," ",RowBox[{"Classify","[","sdgTrainingsetReduced","]"}]}]],
"Input",CellLabel -> "In[24]:= ",ExpressionUUID -> "ba05c8ef-1fa8-4a92-8b32-19e5063ecca5"],Cell[
BoxData[
InterpretationBox[RowBox[{TagBox["ClassifierFunction","SummaryHead"],"[",DynamicModuleBox[
{Set[Typeset`open$$,False],Set[Typeset`embedState$$,"Ready"]},TemplateBox[{PaneSelectorBox[
{False -> GridBox[{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps",
"SummaryBoxOpener"]],RuleDelayed[ButtonFunction,Set[Typeset`open$$,True]],Appearance -> None,
BaseStyle -> {},Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},
ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[
AbsoluteCurrentValue[Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[
0.45`],PointBox[{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TemplateBox[
{"\"NumericalVector\"",StyleBox[TemplateBox[{"\" (length: \"","17","\")\""},"RowDefault"],
GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],"SummaryItem"]}]},{RowBox[{TagBox[
"\"Number of classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox["17",TagBox[RowBox[{"{",RowBox[{"\"SDG 1\"",",","\"SDG 10\"",",","\"SDG 11\"",",","\"SDG 12\"",",",RowBox[
{"\[LeftSkeleton]","9","\[RightSkeleton]"}],",","\"SDG 6\"",",","\"SDG 7\"",",","\"SDG 8\"",",","\"SDG 9\""}],"}"}],
Function[Short[Slot[1],1]]]],Function[Annotation[Slot[1],Short[{"SDG 1","SDG 10","SDG 11","SDG 12","SDG 13","SDG 14","SDG 15","SDG 16","SDG 17","SDG 2","SDG 3","SDG 4","SDG 5","SDG 6","SDG 7","SDG 8","SDG 9"},
1],"Tooltip"]]],"SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}],True -> GridBox[
{{PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource["FEBitmaps","SummaryBoxCloser"]],
RuleDelayed[ButtonFunction,Set[Typeset`open$$,False]],Appearance -> None,BaseStyle -> {},
Evaluator -> Automatic,Method -> "Preemptive"],Alignment -> {Center,Center},ImageSize -> Dynamic[
{Automatic,Times[3.5`,Times[CurrentValue["FontCapHeight"],Power[AbsoluteCurrentValue[
Magnification],-1]]]}]],GraphicsBox[{{PointSize[0.13`],GrayLevel[0.45`],PointBox[
{{0.9821769431797024`,-0.440194219686987`},{1.1339776261519132`,0.8056918676854272`},{0.5279892326667741`,0.6574306661126254`},{0.022147046479890797`,1.4937877187998898`}}],GrayLevel[
0.7`],PointBox[{{-0.9815166384819979`,0.15045697525228735`},{-0.5923526886966953`,-0.33441771553094035`},{-0.005656646679640442`,-1.462421365651345`},{-1.0734370436522753`,-1.3729645043477454`}}]},{GrayLevel[
0.55`],AbsoluteThickness[1.5`],LineBox[{{-1.`,1.5`},{1,-1.6`}}]}},{Axes -> {False,False},AxesLabel -> {None,None},AxesOrigin -> {0,0},BaseStyle -> {FontFamily -> "Arial",AbsoluteThickness[
1.5`]},DisplayFunction -> Identity,Frame -> {{True,True},{True,True}},FrameLabel -> {{None,None},{None,None}},FrameStyle -> Directive[
Thickness[Tiny],GrayLevel[0.7`]],FrameTicks -> {{None,None},{None,None}},GridLines -> {None,None},LabelStyle -> {FontFamily -> "Arial"},Method -> {"ScalingFunctions" -> None},PlotRange -> {{-1.`,1},{-1.3`,1.1`}},PlotRangeClipping -> True,PlotRangePadding -> {{0.7`,0.7`},{0.7`,0.7`}},Ticks -> {None,None}},
Axes -> False,AspectRatio -> 1,ImageSize -> Dynamic[{Automatic,Times[3.5`,Times[CurrentValue[
"FontCapHeight"],Power[AbsoluteCurrentValue[Magnification],-1]]]}],Frame -> True,
FrameTicks -> None,FrameStyle -> Directive[Opacity[0.5`],Thickness[Tiny],RGBColor[
0.368417`,0.506779`,0.709798`]],Background -> GrayLevel[0.94`]],GridBox[{{RowBox[
{TagBox["\"Input type: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TemplateBox[
{"\"NumericalVector\"",StyleBox[TemplateBox[{"\" (length: \"","17","\")\""},"RowDefault"],
GrayLevel[0.5`],StripOnInput -> False]},"RowDefault"],"SummaryItem"]}]},{RowBox[{TagBox[
"\"Number of classes: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[TagBox[
TooltipBox["17",TagBox[RowBox[{"{",RowBox[{"\"SDG 1\"",",","\"SDG 10\"",",","\"SDG 11\"",",","\"SDG 12\"",",",RowBox[
{"\[LeftSkeleton]","9","\[RightSkeleton]"}],",","\"SDG 6\"",",","\"SDG 7\"",",","\"SDG 8\"",",","\"SDG 9\""}],"}"}],
Function[Short[Slot[1],1]]]],Function[Annotation[Slot[1],Short[{"SDG 1","SDG 10","SDG 11","SDG 12","SDG 13","SDG 14","SDG 15","SDG 16","SDG 17","SDG 2","SDG 3","SDG 4","SDG 5","SDG 6","SDG 7","SDG 8","SDG 9"},
1],"Tooltip"]]],"SummaryItem"]}]},{RowBox[{TagBox["\"Method: \"","SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox[
"\"LogisticRegression\"","SummaryItem"]}]},{RowBox[{TagBox["\"Number of training examples: \"",
"SummaryItemAnnotation"],"\[InvisibleSpace]",TagBox["136","SummaryItem"]}]}},GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Automatic}}},
AutoDelete -> False,GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}},"Rows" -> {{Automatic}}},BaseStyle -> {ShowStringCharacters -> False,NumberMarks -> False,PrintPrecision -> 3,ShowSyntaxStyles -> False}]}},
GridBoxAlignment -> {"Columns" -> {{Left}},"Rows" -> {{Top}}},AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}},"Rows" -> {{Automatic}}},BaselinePosition -> {1,1}]},
Dynamic[Typeset`open$$],ImageSize -> Automatic]},"SummaryPanel"],RuleDelayed[DynamicModuleValues,
{}],ExpressionUUID -> "727b1fa7-e615-4d3e-beea-22e40e065949"],"]"}],ClassifierFunction[
Association["ExampleNumber" -> 136,"ClassNumber" -> 17,"Input" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "NumericalVector",
"Length" -> 17]],"Output" -> Association["f1" -> Association["Type" -> "NumericalVector",
"Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor["Sequence",Association[
"Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"NumericalVector"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"SynthesizeMissingValues",Association["Invertibility" -> "Perfect","Missing" -> "Imputed",
"StructurePreserving" -> True,"Input" -> Association["f1" -> Association["Type" -> "NumericalVector",
"Weight" -> 1]],"Distribution" -> LearnedDistribution[Association["ExampleNumber" -> 136,
"Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset",Association["Input" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Length" -> 17]],"Output" -> Association[
"f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Identity"],"ScalarFeature" -> True,"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"Processor" -> MachineLearning`MLProcessor["Identity"],"PerformanceGoal" -> "DirectTraining",
"BatchProcessing" -> Automatic,"Model" -> Association["RotationMatrix" -> {{0.9404624874899911`,-0.19012943272082058`,0.27431001278015404`,0.015386523021545124`,0.029956418768540893`,0.01672722418735154`,-0.013723034484345243`,-0.015831569330701862`,-0.011286245564311834`,-0.0016066266377583337`,0.01508293627630319`,-0.02243823425021148`,0.013896152968148069`,-0.00478057122477066`},{-0.108947935564312`,-0.946056942199446`,-0.28025915756222125`,0.05958042384325201`,0.0032000652855202366`,-0.067921627694673`,0.011477329595861304`,0.0031786659622648327`,-0.011585053903469216`,0.035238532232137854`,0.028277951702865005`,-0.007951480452615385`,0.03403435537725788`,0.029315892903798577`},{-0.31888645340850563`,-0.23232211991981502`,0.9107400568230438`,0.07631782906786141`,0.04844188583569492`,0.03620231392750301`,-0.007294412516681127`,-0.032030591664822264`,-0.048598551165225885`,-0.023362383509476947`,0.008423360077340127`,-0.01596520489016795`,-0.007766963079129373`,-0.0016484438039830742`},{0.015119897043530376`,0.07874759940591294`,-0.05549669259854312`,0.9743035174689916`,-0.09467478542935652`,-0.06070364169355668`,-0.021932534665521895`,-0.12175834064177025`,0.02313817471511989`,-0.06673350218456105`,0.006723385053860662`,-0.06714348733889566`,0.04176371224182885`,0.021140390557221618`},{0.01116670934958423`,0.006763952807713434`,0.06194295071258518`,-0.07900969805529531`,-0.5715569595808906`,-0.5948595875847124`,-0.483482018253369`,0.0716960186446763`,-0.11109910146820892`,0.02203027656785623`,-0.1822333490139005`,-0.018130174415483567`,-0.09314138526305644`,-0.017821911018781517`},{-0.0025621519336930716`,0.04278227762849219`,-0.019284866871754156`,0.03629622067857989`,0.7957069218161618`,-0.5243764821577254`,-0.24377230883506432`,0.014108377286646252`,-0.05760272593252525`,-0.06082223697416508`,-0.06118904472529747`,-0.031988992028235456`,-0.09015787719802672`,-0.017778921708101282`},{0.011258881891980845`,0.02225721898923575`,0.03850049127995165`,-0.08851852366044606`,-0.12476276307749443`,-0.5325141736893662`,0.7258133415327408`,-0.3536698785879099`,0.10879210197330116`,-0.08467028797132746`,0.04849873600034981`,-0.10864984935711727`,-0.05710563975992993`,4.2657433400217015`*^-4},{0.01796467961209863`,0.02500651104922099`,0.04207711024944083`,0.13702605547266702`,0.0042145411138736644`,-0.15306619231782564`,0.38813466925996976`,0.7941365559686848`,-0.17260611955990496`,0.2997353333731692`,-0.11923774269045004`,0.17911146051381793`,0.003213920003305141`,0.0638839988376822`},{-0.006681291841843887`,-0.02736535015545173`,0.023957130845600146`,-0.012358782484303879`,-0.048275337358466675`,-0.07600084991190909`,-0.04835874592529728`,0.4426470591469191`,0.5998174425344953`,-0.5339236985979351`,0.2839202091843047`,-0.16587447380100692`,-0.0037392978439764924`,-0.17419197811444095`},{-0.0018830905617351235`,-0.00952760247513852`,0.04619170449738833`,0.012647539401745223`,0.04318278917617765`,-0.01672695448277654`,-0.06861612104221743`,-0.08482110648364574`,0.7472064746072805`,0.48410197485172624`,-0.3501220158762138`,0.08800777591909471`,-0.022915472471396157`,0.23880077004149425`},{-0.013174378462825102`,0.06055778512932706`,0.03029151864251742`,-0.023109084967299427`,-0.00920526154270221`,-0.14019759914397753`,-0.10107061063797146`,-0.0024889671978776664`,0.040327646215024424`,0.4834932789180386`,0.6234937844094776`,-0.25470107051900104`,0.49835205311629543`,-0.07505645649213907`},{0.0038642144207227448`,-0.01624667810423983`,-0.007419388874846744`,0.05903225747749922`,-0.022528976734023907`,-0.011699993858741323`,-0.049189189978025356`,-0.046918479003083775`,0.0422548132477385`,0.2954926792487174`,0.4402318671921971`,0.29199281264008636`,-0.6987830125618062`,-0.29985109927253667`},{0.010777585090346414`,0.011010766664302809`,0.023585283743585313`,-0.005487471564116818`,-0.02964937089711559`,-0.12771135588505675`,-0.04880118552090218`,-0.08099796124532328`,0.055163961833287145`,-0.2090391436785482`,0.21759582970087013`,0.8324871519992371`,0.31657947097678685`,0.23626025473203457`},{0.015115296257496583`,2.9121312533185754`*^-4,0.029398162472995235`,0.04977200988002361`,0.025553421365345753`,0.05596849682663383`,0.07526341446908535`,-0.09390856715512737`,0.11352096118142416`,-0.0025710345907056908`,-0.09019071707470067`,0.21635501556664685`,0.03986881149080515`,-0.4374889486835462`},{-0.013314669656679155`,-0.026884636455842135`,-0.01468704833702502`,-0.0014761167682977381`,0.012301545483996328`,-0.04959907009566541`,0.006530788503039323`,-0.023689645070921545`,0.009218122421179366`,0.08300076559437056`,-0.30177972562939903`,0.1328498360649905`,0.3424844801755806`,-0.7337731868253001`},{-0.01322204471881082`,-0.0039545619670015185`,-0.016967175539330248`,0.010212053726512208`,0.07138613116191397`,-0.08016043898702936`,-0.005774182096907064`,-0.03453963681363769`,-0.03605825370560582`,0.027232062608144696`,0.0734353914510333`,0.060434741942175296`,0.13909337059346188`,0.1322646878856818`},{-0.015142980005396697`,0.004994384048631979`,-0.024809839062339797`,0.002165323094730479`,0.02837507684207797`,0.010270383332855957`,0.026620690797737656`,-0.018475254250130396`,0.026944821950307736`,-0.02675630067901481`,0.08742464683940286`,0.05380078471879118`,-0.03350589757553614`,-0.08892525670494292`}},
"Precisions" -> {0.012080094357629337`,0.01382385030377446`,0.015100775389449312`,0.019586675870959278`,0.02267052257459725`,0.02655179481159091`,0.027714612707788553`,0.03182313958254453`,0.03463941408892391`,0.0371952800630681`,0.041607012788115426`,0.044335076920194644`,0.04756936300747832`,0.050493344086450766`},
"NoisePrecision" -> 0.06361828984543215`,"Processor" -> MachineLearning`MLProcessor[
"Center",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.13761922586496442`,-0.01922585319521594`,-0.4475770360246075`,0.07644238950915741`,0.6185096162952033`,0.3173645295121308`,-0.06587059465269773`,-0.10984181749790908`,0.23598490412405246`,0.09576144584660422`,0.04833439267750452`,-0.22246135565095704`,0.038685930161940225`,0.21811920539166355`,-0.20766185955812144`,-0.016659543118504677`,-0.010585737890058218`},
"Output" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 1489243420962252371]],"PostProcessor" -> MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "NumericalVector","Weight" -> 1],
"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Method" -> "Multinormal","Options" -> Association["CovarianceType" -> Association[
"Value" -> "Full","Options" -> Association[]],"IntrinsicDimension" -> Association[
"Value" -> 14,"Options" -> Association[]]]],"TrainingInformation" -> Association[
"Configurations" -> Dataset[Association[Association["Value" -> "Multinormal","Options" -> Association[
"CovarianceType" -> Association["Value" -> "Full"],"IntrinsicDimension" -> Association[
"Value" -> "Heuristic"]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",
Association["Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.13761922586496428`,-0.019225853195215747`,-0.4475770360246073`,0.07644238950915737`,0.6185096162952031`,0.31736452951213057`,-0.06587059465269766`,-0.10984181749790914`,0.23598490412405246`,0.09576144584660426`,0.04833439267750444`,-0.22246135565095668`,0.03868593016194013`,0.21811920539166357`,-0.20766185955812122`,-0.016659543118504663`,-0.010585737890058284`},
"StandardDeviation" -> {8.996459394374666`,8.451076405606953`,8.236669069247075`,7.103721084679189`,6.208092132921015`,6.424172260512249`,5.984870475456094`,5.636557075471692`,5.2927099035679745`,5.232004826490594`,4.927936155907298`,4.708073960640739`,4.762822132112539`,4.32259329582565`,4.47298224194959`,3.8229744540042017`,4.013683968993809`},
"Method" -> "NaiveSampler","VectorLength" -> 17,"Output" -> Association["f1" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4747808072524423015]],"EMIterations" -> 1] -> Association[]],TypeSystem`Assoc[
TypeSystem`Struct[{"Value","Options","NaiveImputer","EMIterations"},{TypeSystem`Atom[
String],TypeSystem`Assoc[TypeSystem`Atom[String],TypeSystem`Struct[{"Value"},{TypeSystem`Atom[
String]}],2],TypeSystem`AnyType,TypeSystem`Atom[Integer]}],TypeSystem`Assoc[TypeSystem`UnknownType,
TypeSystem`UnknownType,TypeSystem`AnyLength],1],Association[]],"BestModelInformation" -> Dataset[
Association["Configuration" -> {"Multinormal","CovarianceType" -> "Full","IntrinsicDimension" -> "Heuristic"},
"ModelUtility" -> Missing[]],TypeSystem`Struct[{"Configuration","ModelUtility"},{TypeSystem`Tuple[
{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`UnknownType}],
Association[]]],"NaiveImputer" -> MachineLearning`MLProcessor["ImputeMissing",Association[
"Invertibility" -> "Perfect","Missing" -> "Imputed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.13761922586496428`,-0.019225853195215747`,-0.4475770360246073`,0.07644238950915737`,0.6185096162952031`,0.31736452951213057`,-0.06587059465269766`,-0.10984181749790914`,0.23598490412405246`,0.09576144584660426`,0.04833439267750444`,-0.22246135565095668`,0.03868593016194013`,0.21811920539166357`,-0.20766185955812122`,-0.016659543118504663`,-0.010585737890058284`},
"StandardDeviation" -> {8.996459394374666`,8.451076405606953`,8.236669069247075`,7.103721084679189`,6.208092132921015`,6.424172260512249`,5.984870475456094`,5.636557075471692`,5.2927099035679745`,5.232004826490594`,4.927936155907298`,4.708073960640739`,4.762822132112539`,4.32259329582565`,4.47298224194959`,3.8229744540042017`,4.013683968993809`},
"Method" -> "NaiveSampler","VectorLength" -> 17,"Output" -> Association["f1" -> Association[
"Type" -> "NumericalVector","Weight" -> 1]],"Type" -> "NumericalVector","Version" -> {12.3`,1},
"ID" -> 4747808072524423015]],"InputDimension" -> 0,"OutputDimension" -> 17,"Log" -> Association[
"Example" -> MachineLearning`MLDataset[Association["f1" -> Association["Type" -> "NumericalVector",
"Weight" -> 1,"Values" -> {{0.015604310822784129`,4.40084080272918`,4.118254036783967`,10.386659780802773`,3.5054838176823515`,-8.9939221298205`,8.790749652804667`,-1.2485053643752786`,-7.618605674924101`,4.663871561236226`,2.9082247563116903`,-2.881154420413051`,-3.6896415180821087`,1.8145885295568593`,-2.124556598440839`,0.7014284271859296`,9.226161147181886`}},
"ID" -> 4654099653526711133]],Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,
"LogDensityRatios" -> 0,"RawExample" -> False]],"TrainingTime" -> 0.063348`,"MaxTrainingMemory" -> 204552,
"DataMemory" -> 22416,"FunctionMemory" -> 32952,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[
{2021,11,16,17,1,52.3945`8.471860675223574},"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,
"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix","SystemWordLength" -> 64,
"Evaluations" -> {}],"LogPDFDistribution" -> MachineLearning`TailedQuantileDistribution[
Association["Quantiles" -> {-3.1554472752150495`,-3.1554472752150495`,-3.04878632386206`,-3.0404032652903585`,-3.028224149893715`,-3.0213111023597294`,-3.0119292085148506`,-3.005788766497806`,-3.0001911107137054`,-2.9436532904916914`,-2.9248816788502587`},
"LeftBoundary" -> -3.04878632386206`,"LeftScale" -> 0.05333047567649474`,"LeftTailNorm" -> 0.2`]],
"Entropy" -> Around[51.307047491871685`,0.33600273570894623`],"EntropySampleSize" -> 10]],
"Output" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"EvaluationStrategy" -> "ModeFinding","Version" -> {12.3`,1},"ID" -> 895810465636885430]],MachineLearning`MLProcessor[
"Standardize",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Mean" -> {0.13761922586496428`,-0.019225853195215747`,-0.4475770360246073`,0.07644238950915737`,0.6185096162952031`,0.31736452951213057`,-0.06587059465269766`,-0.10984181749790914`,0.23598490412405246`,0.09576144584660426`,0.04833439267750444`,-0.22246135565095668`,0.03868593016194013`,0.21811920539166357`,-0.20766185955812122`,-0.016659543118504663`,-0.010585737890058284`},
"StandardDeviation" -> {8.996459394374666`,8.451076405606953`,8.236669069247075`,7.103721084679189`,6.208092132921015`,6.424172260512249`,5.984870475456094`,5.636557075471692`,5.2927099035679745`,5.232004826490594`,4.927936155907298`,4.708073960640739`,4.762822132112539`,4.32259329582565`,4.47298224194959`,3.8229744540042017`,4.013683968993809`},
"Output" -> Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1]],
"Version" -> {12.3`,1},"ID" -> 3090652515818404428]]},"Invertibility" -> "Perfect",
"StructurePreserving" -> True,"Missing" -> "Imputed"]]],"Output" -> Association["Preprocessor" -> MachineLearning`MLProcessor[
"ToMLDataset",Association["Input" -> Association["f1" -> Association["Type" -> "Nominal"]],
"Output" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Preprocessor" -> MachineLearning`MLProcessor[
"Sequence",Association["Processors" -> {MachineLearning`MLProcessor["List"],MachineLearning`MLProcessor[
"WrapMLDataset",Association["FeatureTypes" -> {"Nominal"},"FeatureKeys" -> {"f1"},
"FeatureWeights" -> Automatic,"ExampleWeights" -> Automatic,"RawExample" -> Missing[
"KeyAbsent","RawExample"],"StructurePreserving" -> False]]}]],"ScalarFeature" -> True,
"Invertibility" -> "Perfect","StructurePreserving" -> False,"Missing" -> "Allowed"]],
"Processor" -> MachineLearning`MLProcessor["Sequence",Association["Input" -> Association[
"f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association["f1" -> Association[
"Type" -> "Nominal","Weight" -> 1]],"Processors" -> {MachineLearning`MLProcessor[
"ToVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "Nominal","Weight" -> 1]],"Output" -> Association[
"f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],"Version" -> {12.3`,1},
"ID" -> 7318424693970596829]],MachineLearning`MLProcessor["IntegerEncodeNominalVector",
Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NominalVector","Weight" -> 1]],
"Index" -> {Association["SDG 1" -> 1,"SDG 10" -> 2,"SDG 11" -> 3,"SDG 12" -> 4,"SDG 13" -> 5,
"SDG 14" -> 6,"SDG 15" -> 7,"SDG 16" -> 8,"SDG 17" -> 9,"SDG 2" -> 10,"SDG 3" -> 11,
"SDG 4" -> 12,"SDG 5" -> 13,"SDG 6" -> 14,"SDG 7" -> 15,"SDG 8" -> 16,"SDG 9" -> 17]},
"MissingCode" -> 0,"Version" -> {12.3`,1},"ID" -> 6011258759344249438,"Output" -> Association[
"f1" -> Association["Type" -> "NominalVector","Weight" -> 1]]]],MachineLearning`MLProcessor[
"FromVector",Association["Invertibility" -> "Perfect","Missing" -> "Allowed","StructurePreserving" -> True,
"Input" -> Association["f1" -> Association["Type" -> "NominalVector","Weight" -> 1,
"SetSize" -> {17}]],"Output" -> Association["f1" -> Association["Type" -> "Nominal",
"Weight" -> 1]],"Version" -> {12.3`,1},"ID" -> 742812115679849833]],MachineLearning`MLProcessor[
"FirstValues",Association["Info" -> Association["Type" -> "Nominal","Weight" -> 1,
"SetSize" -> 17],"Key" -> "f1","Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]]},"Invertibility" -> "Perfect","StructurePreserving" -> False,
"Missing" -> "Allowed"]],"ProbabilityPostprocessor" -> Identity,"Name" -> "class",
"Marginal" -> Association["SDG 1" -> 0.07189542483660132`,"SDG 10" -> 0.07189542483660132`,
"SDG 11" -> 0.06535947712418301`,"SDG 12" -> 0.06535947712418301`,"SDG 13" -> 0.058823529411764705`,
"SDG 14" -> 0.05228758169934641`,"SDG 15" -> 0.05228758169934641`,"SDG 16" -> 0.05228758169934641`,
"SDG 17" -> 0.06535947712418301`,"SDG 2" -> 0.06535947712418301`,"SDG 3" -> 0.058823529411764705`,
"SDG 4" -> 0.06535947712418301`,"SDG 5" -> 0.058823529411764705`,"SDG 6" -> 0.04575163398692811`,
"SDG 7" -> 0.04575163398692811`,"SDG 8" -> 0.058823529411764705`,"SDG 9" -> 0.04575163398692811`]],
"LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit",Association["Processor" -> MachineLearning`MLProcessor[
"ListSplit"],"PreferLabeled" -> True,"KeepLabelsFormat" -> False]],"RecalibrationFunction" -> None,
"ImputationStrategy" -> Automatic,"Prior" -> Automatic,"Utility" -> SparseArray[Automatic,
{17,18},0.`,{1,{{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17},{{2},{3},{4},{5},{6},{7},{8},{9},{10},{11},{12},{13},{14},{15},{16},{17},{18}}},{1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`,1.`}}],
"Threshold" -> 0,"TieBreaker" -> RandomChoice,"PerformanceGoal" -> Automatic,"BatchProcessing" -> Automatic,
"Model" -> Association["LogProbabilitiesFunction" -> LinearLayer[Association["Type" -> "Linear",
"Arrays" -> Association["Weights" -> RawArray["Real32",{{-1.0266132354736328`,0.5241744518280029`,-1.8751647472381592`,0.5175024271011353`,-1.5454615354537964`,1.5054370164871216`,-0.6777528524398804`,-1.0001927614212036`,1.583605408668518`,0.4507751166820526`,0.6594224572181702`,0.5610674023628235`,-0.29471462965011597`,0.6328054070472717`,-0.3806644082069397`,0.746410071849823`,-0.20399627089500427`},{-0.3524506390094757`,-1.0031402111053467`,-0.010788368061184883`,-0.9353820085525513`,-1.0834012031555176`,0.6841680407524109`,0.02651948668062687`,-0.8446272015571594`,1.2395305633544922`,-0.4017990529537201`,-0.4637511670589447`,0.2690439820289612`,0.16547560691833496`,-1.0438461303710938`,-1.1790497303009033`,0.07852718979120255`,-0.757470965385437`},{-1.5312057733535767`,-0.31898269057273865`,-1.0281014442443848`,-0.5940622687339783`,-0.6619243621826172`,0.7370559573173523`,-0.5237950086593628`,-0.9617440104484558`,0.3359754681587219`,-0.951417863368988`,-0.924561619758606`,0.1653001755475998`,-0.7174479961395264`,0.5381556749343872`,-0.2713812589645386`,0.5393874049186707`,0.7511826753616333`},{-0.7286331653594971`,0.05408616364002228`,-0.4027063250541687`,-1.7541167736053467`,-1.5913571119308472`,1.003190040588379`,0.017043976113200188`,0.2741650938987732`,1.0908693075180054`,-0.5178292393684387`,0.09177911281585693`,-0.40080884099006653`,-0.9026350975036621`,0.30455833673477173`,-0.15880337357521057`,-0.23441621661186218`,0.412727415561676`},{0.5247047543525696`,0.42149657011032104`,0.5823949575424194`,-0.2653581202030182`,-0.9773324728012085`,1.8978493213653564`,-0.5999070405960083`,-0.875653862953186`,0.4206342101097107`,-1.048773169517517`,0.3641902804374695`,2.7066064376413124`*^-6,-0.40574783086776733`,-0.32830488681793213`,-0.2839606702327728`,0.16915562748908997`,-0.19279567897319794`},{0.030993200838565826`,-0.43861475586891174`,0.24468141794204712`,-0.2826597988605499`,-2.85172438621521`,0.8505340218544006`,0.6882051229476929`,-0.2875764071941376`,0.021918119862675667`,-0.31547096371650696`,-0.7687872648239136`,0.5476574897766113`,-0.34383857250213623`,-0.10591714829206467`,-0.38736000657081604`,0.9131174683570862`,-0.4322851002216339`},{-0.4311150312423706`,0.13342583179473877`,-0.2722078561782837`,-0.3872774541378021`,-1.4935073852539062`,0.9111557602882385`,-0.3481965661048889`,-0.600069522857666`,0.9245157241821289`,-0.5300695896148682`,0.05352507531642914`,0.17868392169475555`,0.07550667226314545`,0.6688849329948425`,-0.38666871190071106`,1.1006160974502563`,-1.7569634914398193`},{-0.16117940843105316`,-0.5871594548225403`,-0.19326239824295044`,-0.12134786695241928`,-1.8596041202545166`,0.6101186871528625`,-0.7601970434188843`,-0.5166323184967041`,0.6866194009780884`,-1.793832540512085`,-0.41447117924690247`,-0.27468207478523254`,-0.9910009503364563`,-0.3454042971134186`,-0.5035063624382019`,-0.5973392128944397`,-1.0897440910339355`},{-0.7582545280456543`,-0.9524019360542297`,0.32962191104888916`,-0.8606282472610474`,-1.9417544603347778`,0.7170078754425049`,-0.34786397218704224`,-0.25636857748031616`,1.4459540843963623`,-1.3075190782546997`,-0.9795295596122742`,-0.08289429545402527`,0.19824783504009247`,-0.5872007608413696`,0.382824569940567`,-0.8304718732833862`,-1.4233675003051758`},{0.4791513979434967`,-0.054859232157468796`,-0.4643998146057129`,-0.896303117275238`,-1.9401189088821411`,1.3753725290298462`,-0.4019148647785187`,-1.4269057512283325`,0.44082164764404297`,-0.31487998366355896`,-0.4164218306541443`,-0.7601216435432434`,0.4571813941001892`,0.6959484219551086`,0.648523211479187`,-0.22519081830978394`,-0.27080032229423523`},{0.22099292278289795`,0.08125872164964676`,-0.6667253971099854`,0.05791378393769264`,-1.7749369144439697`,1.9851664304733276`,0.18383623659610748`,0.4788699150085449`,-0.0620468370616436`,-0.5201265811920166`,-0.18508805334568024`,0.3106977343559265`,0.045102041214704514`,0.4753272831439972`,-0.26831987500190735`,1.133397102355957`,-0.8078504800796509`},{-0.3475673198699951`,-0.006648366805166006`,-1.0778874158859253`,0.8936344385147095`,-0.09881657361984253`,0.010604117065668106`,-0.7653994560241699`,-1.6044293642044067`,1.558417797088623`,-0.6234704852104187`,0.40566501021385193`,0.007368405815213919`,-0.03831730782985687`,-0.4886217415332794`,-0.3084266483783722`,0.17156368494033813`,-0.5094475746154785`},{-1.7950519323349`,-0.09345740079879761`,-0.32441186904907227`,-0.5640901327133179`,-0.2712143063545227`,0.8125194311141968`,-0.3976185917854309`,-0.3771527111530304`,0.4183276891708374`,-1.2125096321105957`,0.4130595922470093`,0.45775625109672546`,-0.014589661732316017`,0.04281338304281235`,-1.4941133260726929`,0.13789553940296173`,-0.6692808866500854`},{-0.5097479820251465`,0.4649237096309662`,-0.1894882321357727`,-0.06916598975658417`,-2.1796798706054688`,0.6880196332931519`,0.041232701390981674`,-0.19085104763507843`,0.2513488829135895`,-1.0624736547470093`,-0.6853541135787964`,0.11986739188432693`,-0.6000158786773682`,0.11805245280265808`,0.3934786319732666`,-1.1184351444244385`,-1.4669053554534912`},{0.01121756061911583`,-0.3155076205730438`,-0.394263356924057`,-0.7992863059043884`,-0.6407559514045715`,1.880761742591858`,-0.009307977743446827`,0.27735868096351624`,0.47566089034080505`,0.1798740029335022`,-0.7626199722290039`,0.8277073502540588`,-0.924790620803833`,0.06687575578689575`,-0.25858017802238464`,-0.169046550989151`,0.18500663340091705`},{-1.8113195896148682`,-0.3477694094181061`,-0.6049692034721375`,0.540943443775177`,-1.433767318725586`,0.9326426386833191`,-0.280344158411026`,-0.7469330430030823`,0.9134072661399841`,-0.6476965546607971`,0.14641262590885162`,-0.09952449798583984`,0.26530158519744873`,-1.031672716140747`,-0.1348710060119629`,0.15039481222629547`,-0.014985708519816399`}}],
"Biases" -> RawArray["Real32",{0.3940621018409729`,0.7433409690856934`,-0.07807835936546326`,0.4075121581554413`,-0.026351209729909897`,-0.16406840085983276`,0.7755919694900513`,0.43475791811943054`,0.1872386485338211`,0.09421339631080627`,0.268930584192276`,-0.09809257090091705`,0.11428095400333405`,-0.2691836655139923`,-0.2858444154262543`,0.4101608395576477`}]],
"Parameters" -> Association["OutputDimensions" -> {16},"$OutputSize" -> 16,"$InputSize" -> 17,
"$InputDimensions" -> {17}],"Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
{17},NeuralNetworks`AtomT]],"Outputs" -> Association["Output" -> NeuralNetworks`TensorT[
{16},NeuralNetworks`RealT]]],Association["Version" -> "12.3.3","Unstable" -> False]],
"Processor" -> MachineLearning`MLProcessor["FirstValues",Association["Info" -> Association[
"Weight" -> 1,"Type" -> "NumericalVector"],"Key" -> "f1","Invertibility" -> "Perfect",
"StructurePreserving" -> False,"Missing" -> "Allowed"]],"Calibrator" -> None,"Method" -> "LogisticRegression",
"PostProcessor" -> MachineLearning`MLProcessor["Identity"],"Options" -> Association[
"L1Regularization" -> Association["Value" -> 0,"Options" -> Association[]],"L2Regularization" -> Association[
"Value" -> 1.`,"Options" -> Association[]],"OptimizationMethod" -> Association["Value" -> "LBFGS",
"Options" -> Association[]],MaxIterations -> Association["Value" -> 30,"Options" -> Association[]]]],
"TrainingInformation" -> Association["PanelCell" -> None,"TrainingFunction" -> Classify,
"EMIterations" -> Missing["KeyAbsent","EMIterations"],"ProcessorEntropyShift" -> 0,
"PreprocessingTime" -> 0.201217`5.755209663191511,"LossName" -> "MeanCrossEntropy",
"BestModelInformation" -> Dataset[Association["MeanCrossEntropy" -> Around[1.6727362441748004`,
0.38377822651120747`],"Accuracy" -> Around[0.6449797681496868`,0.1299666158963683`],
"EvaluationTime" -> 1.8562490134343406`*^-5,"TestSize" -> 27,"ModelMemory" -> 10240,
"ModelUtility" -> -1.2524743147573425`,"TrainingSize" -> 109,"TrainingTime" -> 0.03981071705534971`,
"TrainingMemory" -> 252288,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
1.6727362441748004`,0.2713721864378216`]},"AccuracyHistory" -> {Around[0.6449797681496868`,
0.09190027542818936`]},"Configuration" -> {"LogisticRegression","L1Regularization" -> 0,"L2Regularization" -> 1.`,"OptimizationMethod" -> Automatic,MaxIterations -> 30},
"FinalTrainingSize" -> 136],TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory","Configuration","FinalTrainingSize"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1],TypeSystem`Tuple[{TypeSystem`Atom[String],TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`AnyType}],TypeSystem`Atom[
Integer]}],Association[]],"Configurations" -> Dataset[Association[Association["Value" -> "GradientBoostedTrees",
"Options" -> Association["BoostingMethod" -> Association["Value" -> "Gradient"],MaxTrainingRounds -> Association[
"Value" -> 50],"LeavesNumber" -> Association["Value" -> 60],"LearningRate" -> Association[
"Value" -> 0.04`],ValidationSet -> Association["Value" -> Automatic],"MaxBinNumber" -> Association[
"Value" -> 255],"ThreadNumber" -> Association["Value" -> 2],"MaxDepth" -> Association[
"Value" -> 6],"LeafSize" -> Association["Value" -> 35],"FeatureFraction" -> Association[
"Value" -> 1],"BaggingFraction" -> Association["Value" -> 1],"BaggingFrequency" -> Association[
"Value" -> 0],"MinGainToSplit" -> Association["Value" -> 0],"L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 0],"LossFunction" -> Association[
"Value" -> Automatic]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
10.457335072337285`,1.9694369202432347`],"Accuracy" -> Around[0.04019241097219053`,
0.027761070435116338`],"EvaluationTime" -> 1.5848931924611134`*^-4,"TestSize" -> 100,
"ModelMemory" -> 29384,"ModelUtility" -> -3.0774273681339515`,"TrainingSize" -> 15,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 88176,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[10.457335072337285`,1.392602201423141`]},"AccuracyHistory" -> {Around[
0.04019241097219053`,0.01963004115766814`]}],Association["MeanCrossEntropy" -> Around[
2.4544820048090576`,0.11656709942380639`],"Accuracy" -> Around[0.21640833957825864`,
0.1118443660785597`],"EvaluationTime" -> 0.0023368790536303446`,"TestSize" -> 27,
"ModelMemory" -> 1648632,"ModelUtility" -> -1.7390129461191253`,"TrainingSize" -> 109,
"TrainingTime" -> 0.5011872336272722`,"TrainingMemory" -> 3581112,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.4544820048090576`,0.08242538646581998`]},"AccuracyHistory" -> {Around[
0.21640833957825864`,0.07908590969166022`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 0.0023368790536303446`,"MeanCrossEntropy" -> Around[2.4544820048090576`,
0.11656709942380639`],"ModelMemory" -> 1648632,"TrainingMemory" -> 3581112,"TrainingTime" -> 0.6504533943454539`],
"Index" -> 1],Association["Value" -> "DecisionTree","Options" -> Association["DistributionSmoothing" -> Association[
"Value" -> 1],"FeatureFraction" -> Association["Value" -> 1]]] -> Association["Experiments" -> {Association[
"MeanCrossEntropy" -> Around[2.860875911516727`,0.042207800466540636`],"Accuracy" -> Around[
0.09590480892574361`,0.03776377724953378`],"EvaluationTime" -> 2.7324088150693065`*^-5,
"TestSize" -> 121,"ModelMemory" -> 6376,"ModelUtility" -> -1.7472229987031436`,"TrainingSize" -> 15,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 80616,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
2.860875911516727`,0.029845421928859604`]},"AccuracyHistory" -> {Around[0.09590480892574361`,
0.026703022976363604`]}],Association["MeanCrossEntropy" -> Around[2.7852483999863886`,
0.12379385576905538`],"Accuracy" -> Around[0.18069405386397297`,0.10450262445192772`],
"EvaluationTime" -> 2.9419564249047453`*^-5,"TestSize" -> 27,"ModelMemory" -> 7144,
"ModelUtility" -> -1.7263358722125433`,"TrainingSize" -> 109,"TrainingTime" -> 0.01995262314968879`,
"TrainingMemory" -> 143520,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
2.7852483999863886`,0.08753547488352846`]},"AccuracyHistory" -> {Around[0.18069405386397297`,
0.0738945144017492`]}]},"PredictedPerformances" -> Association["EvaluationTime" -> 2.9419564249047453`*^-5,
"MeanCrossEntropy" -> Around[2.7852483999863886`,0.12379385576905538`],"ModelMemory" -> 7144,
"TrainingMemory" -> 143520,"TrainingTime" -> 0.034895016039978674`],"Index" -> 2],
Association["Value" -> "NearestNeighbors","Options" -> Association["NeighborsNumber" -> Association[
"Value" -> Automatic],"DistributionSmoothing" -> Association["Value" -> 0.5`],"NearestMethod" -> Association[
"Value" -> Automatic]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
3.358306105339041`,0.18743169436456594`],"Accuracy" -> Around[0.22712394848229897`,
0.05375083745198391`],"EvaluationTime" -> 1.5618865754333548`*^-5,"TestSize" -> 121,
"ModelMemory" -> 8584,"ModelUtility" -> -1.9156860146393044`,"TrainingSize" -> 15,
"TrainingTime" -> 0.005011872336272719`,"TrainingMemory" -> 64552,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[3.358306105339041`,0.13253422209446897`]},"AccuracyHistory" -> {Around[
0.22712394848229897`,0.03800758165675367`]}],Association["MeanCrossEntropy" -> Around[
2.6807156194413007`,0.44322403451489145`],"Accuracy" -> Around[0.39497976814968705`,
0.13277141611457055`],"EvaluationTime" -> 2.3368790536303442`*^-5,"TestSize" -> 27,
"ModelMemory" -> 23240,"ModelUtility" -> -1.7117657088376994`,"TrainingSize" -> 109,
"TrainingTime" -> 0.007943282347242814`,"TrainingMemory" -> 345032,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.6807156194413007`,0.3134067203903401`]},"AccuracyHistory" -> {Around[
0.39497976814968705`,0.09388356868235367`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 2.3368790536303442`*^-5,"MeanCrossEntropy" -> Around[2.6807156194413007`,
0.44322403451489145`],"ModelMemory" -> 23240,"TrainingMemory" -> 345032,"TrainingTime" -> 0.01492275673283256`],
"Index" -> 3],Association["Value" -> "RandomForest","Options" -> Association["FeatureFraction" -> Association[
"Value" -> Automatic],"LeafSize" -> Association["Value" -> Automatic],"TreeNumber" -> Association[
"Value" -> Automatic],"DistributionSmoothing" -> Association["Value" -> 0.5`],"Implementation" -> Association[
"Value" -> Automatic]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
2.8348174917811835`,0.00839604789189046`],"Accuracy" -> Around[0.06989538126922024`,
0.03603812842966244`],"EvaluationTime" -> 7.943282347242814`*^-5,"TestSize" -> 100,
"ModelMemory" -> 99784,"ModelUtility" -> -1.7357213699846907`,"TrainingSize" -> 15,
"TrainingTime" -> 0.03981071705534971`,"TrainingMemory" -> 165768,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.8348174917811835`,0.00593690239952276`]},"AccuracyHistory" -> {Around[
0.06989538126922024`,0.025482804993886013`]}],Association["MeanCrossEntropy" -> Around[
2.766399771950385`,0.03825873453392463`],"Accuracy" -> Around[0.28783691100683007`,
0.12296887115201079`],"EvaluationTime" -> 1.4744710020499885`*^-4,"TestSize" -> 27,
"ModelMemory" -> 102984,"ModelUtility" -> -1.7134606918391493`,"TrainingSize" -> 109,
"TrainingTime" -> 0.025118864315095794`,"TrainingMemory" -> 218848,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.766399771950385`,0.027053010628554048`]},"AccuracyHistory" -> {Around[
0.28783691100683007`,0.08695212266644164`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.4744710020499885`*^-4,"MeanCrossEntropy" -> Around[2.766399771950385`,
0.03825873453392463`],"ModelMemory" -> 102984,"TrainingMemory" -> 218848,"TrainingTime" -> 0.07115168537510227`],
"Index" -> 4],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1000000.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
2.832845008960118`,0.008126109309385687`],"Accuracy" -> Around[0.21203493087143238`,
0.05249224246867768`],"EvaluationTime" -> 1.6969038400978906`*^-5,"TestSize" -> 121,
"ModelMemory" -> 10240,"ModelUtility" -> -1.735003968541022`,"TrainingSize" -> 15,
"TrainingTime" -> 0.015848931924611134`,"TrainingMemory" -> 99856,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.832845008960118`,0.005746026997329751`]},"AccuracyHistory" -> {Around[
0.21203493087143238`,0.03711762060929046`]}],Association["MeanCrossEntropy" -> Around[
2.8320924528411227`,0.02950598621118627`],"Accuracy" -> Around[0.6092654824354011`,
0.1325184628466312`],"EvaluationTime" -> 1.8562490134343406`*^-5,"TestSize" -> 27,
"ModelMemory" -> 10240,"ModelUtility" -> -1.736246259125105`,"TrainingSize" -> 109,
"TrainingTime" -> 0.01`,"TrainingMemory" -> 160680,"ExperimentCount" -> 1,"MeanCrossEntropyHistory" -> {Around[
2.8320924528411227`,0.020863882935526577`]},"AccuracyHistory" -> {Around[0.6092654824354011`,
0.09370470371127047`]}]},"PredictedPerformances" -> Association["EvaluationTime" -> 1.8562490134343406`*^-5,
"MeanCrossEntropy" -> Around[2.8320924528411227`,0.02950598621118627`],"ModelMemory" -> 10240,
"TrainingMemory" -> 160680,"TrainingTime" -> 0.02832599614479462`],"Index" -> 5],
Association["Value" -> "LogisticRegression","Options" -> Association["L1Regularization" -> Association[
"Value" -> 0],"L2Regularization" -> Association["Value" -> 1.`],"OptimizationMethod" -> Association[
"Value" -> Automatic],MaxIterations -> Association["Value" -> 30]]] -> Association[
"Experiments" -> {Association["MeanCrossEntropy" -> Around[2.7721712030885683`,0.1314611497069645`],
"Accuracy" -> Around[0.24420055242745448`,0.05515395166088559`],"EvaluationTime" -> 1.2406506063035306`*^-5,
"TestSize" -> 121,"ModelMemory" -> 10240,"ModelUtility" -> -1.7222194043273613`,"TrainingSize" -> 15,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 191688,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.7721712030885683`,0.0929570704203745`]},"AccuracyHistory" -> {Around[
0.24420055242745448`,0.03899973322864724`]}],Association["MeanCrossEntropy" -> Around[
1.6727362441748004`,0.38377822651120747`],"Accuracy" -> Around[0.6449797681496868`,
0.1299666158963683`],"EvaluationTime" -> 1.8562490134343406`*^-5,"TestSize" -> 27,
"ModelMemory" -> 10240,"ModelUtility" -> -1.2524743147573425`,"TrainingSize" -> 109,
"TrainingTime" -> 0.03981071705534971`,"TrainingMemory" -> 252288,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[1.6727362441748004`,0.2713721864378216`]},"AccuracyHistory" -> {Around[
0.6449797681496868`,0.09190027542818936`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.8562490134343406`*^-5,"MeanCrossEntropy" -> Around[1.6727362441748004`,
0.38377822651120747`],"ModelMemory" -> 10240,"TrainingMemory" -> 252288,"TrainingTime" -> 0.08129486393679902`],
"Index" -> 6],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 1.`*^-6],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
7.231991111944266`,0.758145836839081`],"Accuracy" -> Around[0.22712394848229897`,
0.05375083745198391`],"EvaluationTime" -> 9.854838060146929`*^-6,"TestSize" -> 121,
"ModelMemory" -> 10240,"ModelUtility" -> -2.6924129802269525`,"TrainingSize" -> 15,
"TrainingTime" -> 0.03981071705534971`,"TrainingMemory" -> 191776,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[7.231991111944266`,0.536090062357264`]},"AccuracyHistory" -> {Around[
0.22712394848229897`,0.03800758165675367`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 9.854838060146929`*^-6,"MeanCrossEntropy" -> Around[7.231991111944266`,
0.758145836839081`],"ModelMemory" -> 10240,"TrainingMemory" -> 191776,"TrainingTime" -> 0.09395329225062532`],
"Index" -> 7],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 100.`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
2.8142286252741306`,0.010106554437991985`],"Accuracy" -> Around[0.21203493087143238`,
0.05249224246867768`],"EvaluationTime" -> 1.0706739407864078`*^-5,"TestSize" -> 121,
"ModelMemory" -> 10240,"ModelUtility" -> -1.7285551000923138`,"TrainingSize" -> 15,
"TrainingTime" -> 0.015848931924611134`,"TrainingMemory" -> 148256,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.8142286252741306`,0.007146413177535129`]},
"AccuracyHistory" -> {Around[0.21203493087143238`,0.03711762060929046`]}],Association[
"MeanCrossEntropy" -> Around[2.691993157836189`,0.050510337232496344`],"Accuracy" -> Around[
0.6449797681496868`,0.1299666158963683`],"EvaluationTime" -> 1.4744710020499885`*^-5,
"TestSize" -> 27,"ModelMemory" -> 10240,"ModelUtility" -> -1.6871763954684487`,"TrainingSize" -> 109,
"TrainingTime" -> 0.01995262314968879`,"TrainingMemory" -> 209248,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[2.691993157836189`,0.035716201977117515`]},"AccuracyHistory" -> {Around[
0.6449797681496868`,0.09190027542818936`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.4744710020499885`*^-5,"MeanCrossEntropy" -> Around[2.691993157836189`,
0.050510337232496344`],"ModelMemory" -> 10240,"TrainingMemory" -> 209248,"TrainingTime" -> 0.040743947964589806`],
"Index" -> 8],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.01`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
3.8224001835236754`,0.32563709698806803`],"Accuracy" -> Around[0.2417957966079422`,
0.05483662990372133`],"EvaluationTime" -> 9.854838060146929`*^-6,"TestSize" -> 121,
"ModelMemory" -> 10240,"ModelUtility" -> -2.0509222870539814`,"TrainingSize" -> 15,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 191584,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[3.8224001835236754`,0.23026019948616436`]},"AccuracyHistory" -> {Around[
0.2417957966079422`,0.038775352862338366`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 9.854838060146929`*^-6,"MeanCrossEntropy" -> Around[3.8224001835236754`,
0.32563709698806803`],"ModelMemory" -> 10240,"TrainingMemory" -> 191584,"TrainingTime" -> 0.07462975277997375`],
"Index" -> 9],Association["Value" -> "LogisticRegression","Options" -> Association[
"L1Regularization" -> Association["Value" -> 0],"L2Regularization" -> Association[
"Value" -> 0.1`],"OptimizationMethod" -> Association["Value" -> Automatic],MaxIterations -> Association[
"Value" -> 30]]] -> Association["Experiments" -> {Association["MeanCrossEntropy" -> Around[
3.193810828833513`,0.22755372122520048`],"Accuracy" -> Around[0.23570664583458173`,
0.05447305454987125`],"EvaluationTime" -> 1.0706739407864078`*^-5,"TestSize" -> 121,
"ModelMemory" -> 10240,"ModelUtility" -> -1.8685128268495637`,"TrainingSize" -> 15,
"TrainingTime" -> 0.03162277660168379`,"TrainingMemory" -> 191464,"ExperimentCount" -> 1,
"MeanCrossEntropyHistory" -> {Around[3.193810828833513`,0.16090477936257247`]},"AccuracyHistory" -> {Around[
0.23570664583458173`,0.038518266264158676`]}]},"PredictedPerformances" -> Association[
"EvaluationTime" -> 1.0706739407864078`*^-5,"MeanCrossEntropy" -> Around[3.193810828833513`,
0.22755372122520048`],"ModelMemory" -> 10240,"TrainingMemory" -> 191464,"TrainingTime" -> 0.07462975277997375`],
"Index" -> 10]],TypeSystem`Assoc[TypeSystem`Struct[{"Value","Options"},{TypeSystem`Atom[
TypeSystem`Enumeration["DecisionTree","GradientBoostedTrees","LogisticRegression",
"NearestNeighbors","RandomForest"]],TypeSystem`Assoc[TypeSystem`AnyType,TypeSystem`Struct[
{"Value"},{TypeSystem`AnyType}],TypeSystem`AnyLength]}],TypeSystem`Struct[{"Experiments","PredictedPerformances","Index"},
{TypeSystem`Vector[TypeSystem`Struct[{"MeanCrossEntropy","Accuracy","EvaluationTime","TestSize","ModelMemory","ModelUtility","TrainingSize","TrainingTime","TrainingMemory","ExperimentCount","MeanCrossEntropyHistory","AccuracyHistory"},
{TypeSystem`AnyType,TypeSystem`AnyType,TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer],TypeSystem`Atom[Integer],TypeSystem`Vector[TypeSystem`AnyType,1],TypeSystem`Vector[
TypeSystem`AnyType,1]}],TypeSystem`AnyLength],TypeSystem`Struct[{"EvaluationTime","MeanCrossEntropy","ModelMemory","TrainingMemory","TrainingTime"},
{TypeSystem`Atom[Real],TypeSystem`AnyType,TypeSystem`Atom[Integer],TypeSystem`Atom[
Integer],TypeSystem`Atom[Real]}],TypeSystem`Atom[Integer]}],10],Association[]],"MaxTrainingSize" -> 136,
"PreprocessorEvaluationTime" -> 5.9375`*^-6,"PreprocessorMemory" -> 47496,"InputDimension" -> 17,
"OutputDimension" -> 1,"BaselineLogProbability" -> -2.822897100700619`,"VariableBudget" -> True,
"CheckpointingInfo" -> Association["Checkpointing" -> False],"UserStop" -> False,
"NaturalStop" -> True,"AbortStop" -> False,"RoundPartitioning" -> Dataset[{Association[
"TrainingSizes" -> 15,"TimeBudgets" -> 0.308`,"ElapsedTimes" -> 0.326272`,"ExperimentCounts" -> 10],Association[
"TrainingSizes" -> 109,"TimeBudgets" -> 0.44000000000000006`,"ElapsedTimes" -> 0.7027749999999999`,
"ExperimentCounts" -> 7]},TypeSystem`Vector[TypeSystem`Struct[{"TrainingSizes","TimeBudgets","ElapsedTimes","ExperimentCounts"},
{TypeSystem`Atom[Integer],TypeSystem`Atom[Real],TypeSystem`Atom[Real],TypeSystem`Atom[
Integer]}],2],Association[]]],"AnomalyDetector" -> None,"Log" -> Association["Example" -> MachineLearning`MLDataset[
Association["f1" -> Association["Type" -> "NumericalVector","Weight" -> 1,"Values" -> {{0.015604310822784129`,4.40084080272918`,4.118254036783967`,10.386659780802773`,3.5054838176823515`,-8.9939221298205`,8.790749652804667`,-1.2485053643752786`,-7.618605674924101`,4.663871561236226`,2.9082247563116903`,-2.881154420413051`,-3.6896415180821087`,1.8145885295568593`,-2.124556598440839`,0.7014284271859296`,9.226161147181886`}},
"ID" -> 5711582227009871019]],Association["ExampleNumber" -> 1,"ExampleWeights" -> 1,
"LogDensityRatios" -> 0,"RawExample" -> False]],"TrainingTime" -> 1.352177`,"MaxTrainingMemory" -> 3626136,
"DataMemory" -> 53376,"FunctionMemory" -> 196608,"LanguageVersion" -> {12.3`,1},"Date" -> DateObject[
{2021,11,16,17,1,53.677456`8.48236689931388},"Instant","Gregorian",-6.`],"ProcessorCount" -> 2,
"ProcessorType" -> "x86-64","OperatingSystem" -> "Unix","SystemWordLength" -> 64,
"Evaluations" -> {}]]],Selectable -> False,Editable -> False,SelectWithContents -> True],
StandardForm],"Output",CellLabel -> "Out[24]= ",ExpressionUUID -> "b8370445-06f0-4c63-9ed6-911a889a0517"]},
Open],ExpressionUUID -> "d7d9f67c-0906-49fc-9863-34eba63ec630"],Cell[
TextData[{"Let's"," ","compute"," ","the"," ","various"," ","accuracy"," ","metrics"," ","and"," ","confusion"," ","matrix",":"}],
"Text",ExpressionUUID -> "d1dfa548-3040-4bcb-9170-f953080c4e70"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Information","[",RowBox[{"cSDGreduced",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[25]:= ",ExpressionUUID -> "972e5810-f621-4336-a43a-561f8d4211cf"],Cell[
BoxData[
InterpretationBox[TemplateBox[{"0.64","0.13"},"Around",SyntaxForm -> PlusMinus],Around[
0.6449797681496868`,0.1299666158963683`]],StandardForm],"Output",CellLabel -> "Out[25]= ",
ExpressionUUID -> "35e273a1-c1c4-4484-a1c4-10ad3e1263d0"]},Open],ExpressionUUID -> "232edfbb-03b9-48f0-b8f4-88c15d92d1dc"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cSDGreduced",",","sdgTrainingsetReduced",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[26]:= ",ExpressionUUID -> "df6c39d6-cba2-4001-bdd3-94b4fab22c5c"],Cell[
BoxData[
"0.8823529411764706`",StandardForm],"Output",CellLabel -> "Out[26]= ",ExpressionUUID -> "440da3e5-779f-4840-bcf2-47ae39cdfb81"]},
Open],ExpressionUUID -> "fe65e766-39dd-4cc6-bf44-c5ae96b216fe"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cSDGreduced",",","sdgTestsetReduced",","," ","\"Accuracy\""}],"]"}]],
"Input",CellLabel -> "In[27]:= ",ExpressionUUID -> "9a67e93b-d53e-454d-a20a-bfbad82e5cdd"],Cell[
BoxData[
"0.47058823529411764`",StandardForm],"Output",CellLabel -> "Out[27]= ",ExpressionUUID -> "28440553-8762-4f19-b19a-c60f244ce2d6"]},
Open],ExpressionUUID -> "7c9f4f34-3382-43fe-ad69-a9ac86ea207d"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"ClassifierMeasurements","[",RowBox[{"cSDGreduced",",","sdgTestsetReduced",","," ","\"ConfusionMatrixPlot\""}],"]"}]],
"Input",CellLabel -> "In[28]:= ",ExpressionUUID -> "af2754a6-eb61-4b56-9aa3-26ae115263d8"],Cell[
BoxData[
GraphicsBox[RasterBox[CompressedData["1:eJxTTMoPSmVmYGAQhGIQGwI+2I/S2GmWZcyvZNpf29eZ9X3/8PChvbDr143iDTVDxvyhTntfriyMsXxr7+TJ3PXT56V955ek7Urz7w4Z8wcbPVj9+7BKZJ37w1tQPgwMfHjRix6oeCG1/CHVnaPl2yg9mOnBWh6OlHAYDf+BpUfDnzx6NNyGN03rdtFIo6kVPiOtnqK1vaPt84GlR8N/YOnRcnt406PxO0qP0qM0qTQAYfLL5g=="],
{{0,0},{17,17}},{0,1}],PlotRangePadding -> None,GridLinesStyle -> Directive[GrayLevel[
0.5`,0.4`]],Frame -> True,ImageSize -> 399.61804661015003`,FrameLabel -> {FormBox[
"\"predicted class\"",TraditionalForm],FormBox["\"actual class\"",TraditionalForm]},
Method -> CompressedData["1:eJylUttKAzEQrfWGeEGkT775DX5AqVarYGXpFt/j7qQNppkyk0Crv+GL/oEv/pPf4A+YWdHWZVsRA1lOdnLOnBzm6BZ7eqNWq/Fa/FwZ9rr+deoFC+l2BK2J4UTluXEDvSJVIaSZspDTQ+O183b/2CzRGhG0Qatg/QkGlyuapn5qgbdEL3gcKW+yEulwRuqQGg9NxpfOA6nMG3R6dYnNzQhugDjeo+NivZctHUTQj1p3XQwMCbIpVOvzqgXoUwBej+BcWYaKRmdaQ+Z5qSF554UZDG3c/jO1BTelE8U00Mj/UnFvXiZB4/6hJZbahGNrHPDPd1dEpQlAI41OAzFSF3P4DqdCd2xVBiNwfqmuWJ+kElvL2oraNJXjNbpyi/3ZZCQW/e+jtCuEWDHuj4O7I0C5ASziPT/Jeml+ACDqxdw="],
FrameTicks -> CompressedData["1:eJy1mM1KA0EQhFcJKCiIHkQ8iImIiAQ3f/6cIhL04inJC0RUCEQXNhE8+qg+huLF2QkqyGiqnK4chmQzdH87u9NdU+XrrHs3nyTJuOSGq+F48uPX6u//5UnxeU7PppcX3HCR5ffn2dP0wpIbutlkMBlmD+5ir5hQ6XUut2uV70Ddx9Gtn+lmfE6eBi5mrLihnw9uhsXlwagIH2JIDlGGxS+G1ByiykPYr8QBD1E3h9jnIRrmEHs8RNMcYpeHaJlD7PAQR+YQZR7i2Bxii65V9ptjk2aw3xvrNIP91lijGex3xjLNYL8xSjSD/b54bbMMJ+YMLzTDaRTDv5RNb859T2N0CRkhICp8hFqMIiAjBNq5j1CP6cU+QiOmkZIRAl2QjBBoYeRKBvoPGSHQPchnEaj9JEOgcpMMgbrrIzRjqiYZIVDzyLsIVCyUYXb1weuhh55RCTeqnf57+a1t3xH8q2OdHe6JvphaZ4dVgeTeYV0kee6wMiyyt6yzw9pYsvLw6UDy1sEHJMnKw2dEycrDx2TJOw87BZLssFkiyQ77RV4qWWeHLTNJdtg1VKw87ptGZzfUGriHq1MchIerEx6Eh6vTH4SHq5MhhIerUyOEh6sTJYSHq9MmhIerkyiEh6tTKriHq9MruIerUy24h6vTLriHq1MwuIer0zG4h6tTM7iHq9M0uIf7F8MH/ugTeA=="],
Epilog -> CompressedData["1:"],
FrameTicksStyle -> 12.236178755399514`],StandardForm],"Output",CellLabel -> "Out[28]= ",
ExpressionUUID -> "f4fe04b4-8a46-4646-9474-cb78eb18b957"]},Open],ExpressionUUID -> "2e24dbd8-1a7b-4841-9159-70abed14061f"],Cell[
TextData[
{"It"," ","is"," ","possible"," ","to"," ","obtain"," ","better"," ","results",StyleBox[
RowBox[{","," "}]],"with"," ","a"," ","lower"," ","computation"," ","time",StyleBox[
RowBox[{","," "}]],"although"," ","there"," ","is"," ","a"," ","tradeoff"," ","because"," ","the"," ","dimensionality"," ","reduction"," ","task"," ","is"," ","time"," ","expensive",StyleBox[
RowBox[{")."," "}]],"\n","However",StyleBox[RowBox[{","," "}]],"since"," ","our"," ","dataset"," ","only"," ","has"," ","10"," ","images"," ","per"," ","class",StyleBox[
RowBox[{","," "}]],"our"," ","results"," ","are"," ","very"," ","sensitive"," ","to"," ","the"," ","choice"," ","of"," ","training","/","testing"," ","set","."}],
"Text",ExpressionUUID -> "9a52a14d-862b-4ac6-bf2f-6fd429a3d499"]},Open],ExpressionUUID -> "1b67af59-d505-4b4c-a486-262969999a84"]},
Open],ExpressionUUID -> "76ff82ad-7189-458a-b6d9-1c3b546a0d83"]},Open],ExpressionUUID -> "56d84a42-c027-4858-83e4-910b473c85e9"]},
Open],ExpressionUUID -> "5aa42db5-1cce-4886-8e6a-ead466117295"]},StyleDefinitions -> "Default.nb",
FrontEndVersion -> "12.3 for Wolfram Cloud 1.61 (October 22, 2021)",TaggingRules -> {"TryRealOnly" -> False}]